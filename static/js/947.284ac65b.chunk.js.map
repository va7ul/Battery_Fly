{"version":3,"file":"static/js/947.284ac65b.chunk.js","mappings":"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","sources":["components/Shared/ProductInformation/ProductInformation.styled.js","components/Shared/ProductInformation/ProductInformation.jsx","components/Shared/ProductPhoto/ProductPhoto.styled.js","components/Shared/ProductPhoto/ProductPhoto.jsx","redux/print3D/print3DSelectors.js","components/Modals/Modal3DPrint/Modal3DPrint.styled.js","components/Modals/Modal3DPrint/Modal3DPrint.jsx","components/Print3DPage/Print3D.styled.js","components/Print3DPage/Description/Description.styled.js","components/Print3DPage/Description/Description.jsx","components/Print3DPage/Options/CustomSelect/CustomSelect.styled.js","components/Print3DPage/Options/CustomSelect/CustomSelect.jsx","components/Print3DPage/Options/Options.styled.js","components/Print3DPage/Options/Options.jsx","components/Print3DPage/PriceList/PriceList.styled.js","components/Print3DPage/PriceList/PriceList.jsx","components/Print3DPage/Print3D.jsx","pages/Print3DPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const InfoBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n\n  @media screen and (min-width: 1280px) {\n    gap: 20px;\n  }\n`;\n\nexport const Subject = styled.h2`\n  height: 30px;\n  font-size: 15px;\n  font-weight: 400;\n  background: ${props => props.theme.colors.greyBackgroundPaper};\n  border-radius: 12px;\n  text-align: center;\n  padding: 6px;\n\n  @media screen and (min-width: 1280px) {\n    height: 42px;\n    font-size: 24px;\n    font-weight: 500;\n  }\n`;\n\nexport const Info = styled.div`\n  font-size: 10px;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\n","import { InfoBox, Subject, Info } from './ProductInformation.styled';\n\nexport const ProductInformation = ({ information }) => {\n  const newInfo = information.split(';');\n  return (\n    <InfoBox>\n      <Subject>Опис</Subject>\n      <Info>\n        {newInfo.map(item => (\n          <div key={item}>\n            <div>{item}</div>\n          </div>\n        ))}\n      </Info>\n    </InfoBox>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SliderDiv = styled.div`\n  width: 310px;\n  height: 200px;\n  margin: 0 auto;\n  margin-bottom: 50px;\n\n  .slick-dots li {\n    width: 50px;\n    height: 40px;\n    border-radius: 6px;\n  }\n\n  .slick-dots {\n    height: 40px;\n    bottom: -38px;\n  }\n\n  .slick-list {\n    cursor: grab;\n  }\n\n  .slick-prev:before,\n  .slick-next:before {\n    color: ${props => props.theme.colors.hoverColor};\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 518px;\n    height: 390px;\n    margin-bottom: 95px;\n\n    .slick-dots {\n      height: 60px;\n      bottom: -65px;\n    }\n\n    .slick-dots li {\n      width: 80px;\n      height: 60px;\n      border-radius: 12px;\n    }\n\n    .slick-prev:before,\n    .slick-next:before {\n      font-size: 40px;\n    }\n\n    .slick-prev {\n      left: -45px;\n    }\n  }\n`;\n\nexport const Image = styled.img`\n  width: 320px;\n  height: 200px;\n  object-fit: cover;\n  border-radius: 12px;\n  box-shadow: 0px 2px 2px 0px rgba(0, 0, 0, 0.15);\n  margin-bottom: 5px;\n\n  @media screen and (min-width: 1280px) {\n    min-width: 518px;\n    height: 390px;\n    border-radius: 20px;\n    margin-bottom: 30px;\n  }\n`;\n\nexport const ImageBig = styled.img`\n  width: 310px;\n  height: 200px;\n  object-fit: cover;\n  border-radius: 12px;\n\n  @media screen and (min-width: 1280px) {\n    min-width: 518px;\n    height: 390px;\n    border-radius: 20px;\n  }\n`;\n\nexport const ImageSmall = styled.img`\n  width: 50px;\n  height: 40px;\n  object-fit: cover;\n  border-radius: 6px;\n\n  @media screen and (min-width: 1280px) {\n    width: 80px;\n    height: 60px;\n    border-radius: 8px;\n  }\n`;\n","import Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport { SliderDiv, ImageSmall, ImageBig, Image } from './ProductPhoto.styled';\n\nexport const ProductPhoto = ({ name, image }) => {\n  const settings = {\n    customPaging: function (i) {\n      return (\n        <a href={image[i]}>\n          <ImageSmall src={image[i]} alt={name} />\n        </a>\n      );\n    },\n    dots: true,\n    dotsClass: 'slick-dots slick-thumb',\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    focusOnSelect: true,\n    adaptiveHeight: true,\n  };\n\n  return image.length > 1 ? (\n    <SliderDiv className=\"slider-container\">\n      <Slider {...settings}>\n        {image.map(item => (\n          <div key={item}>\n            <ImageBig src={item} alt={name} />\n          </div>\n        ))}\n      </Slider>\n    </SliderDiv>\n  ) : (\n    <Image src={image[0]} alt={name} />\n  );\n};\n","export const selectPrint3DIsLoading = state => state.print3D.isLoading;\nexport const selectPrint3DError = state => state.print3D.error;\nexport const selectPrint3D = state => state.print3D.result;\nexport const selectedAccuracy = state => state.print3D.selectedAccuracy;\nexport const selectedPlactic = state => state.print3D.selectedPlactic;\nexport const selectedColor = state => state.print3D.selectedColor;\n","import styled, { createGlobalStyle } from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Wrapper = styled.div`\n  max-width: 357px;\n  padding: 36px 48px;\n\n  @media (min-width: 1280px) {\n    max-width: 630px;\n    padding: 40px 76px;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 20px;\n\n  @media (min-width: 1280px) {\n    font-size: 36px;\n    margin-bottom: 40px;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const StyledField = styled(Field)`\n  width: 261px;\n  height: 28px;\n  padding: 4px 8px;\n  color: ${props => props.theme.colors.textPrimary};\n  border: 1px solid ${props => props.theme.colors.textPrimary};\n  border-radius: 6px;\n  background: transparent;\n  font-size: 14px;\n\n  &:focus {\n    color: ${props => props.theme.colors.textPrimary};\n    outline: none;\n    border: 2px solid ${props => props.theme.colors.hoverColor};\n  }\n\n  @media (min-width: 1280px) {\n    width: 476px;\n    height: 51px;\n    border-radius: 8px;\n    font-size: 24px;\n  }\n`;\n\nexport const StyledTextField = styled(Field)`\n  width: 261px;\n  height: 46px;\n  margin-top: 10px;\n  padding: 4px 8px;\n  color: ${props => props.theme.colors.textPrimary};\n  border: 1px solid ${props => props.theme.colors.textPrimary};\n  border-radius: 6px;\n  background: transparent;\n  overflow-x: auto;\n  font-size: 12px;\n\n  &::placeholder {\n    font-size: 10px;\n  }\n  &:focus {\n    color: ${props => props.theme.colors.textPrimary};\n    outline: none;\n    border: 2px solid ${props => props.theme.colors.hoverColor};\n  }\n\n  @media (min-width: 1280px) {\n    width: 476px;\n    height: 117px;\n    margin-top: 20px;\n    border-radius: 8px;\n    font-size: 20px;\n\n    &::placeholder {\n      font-size: 16px;\n    }\n  }\n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  color: ${props => props.theme.colors.error};\n  font-size: 8px;\n  padding-left: 8px;\n  margin-top: 4px;\n  align-self: start;\n\n  @media (min-width: 1280px) {\n    font-size: 12px;\n    padding-left: 10px;\n    margin-top: 8px;\n  }\n`;\n\nexport const PhoneFieldGlobalStyles = createGlobalStyle`\n.react-international-phone-input-container {\n    margin-top: 10px;\n    width: 261px;\n    height: 28px;\n\n    @media (min-width: 1280px) {\n    margin-top: 20px;\n    width: 476px;\n    height: 51px;\n  }\n  }\n\n.react-international-phone-input-container .react-international-phone-input{\n  &:focus {\n    color: ${props => props.theme.colors.textPrimary};\n    outline: none;\n    border: 2px solid ${props => props.theme.colors.hoverColor};\n  }\n}\n\n  .react-international-phone-input {\n    width: 224px;\n\n    @media (min-width: 1280px) {\n    width: 431px;\n  }\n  }\n  \n   .react-international-phone-input-container .react-international-phone-country-selector-button{\n    width:37px;\n    height: 28px;\n    background-color: rgba(31, 31, 31, 0.3);\n\n    @media (min-width: 1280px) {\n    width: 45px;\n    height: 51px;\n  }\n} \n`;\n\nexport const DivErrorMessage = styled.div`\n  color: ${props => props.theme.colors.error};\n  font-size: 8px;\n  padding-left: 8px;\n  margin-top: 4px;\n  align-self: start;\n\n  @media (min-width: 1280px) {\n    font-size: 12px;\n    padding-left: 10px;\n    margin-top: 8px;\n  }\n`;\n\nexport const Btn = styled.button`\n  max-width: 190px;\n  margin-top: 16px;\n  padding: 12px 10px;\n  border-radius: 6px;\n  border: none;\n  font-size: 15px;\n\n  background: ${props => props.theme.colors.secondary};\n\n  &:hover,\n  &:focus {\n    background: ${props => props.theme.colors.hoverColor};\n  }\n\n  @media (min-width: 1280px) {\n    max-width: 310px;\n    margin-top: 30px;\n    padding: 16px 20px;\n    border-radius: 12px;\n    font-size: 24px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport { PhoneInput } from 'react-international-phone';\nimport 'react-international-phone/style.css';\nimport { useMediaQuery } from 'react-responsive';\nimport toast from 'react-hot-toast';\nimport { nameSchema } from 'common/schemas/nameSchema';\nimport { isPhoneValid } from 'common/schemas/phoneSchema';\nimport {\n  selectedAccuracy,\n  selectedColor,\n  selectedPlactic,\n} from '../../../redux/print3D/print3DSelectors';\nimport { add3DPrintOrder } from '../../../redux/print3D/print3DOperations';\nimport { useAuth } from 'utils/hooks';\nimport LoaderForModals from '../LoaderForModals';\nimport { CloseButton } from '../SharedComponent/CloseButton/CloseButton';\nimport { ModalYellowGradient } from '../SharedComponent/ModalYellowGradient/ModalYellowGradient';\nimport { ModalAgree } from '../SharedComponent/ModalAgree/ModalAgree';\nimport { TextAgree } from '../SharedComponent/Text/Text';\nimport { theme } from '../../../styles/GlobalStyled';\nimport {\n  Btn,\n  DivErrorMessage,\n  PhoneFieldGlobalStyles,\n  StyledErrorMessage,\n  StyledField,\n  StyledForm,\n  StyledTextField,\n  Title,\n  Wrapper,\n} from './Modal3DPrint.styled';\n\nexport const Modal3DPrint = ({\n  isModal3DPrintOpen,\n  handleClose3DPrintModal,\n  file,\n}) => {\n  const isBigScreen = useMediaQuery({ query: '(min-width: 1280px)' });\n  const {\n    isLoggedIn,\n    userData: { firstName, tel: userTel },\n  } = useAuth();\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(false);\n  const [tel, setTel] = useState(isLoggedIn ? userTel : '+380');\n\n  const accuracy = useSelector(selectedAccuracy);\n  const plactic = useSelector(selectedPlactic);\n  const color = useSelector(selectedColor);\n\n  const isValidPhone = isPhoneValid(tel);\n\n  const [isModalAgreeOpen, setIsModalAgreeOpen] = useState(false);\n\n  const handleOpenAgreeModal = () => {\n    setIsModalAgreeOpen(true);\n    document.body.style.overflow = 'hidden';\n  };\n  const handleCloseAgreeModal = () => {\n    setIsModalAgreeOpen(false);\n    document.body.style.overflow = 'unset';\n  };\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      setTel(userTel);\n    }\n    if (!isLoggedIn) {\n      setTel('+380');\n    }\n  }, [isLoggedIn, userTel]);\n\n  return (\n    <>\n      {isLoading ? (\n        <LoaderForModals isLoading={isLoading} />\n      ) : (\n        <ModalYellowGradient\n          isModalOpen={isModal3DPrintOpen}\n          handleCloseModal={handleClose3DPrintModal}\n        >\n          <CloseButton handleCloseModal={handleClose3DPrintModal} />\n          <Wrapper>\n            <Title>3D Друк</Title>\n            <Formik\n              initialValues={{\n                name: isLoggedIn ? firstName : '',\n                text: '',\n              }}\n              validationSchema={nameSchema}\n              onSubmit={(values, _) => {\n                const formData = new FormData();\n                formData.append('userName', values.name.trim());\n                formData.append('tel', tel);\n                formData.append('text', values.text);\n                formData.append('accuracy', accuracy);\n                formData.append('plactic', plactic);\n                formData.append('color', color);\n                formData.append('file', file);\n\n                if (!isValidPhone || tel === '+380') {\n                  toast('Введіть свої особисті дані', {\n                    id: 'warning',\n                    icon: '👀',\n                    duration: 5000,\n                    style: {\n                      borderRadius: '10px',\n                      background: `${theme.colors.secondary}`,\n                      color: `${theme.colors.textPrimary}`,\n                    },\n                  });\n                } else {\n                  setIsLoading(true);\n                  dispatch(add3DPrintOrder(formData)).then(result => {\n                    setIsLoading(false);\n                    if (result.meta.requestStatus === 'fulfilled') {\n                      handleOpenAgreeModal();\n                    }\n                  });\n                  handleClose3DPrintModal();\n                }\n              }}\n            >\n              <StyledForm>\n                <StyledField\n                  name=\"name\"\n                  type=\"text\"\n                  placeholder=\"Ваше ім’я\"\n                  aria-label=\"Ім'я\"\n                />\n                <StyledErrorMessage name=\"name\" component=\"div\" />\n                <PhoneInput\n                  style={{\n                    '--react-international-phone-height': !isBigScreen\n                      ? '28px'\n                      : '51px',\n                    '--react-international-phone-background-color':\n                      'transparent',\n                    '--react-international-phone-border-color': `${theme.colors.textPrimary}`,\n                    '--react-international-phone-text-color': `${theme.colors.textPrimary}`,\n                    '--react-international-phone-font-size': !isBigScreen\n                      ? '14px'\n                      : '24px',\n                    '--react-international-phone-border-radius': !isBigScreen\n                      ? '6px'\n                      : '8px',\n                    '--react-international-phone-flag-width': !isBigScreen\n                      ? '16px'\n                      : '24px',\n                    '--react-international-phone-flag-height': !isBigScreen\n                      ? '16px'\n                      : '24px',\n                  }}\n                  defaultCountry=\"ua\"\n                  hideDropdown={true}\n                  value={tel}\n                  onChange={phone => setTel(phone)}\n                  aria-label=\"Телефон\"\n                />\n                {!isValidPhone && (\n                  <DivErrorMessage>\n                    Введіть свій номер телефону, будь ласка\n                  </DivErrorMessage>\n                )}\n                <StyledTextField\n                  component=\"textarea\"\n                  name=\"text\"\n                  type=\"text\"\n                  placeholder=\"Ваш коментар (за необхідності)\"\n                />\n                <StyledErrorMessage name=\"text\" component=\"div\" />\n                <Btn type=\"submit\">\n                  <div>Оформити замовлення</div>\n                </Btn>\n              </StyledForm>\n            </Formik>\n          </Wrapper>\n          <PhoneFieldGlobalStyles />\n        </ModalYellowGradient>\n      )}\n      <ModalAgree\n        isModalAgreeOpen={isModalAgreeOpen}\n        handleCloseAgreeModal={handleCloseAgreeModal}\n      >\n        <TextAgree>Дякуємо за замовлення.</TextAgree>\n        <TextAgree>Очікуйте на дзвінок від менеджера.</TextAgree>\n      </ModalAgree>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 20px;\n  max-width: 360px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 1280px) {\n    padding: 50px 110px;\n    max-width: 1280px;\n  }\n`;\n\nexport const MobCase = styled.div`\n  display: grid;\n  gap: 15px;\n  margin-bottom: 20px;\n`;\n\nexport const Box = styled.div`\n  display: grid;\n  gap: 20px;\n`;\n\nexport const Case = styled.div`\n  display: flex;\n  gap: 60px;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 16px;\n  font-weight: 600;\n  color: ${props => props.theme.colors.hoverColor};\n\n  @media screen and (min-width: 1280px) {\n    font-size: 36px;\n  }\n`;\n\nexport const OrderButton = styled.button`\n  width: 170px;\n  height: 40px;\n  font-size: 15px;\n  border-radius: 6px;\n  background: ${props => props.theme.colors.secondary};\n\n  &:hover,\n  :focus {\n    background: ${props => props.theme.colors.hoverColor};\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 270px;\n    height: 60px;\n    font-size: 24px;\n    border-radius: 20px;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  height: 30px;\n  font-size: 10px;\n\n  @media screen and (min-width: 1280px) {\n    height: 42px;\n    font-size: inherit;\n  }\n\n  ::-webkit-file-upload-button {\n    background: ${props => props.theme.colors.greyBackgroundPaper};\n    height: 30px;\n    padding: 8px 14px;\n    margin-right: 12px;\n    border-radius: 5px;\n    border: 1px solid;\n\n    @media screen and (min-width: 1280px) {\n      height: 42px;\n    }\n\n    :is(:hover, :focus) {\n      cursor: pointer;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  gap: 10px;\n`;\n\nexport const Desc = styled.ul`\n  font-size: 10px;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Item = styled.li`\n  list-style: outside;\n  margin-left: 16px;\n`;\n\nexport const Subtitle = styled.p`\n  font-size: 10px;\n  font-weight: 500;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n    font-weight: 600;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { selectPrint3D } from '../../../redux/print3D/print3DSelectors';\nimport { Container, Desc, Item, Subtitle } from './Description.styled';\n\nexport const Description = () => {\n  const { description } = useSelector(selectPrint3D);\n\n  const newDescription = description.split(';');\n\n  return (\n    <Container>\n      <Subtitle>Технічні особливості:</Subtitle>\n      <Desc>\n        {newDescription.map(i => (\n          <Item key={i}>{i}</Item>\n        ))}\n      </Desc>\n    </Container>\n  );\n};\n","export const selectStyles = {\n  control: styles => ({\n    ...styles,\n    backgroundColor: 'rgba(225, 225, 225, 1)',\n    borderRadius: '6px',\n    borderStyle: 'none',\n    width: '132px',\n    maxHeight: '30px',\n    minHeight: '25px',\n    border: '1px solid rgb(31, 31, 31)',\n    ':hover': { borderColor: 'currentColor', boxShadow: 'none' },\n    '@media only screen and (min-width: 1280px)': {\n      width: '220px',\n      minHeight: '42px',\n      borderRadius: '12px',\n    },\n  }),\n  menu: styles => ({\n    ...styles,\n    backgroundColor: 'rgba(225, 225, 225, 1)',\n    fontSize: '10px',\n    width: '132px',\n    border: '1px solid rgb(31, 31, 31)',\n    '@media only screen and (min-width: 1280px)': {\n      fontSize: '20px',\n      width: '220px',\n      borderRadius: '12px',\n    },\n  }),\n  option: (styles, { isDisabled, isFocused, isSelected }) => {\n    return {\n      ...styles,\n      backgroundColor: isFocused ? 'rgb(255, 208, 100)' : undefined,\n      color: !isDisabled\n        ? isSelected\n          ? 'rgb(31, 31, 31);'\n          : 'rgb(31, 31, 31);'\n        : undefined,\n      cursor: isDisabled ? 'not-allowed' : 'default',\n      padding: '2px 8px',\n      ':active': {\n        ...styles[':active'],\n        backgroundColor: !isDisabled\n          ? isSelected\n            ? 'rgb(255, 208, 100)'\n            : 'rgb(255, 208, 100)'\n          : undefined,\n      },\n      '@media only screen and (min-width: 1280px)': {\n        borderRadius: '6px',\n      },\n    };\n  },\n  placeholder: styles => ({\n    ...styles,\n    fontSize: '10px',\n    padding: '0px 8px',\n    margin: 0,\n    '@media only screen and (min-width: 1280px)': {\n      fontSize: '20px',\n    },\n  }),\n  indicatorsContainer: styles => ({\n    ...styles,\n    height: '30px',\n    width: '38px',\n    '@media only screen and (min-width: 1280px)': {\n      height: '42px',\n      width: '40px',\n    },\n  }),\n  valueContainer: styles => ({ ...styles, padding: 0 }),\n  singleValue: styles => ({\n    ...styles,\n    fontSize: '10px',\n    margin: 0,\n    padding: '8px',\n    '@media only screen and (min-width: 1280px)': {\n      fontSize: '20px',\n    },\n  }),\n};\n","import Select from 'react-select';\nimport { useDispatch } from 'react-redux';\nimport { selectStyles } from './CustomSelect.styled';\n\nexport const CustomSelect = ({ data, placeholder, action }) => {\n  const dispatch = useDispatch();\n\n  const options = data.map(item => {\n    return {\n      value: item,\n      label: item,\n    };\n  });\n\n  const handleSelect = option => {\n    const value = option.value;\n    dispatch(action(value));\n  };\n\n  return (\n    <Select\n      options={options}\n      onChange={handleSelect}\n      placeholder={placeholder}\n      isSearchable={false}\n      styles={selectStyles}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const OptionsContainer = styled.div`\n  display: grid;\n  gap: 10px;\n\n  @media screen and (min-width: 1280px) {\n    gap: 15px;\n  }\n`;\n\nexport const Subtitle = styled.p`\n  font-size: 10px;\n  font-weight: 500;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n    font-weight: 600;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { CustomSelect } from './CustomSelect/CustomSelect';\nimport { selectPrint3D } from '../../../redux/print3D/print3DSelectors';\nimport { OptionsContainer, Subtitle } from './Options.styled';\nimport {\n  setAccuracy,\n  setPlactic,\n  setColor,\n} from '../../../redux/print3D/print3DSlice';\n\nexport const Options = () => {\n  const { accuracy, plactic, color } = useSelector(selectPrint3D);\n\n  return (\n    <OptionsContainer>\n      <Subtitle>Параметри друку:</Subtitle>\n      <CustomSelect\n        data={accuracy}\n        placeholder={'Точність'}\n        action={setAccuracy}\n      />\n      <CustomSelect\n        data={plactic}\n        placeholder={'Тип пластику'}\n        action={setPlactic}\n      />\n      <CustomSelect data={color} placeholder={'Колір'} action={setColor} />\n    </OptionsContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.p`\n  font-size: 15px;\n  font-weight: 500;\n  text-align: center;\n  margin-top: 15px;\n  margin-bottom: 10px;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 24px;\n    margin-top: 20px;\n    margin-bottom: 15px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: grid;\n  gap: 25px;\n\n  @media screen and (min-width: 1280px) {\n    gap: 45px;\n  }\n`;\n\nexport const Table = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  font-size: 10px;\n\n  caption {\n    font-size: 12px;\n    text-align: left;\n    margin-bottom: 5px;\n  }\n\n  th {\n    font-weight: 600;\n  }\n\n  th,\n  td {\n    /* font-weight: 400; */\n    border: 1px solid black;\n    padding: 7px 0px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n\n    caption {\n      font-size: 20px;\n      margin-bottom: 10px;\n    }\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { selectPrint3D } from '../../../redux/print3D/print3DSelectors';\nimport { Wrapper, Title, Table } from './PriceList.styled';\n\nexport const PriceList = () => {\n  const { table1, table2 } = useSelector(selectPrint3D);\n\n  const data = [table1, table2];\n\n  return (\n    <>\n      <Title>Ціни на друк</Title>\n      <Wrapper>\n        {data.map(\n          data =>\n            data[100] && (\n              <Table key={data.nameTable}>\n                <caption>{data.nameTable}</caption>\n                <thead>\n                  <tr>\n                    <th rowSpan={2}>Точність</th>\n                    <th rowSpan={2}>Ціна за грам</th>\n                    <th colSpan={3}>Ціна за грам, при замовленні від</th>\n                  </tr>\n                  <tr>\n                    <th>50 грам</th>\n                    <th>100 грам</th>\n                    <th>250 грам</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  <tr>\n                    <td>100 мікрон</td>\n                    <td>{data[100][1]} грн</td>\n                    <td>{data[100][50]} грн</td>\n                    <td>{data[100][100]} грн</td>\n                    <td>{data[100][250]} грн</td>\n                  </tr>\n                  <tr>\n                    <td>200 мікрон</td>\n                    <td>{data[200][1]} грн</td>\n                    <td>{data[200][50]} грн</td>\n                    <td>{data[200][100]} грн</td>\n                    <td>{data[200][250]} грн</td>\n                  </tr>\n                  <tr>\n                    <td>300 мікрон</td>\n                    <td>{data[300][1]} грн</td>\n                    <td>{data[300][50]} грн</td>\n                    <td>{data[300][100]} грн</td>\n                    <td>{data[300][250]} грн</td>\n                  </tr>\n                </tbody>\n              </Table>\n            )\n        )}\n      </Wrapper>\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport {\n  selectPrint3D,\n  selectedAccuracy,\n  selectedPlactic,\n  selectedColor,\n} from '../../redux/print3D/print3DSelectors';\nimport { ProductPhoto } from 'components/Shared/ProductPhoto/ProductPhoto';\nimport { Modal3DPrint } from 'components/Modals/Modal3DPrint/Modal3DPrint';\nimport {\n  Wrapper,\n  MobCase,\n  Box,\n  Case,\n  Title,\n  OrderButton,\n  StyledInput,\n} from './Print3D.styled';\nimport { ProductInformation } from 'components/Shared/ProductInformation/ProductInformation';\nimport { Description } from './Description/Description';\nimport { Options } from './Options/Options';\nimport { PriceList } from './PriceList/PriceList';\n// import { add3DPrintOrder } from '../../redux/print3D/print3DOperations';\n\nexport const Print3D = () => {\n  const desktopVersion = useMediaQuery({ query: '(min-width:1280px)' });\n  const [isModal3DPrintOpen, setIsModal3DPrintOpen] = useState(false);\n  const [file, setFile] = useState('');\n  // const dispatch = useDispatch();\n\n  const handleOpen3DPrintModal = () => {\n    // let formData = new FormData();\n    // formData.append('file', file);\n\n    // for (const value of formData.values()) {\n    //   console.log(value);\n    // }  //це для відображення полів, які відправляєш\n\n    // dispatch(add3DPrintOrder(formData));\n\n    if (!accuracy || !plactic || !color) {\n      return window.alert('Оберіть параметри друку!');\n    }\n\n    if (!file) {\n      return window.alert('Прикріпіть файл для друку!');\n    }\n\n    setIsModal3DPrintOpen(true);\n    document.body.style.overflow = 'hidden';\n  };\n  const handleClose3DPrintModal = () => {\n    setIsModal3DPrintOpen(false);\n    document.body.style.overflow = 'unset';\n  };\n\n  const { name, image, information } = useSelector(selectPrint3D);\n  const accuracy = useSelector(selectedAccuracy);\n  const plactic = useSelector(selectedPlactic);\n  const color = useSelector(selectedColor);\n\n  const attachFile = e => {\n    setFile(e.currentTarget.files[0]);\n  };\n\n  return (\n    <Wrapper>\n      {!desktopVersion ? (\n        <MobCase>\n          <Title>{name}</Title>\n          <ProductPhoto name={name} image={image} />\n          <Description />\n          <Options />\n          <form>\n            <StyledInput\n              id=\"file\"\n              name=\"file\"\n              type=\"file\"\n              onChange={attachFile}\n            />\n          </form>\n          <OrderButton onClick={handleOpen3DPrintModal}>\n            Замовити друк\n          </OrderButton>\n        </MobCase>\n      ) : (\n        <Case>\n          <ProductPhoto name={name} image={image} />\n          <Box>\n            <Title>{name}</Title>\n            <Description />\n            <Options />\n            <form>\n              <StyledInput\n                id=\"file\"\n                name=\"file\"\n                type=\"file\"\n                onChange={attachFile}\n              />\n            </form>\n            <OrderButton\n              // disabled={!accuracy || !plactic || !color || !file}\n              onClick={handleOpen3DPrintModal}\n            >\n              Замовити друк\n            </OrderButton>\n          </Box>\n        </Case>\n      )}\n      {information && <ProductInformation information={information} />}\n      <PriceList />\n      <Modal3DPrint\n        isModal3DPrintOpen={isModal3DPrintOpen}\n        handleClose3DPrintModal={handleClose3DPrintModal}\n        file={file}\n      />\n    </Wrapper>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getPrint3D } from '../redux/print3D/print3DOperations';\nimport {\n  selectPrint3DIsLoading,\n  selectPrint3DError,\n} from '../redux/print3D/print3DSelectors';\nimport { CustomLoader } from 'components/Shared/CustomLoader/CustomLoader';\nimport { Print3D } from 'components/Print3DPage/Print3D';\n\nconst Print3DPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectPrint3DIsLoading);\n  const error = useSelector(selectPrint3DError);\n\n  useEffect(() => {\n    dispatch(getPrint3D());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <CustomLoader />}\n      {!isLoading && !error && <Print3D />}\n    </>\n  );\n};\n\nexport default Print3DPage;\n"],"names":["InfoBox","styled","div","_templateObject","_taggedTemplateLiteral","Subject","h2","_templateObject2","props","theme","colors","greyBackgroundPaper","Info","_templateObject3","ProductInformation","_ref","information","newInfo","split","_jsxs","children","_jsx","map","item","SliderDiv","hoverColor","Image","img","ImageBig","ImageSmall","_templateObject4","ProductPhoto","name","image","settings","customPaging","i","href","src","alt","dots","dotsClass","infinite","speed","slidesToShow","slidesToScroll","focusOnSelect","adaptiveHeight","length","className","Slider","selectPrint3DIsLoading","state","print3D","isLoading","selectPrint3DError","error","selectPrint3D","result","selectedAccuracy","selectedPlactic","selectedColor","Wrapper","Title","h1","StyledForm","Form","StyledField","Field","textPrimary","StyledTextField","_templateObject5","StyledErrorMessage","ErrorMessage","_templateObject6","PhoneFieldGlobalStyles","createGlobalStyle","_templateObject7","DivErrorMessage","_templateObject8","Btn","button","_templateObject9","secondary","Modal3DPrint","isModal3DPrintOpen","handleClose3DPrintModal","file","isBigScreen","useMediaQuery","query","isLoggedIn","userData","firstName","tel","userTel","useAuth","dispatch","useDispatch","setIsLoading","useState","setTel","accuracy","useSelector","plactic","color","isValidPhone","isPhoneValid","isModalAgreeOpen","setIsModalAgreeOpen","useEffect","_Fragment","LoaderForModals","ModalYellowGradient","isModalOpen","handleCloseModal","CloseButton","Formik","initialValues","text","validationSchema","nameSchema","onSubmit","values","_","formData","FormData","append","trim","add3DPrintOrder","then","meta","requestStatus","document","body","style","overflow","toast","id","icon","duration","borderRadius","background","concat","type","placeholder","component","PhoneInput","defaultCountry","hideDropdown","value","onChange","phone","ModalAgree","handleCloseAgreeModal","TextAgree","MobCase","Box","Case","OrderButton","StyledInput","input","Container","Desc","ul","Item","li","Subtitle","p","Description","description","newDescription","selectStyles","control","styles","backgroundColor","borderStyle","width","maxHeight","minHeight","border","borderColor","boxShadow","menu","fontSize","option","isDisabled","isFocused","isSelected","undefined","cursor","padding","margin","indicatorsContainer","height","valueContainer","singleValue","CustomSelect","data","action","options","label","Select","isSearchable","OptionsContainer","Options","setAccuracy","setPlactic","setColor","Table","table","PriceList","table1","table2","nameTable","rowSpan","colSpan","Print3D","desktopVersion","setIsModal3DPrintOpen","setFile","handleOpen3DPrintModal","window","alert","attachFile","e","currentTarget","files","onClick","Print3DPage","getPrint3D","CustomLoader"],"sourceRoot":""}