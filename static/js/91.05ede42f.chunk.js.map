{"version":3,"file":"static/js/91.05ede42f.chunk.js","mappings":"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","sources":["common/schemas/nameSchema.js","common/schemas/phoneSchema.js","components/Shared/ProductInformation/ProductInformation.styled.js","components/Shared/ProductInformation/ProductInformation.jsx","components/Shared/ProductPhoto/ProductPhoto.styled.js","components/Shared/ProductPhoto/ProductPhoto.jsx","redux/print3D/print3DSelectors.js","components/Modals/Modal3DPrint/Modal3DPrint.styled.js","components/Modals/Modal3DPrint/Modal3DPrint.jsx","components/Print3DPage/Print3D.styled.js","components/Print3DPage/Description/Description.styled.js","components/Print3DPage/Description/Description.jsx","components/Print3DPage/Options/CustomSelect/CustomSelect.styled.js","components/Print3DPage/Options/CustomSelect/CustomSelect.jsx","components/Print3DPage/Options/Options.styled.js","components/Print3DPage/Options/Options.jsx","components/Print3DPage/PriceList/PriceList.styled.js","components/Print3DPage/PriceList/PriceList.jsx","components/Print3DPage/Print3D.jsx","pages/Print3DPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\nimport { nameRegexForFeedback } from '../regex';\n\nexport const nameSchema = Yup.object({\n  name: Yup.string()\n    .min(2, \"Введіть своє ім'я, будь ласка\")\n    .max(30, \"Введіть своє ім'я, будь ласка\")\n    .trim(\"Введіть своє ім'я, будь ласка\")\n    .matches(nameRegexForFeedback, \"Введіть своє ім'я, будь ласка\")\n    .required(\"Введіть своє ім'я, будь ласка\"),\n});\n\n\n","import { PhoneNumberUtil } from 'google-libphonenumber';\n\nconst phoneUtil = PhoneNumberUtil.getInstance();\n\nexport const isPhoneValid = phone => {\n  try {\n    if (phone === '+380') return true;\n    return phoneUtil.isValidNumber(phoneUtil.parseAndKeepRawInput(phone));\n  } catch (error) {\n    return false;\n  }\n};\n","import styled from 'styled-components';\n\nexport const InfoBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n\n  @media screen and (min-width: 1280px) {\n    gap: 20px;\n  }\n`;\n\nexport const Subject = styled.h2`\n  height: 30px;\n  font-size: 15px;\n  font-weight: 400;\n  background: ${props => props.theme.colors.greyBackgroundPaper};\n  border-radius: 12px;\n  text-align: center;\n  padding: 6px;\n\n  @media screen and (min-width: 1280px) {\n    height: 42px;\n    font-size: 24px;\n    font-weight: 500;\n  }\n`;\n\nexport const Info = styled.div`\n  font-size: 10px;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\n","import { InfoBox, Subject, Info } from './ProductInformation.styled';\n\nexport const ProductInformation = ({ information }) => {\n  const newInfo = information.split(';');\n  return (\n    <InfoBox>\n      <Subject>Опис</Subject>\n      <Info>\n        {newInfo.map(item => (\n          <div key={item}>\n            <div>{item}</div>\n          </div>\n        ))}\n      </Info>\n    </InfoBox>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SliderDiv = styled.div`\n  width: 310px;\n  height: 200px;\n  margin: 0 auto;\n  margin-bottom: 50px;\n\n  .slick-dots li {\n    width: 50px;\n    height: 40px;\n    border-radius: 6px;\n  }\n\n  .slick-dots {\n    height: 40px;\n    bottom: -38px;\n  }\n\n  .slick-list {\n    cursor: grab;\n  }\n\n  .slick-prev:before,\n  .slick-next:before {\n    color: ${props => props.theme.colors.hoverColor};\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 518px;\n    height: 390px;\n    margin-bottom: 95px;\n\n    .slick-dots {\n      height: 60px;\n      bottom: -65px;\n    }\n\n    .slick-dots li {\n      width: 80px;\n      height: 60px;\n      border-radius: 12px;\n    }\n\n    .slick-prev:before,\n    .slick-next:before {\n      font-size: 40px;\n    }\n\n    .slick-prev {\n      left: -45px;\n    }\n  }\n`;\n\nexport const Image = styled.img`\n  width: 320px;\n  height: 200px;\n  object-fit: cover;\n  border-radius: 12px;\n  box-shadow: 0px 2px 2px 0px rgba(0, 0, 0, 0.15);\n  margin-bottom: 5px;\n\n  @media screen and (min-width: 1280px) {\n    min-width: 518px;\n    height: 390px;\n    border-radius: 20px;\n    margin-bottom: 30px;\n  }\n`;\n\nexport const ImageBig = styled.img`\n  width: 310px;\n  height: 200px;\n  object-fit: cover;\n  border-radius: 12px;\n\n  @media screen and (min-width: 1280px) {\n    min-width: 518px;\n    height: 390px;\n    border-radius: 20px;\n  }\n`;\n\nexport const ImageSmall = styled.img`\n  width: 50px;\n  height: 40px;\n  object-fit: cover;\n  border-radius: 6px;\n\n  @media screen and (min-width: 1280px) {\n    width: 80px;\n    height: 60px;\n    border-radius: 8px;\n  }\n`;\n","import Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport { SliderDiv, ImageSmall, ImageBig, Image } from './ProductPhoto.styled';\n\nexport const ProductPhoto = ({ name, image }) => {\n  const settings = {\n    customPaging: function (i) {\n      return (\n        <a href={image[i]}>\n          <ImageSmall src={image[i]} alt={name} />\n        </a>\n      );\n    },\n    dots: true,\n    dotsClass: 'slick-dots slick-thumb',\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    focusOnSelect: true,\n    adaptiveHeight: true,\n  };\n\n  return image.length > 1 ? (\n    <SliderDiv className=\"slider-container\">\n      <Slider {...settings}>\n        {image.map(item => (\n          <div key={item}>\n            <ImageBig src={item} alt={name} />\n          </div>\n        ))}\n      </Slider>\n    </SliderDiv>\n  ) : (\n    <Image src={image[0]} alt={name} />\n  );\n};\n","export const selectPrint3DIsLoading = state => state.print3D.isLoading;\nexport const selectPrint3DError = state => state.print3D.error;\nexport const selectPrint3D = state => state.print3D.result;\nexport const selectedAccuracy = state => state.print3D.selectedAccuracy;\nexport const selectedPlactic = state => state.print3D.selectedPlactic;\nexport const selectedColor = state => state.print3D.selectedColor;\n","import styled, { createGlobalStyle } from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Wrapper = styled.div`\n  max-width: 357px;\n  padding: 36px 48px;\n\n  @media (min-width: 1280px) {\n    max-width: 630px;\n    padding: 40px 76px;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 20px;\n\n  @media (min-width: 1280px) {\n    font-size: 36px;\n    margin-bottom: 40px;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const StyledField = styled(Field)`\n  width: 261px;\n  height: 28px;\n  padding: 4px 8px;\n  color: ${props => props.theme.colors.textPrimary};\n  border: 1px solid ${props => props.theme.colors.textPrimary};\n  border-radius: 6px;\n  background: transparent;\n  font-size: 14px;\n\n  &:focus {\n    color: ${props => props.theme.colors.textPrimary};\n    outline: none;\n    border: 2px solid ${props => props.theme.colors.hoverColor};\n  }\n\n  @media (min-width: 1280px) {\n    width: 476px;\n    height: 51px;\n    border-radius: 8px;\n    font-size: 24px;\n  }\n`;\n\nexport const StyledTextField = styled(Field)`\n  width: 261px;\n  height: 46px;\n  margin-top: 10px;\n  padding: 4px 8px;\n  color: ${props => props.theme.colors.textPrimary};\n  border: 1px solid ${props => props.theme.colors.textPrimary};\n  border-radius: 6px;\n  background: transparent;\n  overflow-x: auto;\n  font-size: 12px;\n\n  &::placeholder {\n    font-size: 10px;\n  }\n  &:focus {\n    color: ${props => props.theme.colors.textPrimary};\n    outline: none;\n    border: 2px solid ${props => props.theme.colors.hoverColor};\n  }\n\n  @media (min-width: 1280px) {\n    width: 476px;\n    height: 117px;\n    margin-top: 20px;\n    border-radius: 8px;\n    font-size: 20px;\n\n    &::placeholder {\n      font-size: 16px;\n    }\n  }\n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  color: ${props => props.theme.colors.error};\n  font-size: 8px;\n  padding-left: 8px;\n  margin-top: 4px;\n  align-self: start;\n\n  @media (min-width: 1280px) {\n    font-size: 12px;\n    padding-left: 10px;\n    margin-top: 8px;\n  }\n`;\n\nexport const PhoneFieldGlobalStyles = createGlobalStyle`\n.react-international-phone-input-container {\n    margin-top: 10px;\n    width: 261px;\n    height: 28px;\n\n    @media (min-width: 1280px) {\n    margin-top: 20px;\n    width: 476px;\n    height: 51px;\n  }\n  }\n\n.react-international-phone-input-container .react-international-phone-input{\n  &:focus {\n    color: ${props => props.theme.colors.textPrimary};\n    outline: none;\n    border: 2px solid ${props => props.theme.colors.hoverColor};\n  }\n}\n\n  .react-international-phone-input {\n    width: 224px;\n\n    @media (min-width: 1280px) {\n    width: 431px;\n  }\n  }\n  \n   .react-international-phone-input-container .react-international-phone-country-selector-button{\n    width:37px;\n    height: 28px;\n    background-color: rgba(31, 31, 31, 0.3);\n\n    @media (min-width: 1280px) {\n    width: 45px;\n    height: 51px;\n  }\n} \n`;\n\nexport const DivErrorMessage = styled.div`\n  color: ${props => props.theme.colors.error};\n  font-size: 8px;\n  padding-left: 8px;\n  margin-top: 4px;\n  align-self: start;\n\n  @media (min-width: 1280px) {\n    font-size: 12px;\n    padding-left: 10px;\n    margin-top: 8px;\n  }\n`;\n\nexport const Btn = styled.button`\n  max-width: 190px;\n  margin-top: 16px;\n  padding: 12px 10px;\n  border-radius: 6px;\n  border: none;\n  font-size: 15px;\n\n  background: ${props => props.theme.colors.secondary};\n\n  &:hover,\n  &:focus {\n    background: ${props => props.theme.colors.hoverColor};\n  }\n\n  @media (min-width: 1280px) {\n    max-width: 310px;\n    margin-top: 30px;\n    padding: 16px 20px;\n    border-radius: 12px;\n    font-size: 24px;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport { PhoneInput } from 'react-international-phone';\nimport 'react-international-phone/style.css';\nimport { useMediaQuery } from 'react-responsive';\nimport { nameSchema } from 'common/schemas/nameSchema';\nimport { isPhoneValid } from 'common/schemas/phoneSchema';\nimport {\n  selectedAccuracy,\n  selectedColor,\n  selectedPlactic,\n} from '../../../redux/print3D/print3DSelectors';\nimport { add3DPrintOrder } from '../../../redux/print3D/print3DOperations';\nimport { useAuth } from 'utils/hooks';\nimport { CloseButton } from '../SharedComponent/CloseButton/CloseButton';\nimport { ModalYellowGradient } from '../SharedComponent/ModalYellowGradient/ModalYellowGradient';\nimport { ModalAgree } from '../SharedComponent/ModalAgree/ModalAgree';\nimport { TextAgree } from '../SharedComponent/Text/Text';\nimport { theme } from '../../../styles/GlobalStyled';\nimport {\n  Btn,\n  DivErrorMessage,\n  PhoneFieldGlobalStyles,\n  StyledErrorMessage,\n  StyledField,\n  StyledForm,\n  StyledTextField,\n  Title,\n  Wrapper,\n} from './Modal3DPrint.styled';\n\n\nexport const Modal3DPrint = ({\n  isModal3DPrintOpen,\n  handleClose3DPrintModal,\n  file,\n}) => {\n  const isBigScreen = useMediaQuery({ query: '(min-width: 1280px)' });\n  const {isLoggedIn,\n    userData: { firstName, tel: userTel },\n  } = useAuth();\n  const dispatch = useDispatch();\n  \n  const [tel, setTel] = useState(isLoggedIn ? userTel : '');\n\n  const accuracy = useSelector(selectedAccuracy);\n  const plactic = useSelector(selectedPlactic);\n  const color = useSelector(selectedColor);\n\n  const isValidPhone = isPhoneValid(tel);\n\n  const [isModalAgreeOpen, setIsModalAgreeOpen] = useState(false);\n\n  const handleOpenAgreeModal = () => {\n    setIsModalAgreeOpen(true);\n    document.body.style.overflow = 'hidden';\n  };\n  const handleCloseAgreeModal = () => {\n    setIsModalAgreeOpen(false);\n    document.body.style.overflow = 'unset';\n  };\n\n  return (\n    <>\n      <ModalYellowGradient\n        isModalOpen={isModal3DPrintOpen}\n        handleCloseModal={handleClose3DPrintModal}\n      >\n        <CloseButton handleCloseModal={handleClose3DPrintModal} />\n        <Wrapper>\n          <Title>3D Друк</Title>\n          <Formik\n            initialValues={{\n              name: isLoggedIn ? firstName : '',\n              text: '',\n            }}\n            validationSchema={nameSchema}\n            onSubmit={(values, _) => {\n              const formData = new FormData();\n              formData.append('userName', values.name);\n              formData.append('tel', tel);\n              formData.append('text', values.text);\n              formData.append('accuracy', accuracy);\n              formData.append('plactic', plactic);\n              formData.append('color', color);\n              formData.append('file', file);\n\n              dispatch(add3DPrintOrder(formData)).then(result => {\n                if (result.meta.requestStatus === 'fulfilled') {\n                  handleOpenAgreeModal();\n                }\n              });\n              handleClose3DPrintModal();\n            }}\n          >\n            <StyledForm>\n              <StyledField\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Ваше ім’я\"\n                aria-label=\"Ім'я\"\n              />\n              <StyledErrorMessage name=\"name\" component=\"div\" />\n              <PhoneInput\n                style={{\n                  '--react-international-phone-height': !isBigScreen\n                    ? '28px'\n                    : '51px',\n                  '--react-international-phone-background-color': 'transparent',\n                  '--react-international-phone-border-color': `${theme.colors.textPrimary}`,\n                  '--react-international-phone-text-color': `${theme.colors.textPrimary}`,\n                  '--react-international-phone-font-size': !isBigScreen\n                    ? '14px'\n                    : '24px',\n                  '--react-international-phone-border-radius': !isBigScreen\n                    ? '6px'\n                    : '8px',\n                  '--react-international-phone-flag-width': !isBigScreen\n                    ? '16px'\n                    : '24px',\n                  '--react-international-phone-flag-height': !isBigScreen\n                    ? '16px'\n                    : '24px',\n                }}\n                defaultCountry=\"ua\"\n                hideDropdown={true}\n                value={tel}\n                onChange={phone => setTel(phone)}\n                aria-label=\"Телефон\"\n              />\n              {!isValidPhone && (\n                <DivErrorMessage>\n                  Введіть свій номер телефону, будь ласка\n                </DivErrorMessage>\n              )}\n              <StyledTextField\n                component=\"textarea\"\n                name=\"comment\"\n                type=\"text\"\n                placeholder=\"Ваш коментар (за необхідності)\"\n              />\n              <StyledErrorMessage name=\"comment\" component=\"div\" />\n              <Btn type=\"submit\" disabled={!isValidPhone || tel === '+380'}>\n                <div>Оформити замовлення</div>\n              </Btn>\n            </StyledForm>\n          </Formik>\n        </Wrapper>\n        <PhoneFieldGlobalStyles />\n      </ModalYellowGradient>\n      <ModalAgree\n        isModalAgreeOpen={isModalAgreeOpen}\n        handleCloseAgreeModal={handleCloseAgreeModal}\n      >\n        <TextAgree>Дякуємо за замовлення.</TextAgree>\n        <TextAgree>Очікуйте на дзвінок від менеджера.</TextAgree>\n      </ModalAgree>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 20px;\n  max-width: 360px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 1280px) {\n    padding: 50px 110px;\n    max-width: 1280px;\n  }\n`;\n\nexport const MobCase = styled.div`\n  display: grid;\n  gap: 15px;\n  margin-bottom: 20px;\n`;\n\nexport const Box = styled.div`\n  display: grid;\n  gap: 20px;\n`;\n\nexport const Case = styled.div`\n  display: flex;\n  gap: 60px;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 16px;\n  font-weight: 600;\n  color: ${props => props.theme.colors.hoverColor};\n\n  @media screen and (min-width: 1280px) {\n    font-size: 36px;\n  }\n`;\n\nexport const OrderButton = styled.button`\n  width: 170px;\n  height: 40px;\n  font-size: 15px;\n  border-radius: 6px;\n  background: ${props => props.theme.colors.secondary};\n\n  &:hover,\n  :focus {\n    background: ${props => props.theme.colors.hoverColor};\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 270px;\n    height: 60px;\n    font-size: 24px;\n    border-radius: 20px;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  height: 30px;\n  font-size: 10px;\n\n  @media screen and (min-width: 1280px) {\n    height: 42px;\n    font-size: inherit;\n  }\n\n  ::-webkit-file-upload-button {\n    background: ${props => props.theme.colors.greyBackgroundPaper};\n    height: 30px;\n    padding: 8px 14px;\n    margin-right: 12px;\n    border-radius: 5px;\n    border: 1px solid;\n\n    @media screen and (min-width: 1280px) {\n      height: 42px;\n    }\n\n    :is(:hover, :focus) {\n      cursor: pointer;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  gap: 10px;\n`;\n\nexport const Desc = styled.ul`\n  font-size: 10px;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Item = styled.li`\n  list-style: outside;\n  margin-left: 16px;\n`;\n\nexport const Subtitle = styled.p`\n  font-size: 10px;\n  font-weight: 500;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n    font-weight: 600;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { selectPrint3D } from '../../../redux/print3D/print3DSelectors';\nimport { Container, Desc, Item, Subtitle } from './Description.styled';\n\nexport const Description = () => {\n  const { description } = useSelector(selectPrint3D);\n\n  const newDescription = description.split(';');\n\n  return (\n    <Container>\n      <Subtitle>Технічні особливості:</Subtitle>\n      <Desc>\n        {newDescription.map(i => (\n          <Item key={i}>{i}</Item>\n        ))}\n      </Desc>\n    </Container>\n  );\n};\n","export const selectStyles = {\n  control: styles => ({\n    ...styles,\n    backgroundColor: 'rgba(225, 225, 225, 1)',\n    borderRadius: '6px',\n    borderStyle: 'none',\n    width: '132px',\n    maxHeight: '30px',\n    minHeight: '25px',\n    border: '1px solid rgb(31, 31, 31)',\n    ':hover': { borderColor: 'currentColor', boxShadow: 'none' },\n    '@media only screen and (min-width: 1280px)': {\n      width: '220px',\n      minHeight: '42px',\n      borderRadius: '12px',\n    },\n  }),\n  menu: styles => ({\n    ...styles,\n    backgroundColor: 'rgba(225, 225, 225, 1)',\n    fontSize: '10px',\n    width: '132px',\n    border: '1px solid rgb(31, 31, 31)',\n    '@media only screen and (min-width: 1280px)': {\n      fontSize: '20px',\n      width: '220px',\n      borderRadius: '12px',\n    },\n  }),\n  option: (styles, { isDisabled, isFocused, isSelected }) => {\n    return {\n      ...styles,\n      backgroundColor: isFocused ? 'rgb(255, 208, 100)' : undefined,\n      color: !isDisabled\n        ? isSelected\n          ? 'rgb(31, 31, 31);'\n          : 'rgb(31, 31, 31);'\n        : undefined,\n      cursor: isDisabled ? 'not-allowed' : 'default',\n      padding: '2px 8px',\n      ':active': {\n        ...styles[':active'],\n        backgroundColor: !isDisabled\n          ? isSelected\n            ? 'rgb(255, 208, 100)'\n            : 'rgb(255, 208, 100)'\n          : undefined,\n      },\n      '@media only screen and (min-width: 1280px)': {\n        borderRadius: '6px',\n      },\n    };\n  },\n  placeholder: styles => ({\n    ...styles,\n    fontSize: '10px',\n    padding: '0px 8px',\n    margin: 0,\n    '@media only screen and (min-width: 1280px)': {\n      fontSize: '20px',\n    },\n  }),\n  indicatorsContainer: styles => ({\n    ...styles,\n    height: '30px',\n    width: '38px',\n    '@media only screen and (min-width: 1280px)': {\n      height: '42px',\n      width: '40px',\n    },\n  }),\n  valueContainer: styles => ({ ...styles, padding: 0 }),\n  singleValue: styles => ({\n    ...styles,\n    fontSize: '10px',\n    margin: 0,\n    padding: '8px',\n    '@media only screen and (min-width: 1280px)': {\n      fontSize: '20px',\n    },\n  }),\n};\n","import Select from 'react-select';\nimport { useDispatch } from 'react-redux';\nimport { selectStyles } from './CustomSelect.styled';\n\nexport const CustomSelect = ({ data, placeholder, action }) => {\n  const dispatch = useDispatch();\n\n  const options = data.map(item => {\n    return {\n      value: item,\n      label: item,\n    };\n  });\n\n  const handleSelect = option => {\n    const value = option.value;\n    dispatch(action(value));\n  };\n\n  return (\n    <Select\n      options={options}\n      onChange={handleSelect}\n      placeholder={placeholder}\n      isSearchable={false}\n      styles={selectStyles}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const OptionsContainer = styled.div`\n  display: grid;\n  gap: 10px;\n\n  @media screen and (min-width: 1280px) {\n    gap: 15px;\n  }\n`;\n\nexport const Subtitle = styled.p`\n  font-size: 10px;\n  font-weight: 500;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n    font-weight: 600;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { CustomSelect } from './CustomSelect/CustomSelect';\nimport { selectPrint3D } from '../../../redux/print3D/print3DSelectors';\nimport { OptionsContainer, Subtitle } from './Options.styled';\nimport {\n  setAccuracy,\n  setPlactic,\n  setColor,\n} from '../../../redux/print3D/print3DSlice';\n\nexport const Options = () => {\n  const { accuracy, plactic, color } = useSelector(selectPrint3D);\n\n  return (\n    <OptionsContainer>\n      <Subtitle>Параметри друку:</Subtitle>\n      <CustomSelect\n        data={accuracy}\n        placeholder={'Точність'}\n        action={setAccuracy}\n      />\n      <CustomSelect\n        data={plactic}\n        placeholder={'Тип пластику'}\n        action={setPlactic}\n      />\n      <CustomSelect data={color} placeholder={'Колір'} action={setColor} />\n    </OptionsContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.p`\n  font-size: 15px;\n  font-weight: 500;\n  text-align: center;\n  margin-top: 15px;\n  margin-bottom: 10px;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 24px;\n    margin-top: 20px;\n    margin-bottom: 15px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: grid;\n  gap: 25px;\n\n  @media screen and (min-width: 1280px) {\n    gap: 45px;\n  }\n`;\n\nexport const Table = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  font-size: 10px;\n\n  caption {\n    font-size: 12px;\n    text-align: left;\n    margin-bottom: 5px;\n  }\n\n  th {\n    font-weight: 600;\n  }\n\n  th,\n  td {\n    /* font-weight: 400; */\n    border: 1px solid black;\n    padding: 7px 0px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n\n    caption {\n      font-size: 20px;\n      margin-bottom: 10px;\n    }\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { selectPrint3D } from '../../../redux/print3D/print3DSelectors';\nimport { Wrapper, Title, Table } from './PriceList.styled';\n\nexport const PriceList = () => {\n  const { table1, table2 } = useSelector(selectPrint3D);\n\n  const data = [table1, table2];\n\n  return (\n    <>\n      <Title>Ціни на друк</Title>\n      <Wrapper>\n        {data.map(\n          data =>\n            data[100] && (\n              <Table key={data.nameTable}>\n                <caption>{data.nameTable}</caption>\n                <thead>\n                  <tr>\n                    <th rowSpan={2}>Точність</th>\n                    <th rowSpan={2}>Ціна за грам</th>\n                    <th colSpan={3}>Ціна за грам, при замовленні від</th>\n                  </tr>\n                  <tr>\n                    <th>50 грам</th>\n                    <th>100 грам</th>\n                    <th>250 грам</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  <tr>\n                    <td>100 мікрон</td>\n                    <td>{data[100][1]} грн</td>\n                    <td>{data[100][50]} грн</td>\n                    <td>{data[100][100]} грн</td>\n                    <td>{data[100][250]} грн</td>\n                  </tr>\n                  <tr>\n                    <td>200 мікрон</td>\n                    <td>{data[200][1]} грн</td>\n                    <td>{data[200][50]} грн</td>\n                    <td>{data[200][100]} грн</td>\n                    <td>{data[200][250]} грн</td>\n                  </tr>\n                  <tr>\n                    <td>300 мікрон</td>\n                    <td>{data[300][1]} грн</td>\n                    <td>{data[300][50]} грн</td>\n                    <td>{data[300][100]} грн</td>\n                    <td>{data[300][250]} грн</td>\n                  </tr>\n                </tbody>\n              </Table>\n            )\n        )}\n      </Wrapper>\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport {\n  selectPrint3D,\n  selectedAccuracy,\n  selectedPlactic,\n  selectedColor,\n} from '../../redux/print3D/print3DSelectors';\nimport { ProductPhoto } from 'components/Shared/ProductPhoto/ProductPhoto';\nimport { Modal3DPrint } from 'components/Modals/Modal3DPrint/Modal3DPrint';\nimport {\n  Wrapper,\n  MobCase,\n  Box,\n  Case,\n  Title,\n  OrderButton,\n  StyledInput,\n} from './Print3D.styled';\nimport { ProductInformation } from 'components/Shared/ProductInformation/ProductInformation';\nimport { Description } from './Description/Description';\nimport { Options } from './Options/Options';\nimport { PriceList } from './PriceList/PriceList';\n// import { add3DPrintOrder } from '../../redux/print3D/print3DOperations';\n\nexport const Print3D = () => {\n  const desktopVersion = useMediaQuery({ query: '(min-width:1280px)' });\n  const [isModal3DPrintOpen, setIsModal3DPrintOpen] = useState(false);\n  const [file, setFile] = useState('');\n  // const dispatch = useDispatch();\n\n  const handleOpen3DPrintModal = () => {\n    // let formData = new FormData();\n    // formData.append('file', file);\n\n    // for (const value of formData.values()) {\n    //   console.log(value);\n    // }  //це для відображення полів, які відправляєш\n\n    // dispatch(add3DPrintOrder(formData));\n\n    if (!accuracy || !plactic || !color) {\n      return window.alert('Оберіть параметри друку!');\n    }\n\n    if (!file) {\n      return window.alert('Прикріпіть файл для друку!');\n    }\n\n    setIsModal3DPrintOpen(true);\n    document.body.style.overflow = 'hidden';\n  };\n  const handleClose3DPrintModal = () => {\n    setIsModal3DPrintOpen(false);\n    document.body.style.overflow = 'unset';\n  };\n\n  const { name, image, information } = useSelector(selectPrint3D);\n  const accuracy = useSelector(selectedAccuracy);\n  const plactic = useSelector(selectedPlactic);\n  const color = useSelector(selectedColor);\n\n  const attachFile = e => {\n    setFile(e.currentTarget.files[0]);\n  };\n\n  return (\n    <Wrapper>\n      {!desktopVersion ? (\n        <MobCase>\n          <Title>{name}</Title>\n          <ProductPhoto name={name} image={image} />\n          <Description />\n          <Options />\n          <form>\n            <StyledInput\n              id=\"file\"\n              name=\"file\"\n              type=\"file\"\n              onChange={attachFile}\n            />\n          </form>\n          <OrderButton onClick={handleOpen3DPrintModal}>\n            Замовити друк\n          </OrderButton>\n        </MobCase>\n      ) : (\n        <Case>\n          <ProductPhoto name={name} image={image} />\n          <Box>\n            <Title>{name}</Title>\n            <Description />\n            <Options />\n            <form>\n              <StyledInput\n                id=\"file\"\n                name=\"file\"\n                type=\"file\"\n                onChange={attachFile}\n              />\n            </form>\n            <OrderButton\n              // disabled={!accuracy || !plactic || !color || !file}\n              onClick={handleOpen3DPrintModal}\n            >\n              Замовити друк\n            </OrderButton>\n          </Box>\n        </Case>\n      )}\n      {information && <ProductInformation information={information} />}\n      <PriceList />\n      <Modal3DPrint\n        isModal3DPrintOpen={isModal3DPrintOpen}\n        handleClose3DPrintModal={handleClose3DPrintModal}\n        file={file}\n      />\n    </Wrapper>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getPrint3D } from '../redux/print3D/print3DOperations';\nimport {\n  selectPrint3DIsLoading,\n  selectPrint3DError,\n} from '../redux/print3D/print3DSelectors';\nimport { CustomLoader } from 'components/Shared/CustomLoader/CustomLoader';\nimport { Print3D } from 'components/Print3DPage/Print3D';\n\nconst Print3DPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectPrint3DIsLoading);\n  const error = useSelector(selectPrint3DError);\n\n  useEffect(() => {\n    dispatch(getPrint3D());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <CustomLoader />}\n      {!isLoading && !error && <Print3D />}\n    </>\n  );\n};\n\nexport default Print3DPage;\n"],"names":["nameSchema","Yup","name","min","max","trim","matches","nameRegexForFeedback","required","phoneUtil","PhoneNumberUtil","getInstance","isPhoneValid","phone","isValidNumber","parseAndKeepRawInput","error","InfoBox","styled","div","_templateObject","_taggedTemplateLiteral","Subject","h2","_templateObject2","props","theme","colors","greyBackgroundPaper","Info","_templateObject3","ProductInformation","_ref","information","newInfo","split","_jsxs","children","_jsx","map","item","SliderDiv","hoverColor","Image","img","ImageBig","ImageSmall","_templateObject4","ProductPhoto","image","settings","customPaging","i","href","src","alt","dots","dotsClass","infinite","speed","slidesToShow","slidesToScroll","focusOnSelect","adaptiveHeight","length","className","Slider","selectPrint3DIsLoading","state","print3D","isLoading","selectPrint3DError","selectPrint3D","result","selectedAccuracy","selectedPlactic","selectedColor","Wrapper","Title","h1","StyledForm","Form","StyledField","Field","textPrimary","StyledTextField","_templateObject5","StyledErrorMessage","ErrorMessage","_templateObject6","PhoneFieldGlobalStyles","createGlobalStyle","_templateObject7","DivErrorMessage","_templateObject8","Btn","button","_templateObject9","secondary","Modal3DPrint","isModal3DPrintOpen","handleClose3DPrintModal","file","isBigScreen","useMediaQuery","query","isLoggedIn","userData","firstName","tel","userTel","useAuth","dispatch","useDispatch","setTel","useState","accuracy","useSelector","plactic","color","isValidPhone","isModalAgreeOpen","setIsModalAgreeOpen","_Fragment","ModalYellowGradient","isModalOpen","handleCloseModal","CloseButton","Formik","initialValues","text","validationSchema","onSubmit","values","_","formData","FormData","append","add3DPrintOrder","then","meta","requestStatus","document","body","style","overflow","type","placeholder","component","PhoneInput","concat","defaultCountry","hideDropdown","value","onChange","disabled","ModalAgree","handleCloseAgreeModal","TextAgree","MobCase","Box","Case","OrderButton","StyledInput","input","Container","Desc","ul","Item","li","Subtitle","p","Description","description","newDescription","selectStyles","control","styles","backgroundColor","borderRadius","borderStyle","width","maxHeight","minHeight","border","borderColor","boxShadow","menu","fontSize","option","isDisabled","isFocused","isSelected","undefined","cursor","padding","margin","indicatorsContainer","height","valueContainer","singleValue","CustomSelect","data","action","options","label","Select","isSearchable","OptionsContainer","Options","setAccuracy","setPlactic","setColor","Table","table","PriceList","table1","table2","nameTable","rowSpan","colSpan","Print3D","desktopVersion","setIsModal3DPrintOpen","setFile","handleOpen3DPrintModal","window","alert","attachFile","e","currentTarget","files","id","onClick","Print3DPage","useEffect","getPrint3D","CustomLoader"],"sourceRoot":""}