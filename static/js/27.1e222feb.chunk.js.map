{"version":3,"file":"static/js/27.1e222feb.chunk.js","mappings":"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","sources":["common/schemas/phoneSchema.js","components/Shared/SideBarNav/SideBarNav.styled.js","components/Shared/SideBarNav/SideBarNav.jsx","components/UserProfilePage/UserProfile.styled.js","common/schemas/userDataSchema.js","components/UserProfilePage/UserProfile.jsx","pages/UserProfilePage.jsx"],"sourcesContent":["import { PhoneNumberUtil } from 'google-libphonenumber';\n\nconst phoneUtil = PhoneNumberUtil.getInstance();\n\nexport const isPhoneValid = phone => {\n  try {\n    if (phone === '+380') return true;\n    return phoneUtil.isValidNumber(phoneUtil.parseAndKeepRawInput(phone));\n  } catch (error) {\n    return false;\n  }\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledList = styled.ul`\n  display: grid;\n  width: fit-content;\n  gap: 8px;\n\n  @media screen and (min-width: 1280px) {\n    gap: 16px;\n  }\n\n  li:last-child {\n    a > span {\n      &::after {\n        display: none;\n      }\n    }\n  }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  display: flex;\n  gap: 5px;\n  align-items: center;\n  transition: ${props => props.theme.transition.main};\n\n  svg {\n    width: 20px;\n    height: 20px;\n\n    @media screen and (min-width: 1280px) {\n      width: 24px;\n      height: 24px;\n    }\n  }\n\n  span {\n    position: relative;\n\n    &::after {\n      content: '';\n      position: absolute;\n      background: ${props => props.theme.colors.textPrimary};\n      width: 68px;\n      height: 1px;\n      left: 0px;\n      bottom: -6px;\n      transition: ${props => props.theme.transition.main};\n\n      @media screen and (min-width: 1280px) {\n        width: 96px;\n        bottom: -9px;\n      }\n    }\n  }\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.hoverColor};\n\n    span {\n      &::after {\n        background: ${props => props.theme.colors.hoverColor};\n      }\n    }\n  }\n\n  &.active {\n    color: ${props => props.theme.colors.hoverColor};\n\n    span {\n      &::after {\n        background: ${props => props.theme.colors.hoverColor};\n      }\n    }\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport AccountCircleOutlinedIcon from '@mui/icons-material/AccountCircleOutlined';\nimport HistoryOutlinedIcon from '@mui/icons-material/HistoryOutlined';\nimport FavoriteBorderOutlinedIcon from '@mui/icons-material/FavoriteBorderOutlined';\nimport LogoutOutlinedIcon from '@mui/icons-material/LogoutOutlined';\nimport { logOut } from '../../../redux/user/userOperations';\nimport { StyledList, StyledNavLink } from './SideBarNav.styled';\n\nexport const SideBarNav = () => {\n  const dispatch = useDispatch();\n  const logout = () => {\n    dispatch(logOut());\n  };\n\n  return (\n    <aside>\n      <StyledList>\n        <li>\n          <StyledNavLink to=\"../profile\">\n            <AccountCircleOutlinedIcon />\n            <span>Користувач</span>\n          </StyledNavLink>\n        </li>\n        <li>\n          <StyledNavLink to=\"../orders\">\n            <HistoryOutlinedIcon />\n            <span>Історія замовлень</span>\n          </StyledNavLink>\n        </li>\n        <li>\n          <StyledNavLink to=\"../favorites\">\n            <FavoriteBorderOutlinedIcon />\n            <span>Обране</span>\n          </StyledNavLink>\n        </li>\n        <li>\n          <StyledNavLink to=\"../\" onClick={logout}>\n            <LogoutOutlinedIcon />\n            <span>Вийти</span>\n          </StyledNavLink>\n        </li>\n      </StyledList>\n    </aside>\n  );\n};\n","import { ErrorMessage, Field, Form } from 'formik';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 20px;\n  display: grid;\n  row-gap: 20px;\n  font-size: 10px;\n\n  @media screen and (min-width: 1280px) {\n    padding: 50px 110px;\n    grid-template-columns: 1fr 790px;\n    font-size: 15px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 15px;\n  font-weight: 600;\n  margin-bottom: 10px;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 40px;\n    margin-bottom: 20px;\n  }\n`;\n\n\nexport const FormikWrapper = styled.div`\n  max-width: 350px;\n\n  @media (min-width: 1280px) {\n    max-width: 687px;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n\n  @media (min-width: 1280px) {\n    gap: 16px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 10px;\n  font-weight: 400;\n\n  @media (min-width: 1280px) {\n    font-size: 15px;\n  }\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledField = styled(Field)`\n  width: 190px;\n  height: 22px;\n  padding: 4px 8px;\n  color: ${props => props.theme.colors.greyOutput};\n  border: 1px solid ${props => props.theme.colors.greyOutput};\n  border-radius: 8px;\n  background: transparent;\n\n  &:focus {\n    color: ${props => props.theme.colors.textPrimary};\n    outline: none;\n    border: 1px solid ${props => props.theme.colors.hoverColor};\n  }\n\n  @media (min-width: 1280px) {\n    width: 400px;\n    height: 34px;\n  }\n`;\n\nexport const PhoneFieldGlobalStyles = createGlobalStyle`\n.react-international-phone-input-container .react-international-phone-input{\n  &:focus {\n    color: ${props => props.theme.colors.textPrimary};\n    outline: none;\n    border: 1px solid ${props => props.theme.colors.hoverColor};\n  }\n}\n\n  .react-international-phone-input {\n    width: 153px;\n\n\n    @media (min-width: 1280px) {\n    width: 354px;\n  }\n  }\n\n   .react-international-phone-input-container .react-international-phone-country-selector-button{\n    width:37px;\n\n    @media (min-width: 1280px) {\n    width: 46px;\n  }\n} \n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  color: rgba(218, 123, 106, 1);\n  font-size: 8px;\n\n  @media (min-width: 1280px) {\n    font-size: 12px;\n  }\n`;\n\nexport const DivErrorMessage = styled.div`\n  color: rgba(218, 123, 106, 1);\n  font-size: 8px;\n\n  @media (min-width: 1280px) {\n    font-size: 12px;\n  }\n`;\n\n\nexport const EditButton = styled.button`\n  position: relative;\n  width: 115px;\n  height: 26px;\n  margin-top: 18px;\n  padding: 4px;\n  background-color: transparent;\n  border: none;\n  font-size: 10px;\n  font-weight: 600;\n\n  @media screen and (min-width: 1280px) {\n    width: 168px;\n    height: 36px;\n    margin-top: 16px;\n    font-size: 16px;\n  }\n\n  &::after {\n    position: absolute;\n    left: 20%;\n    bottom: 3px;\n    content: '';\n    width: 76%;\n    height: 1px;\n    border-radius: 1px;\n    background-color: currentColor;\n\n    @media screen and (min-width: 1280px) {\n      left: 18%;\n      width: 82%;\n      height: 2px;\n    }\n  }\n\n  svg {\n    position: relative;\n    top: 4px;\n    width: 16px;\n    height: 16px;\n    margin-right: 2px;\n\n    @media screen and (min-width: 1280px) {\n      top: 6px;\n      width: 24px;\n      height: 24px;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.hoverColor};\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  gap: 36px;\n  margin-top: 10px;\n\n  @media (min-width: 1280px) {\n    gap: 90px;\n  }\n`;\n\nexport const SubmitUserDataBtn = styled.button`\n  max-width: 138px;\n  padding: 12px 22px;\n  border-radius: 6px;\n  border: none;\n  font-size: 13px;\n  font-weight: 500;\n  background: ${props => props.theme.colors.secondary};\n\n  &:hover,\n  &:focus {\n    background: ${props => props.theme.colors.hoverColor};\n  }\n\n  @media (min-width: 1280px) {\n    max-width: 200px;\n    padding: 18px 30px;\n    border-radius: 12px;\n    border: none;\n    font-size: 20px;\n    font-weight: 400;\n  }\n`;\n\nexport const CancelBtn = styled.button`\n  font-size: 12px;\n  font-weight: 500;\n  background-color: transparent;\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.hoverColor};\n  }\n\n  @media (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;","import * as Yup from 'yup';\nimport { nameRegex } from '../regex';\n\nexport const userDataSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .min(2, \"Введіть своє ім'я, будь ласка\")\n    .max(20, \"Введіть своє ім'я, будь ласка\")\n    .trim(\"Введіть своє ім'я, будь ласка\")\n    .matches(nameRegex, \"Введіть своє ім'я кирилицею, будь ласка\"),\n  lastName: Yup.string()\n    .min(2, 'Введіть своє прізвище, будь ласка')\n    .max(30, 'Введіть своє прізвище, будь ласка')\n    .trim('Введіть своє прізвище, будь ласка')\n    .matches(nameRegex, 'Введіть своє прізвище кирилицею, будь ласка'),\n  patronymic: Yup.string()\n    .min(2, \"Введіть ім'я по батькові, будь ласка\")\n    .max(30, \"Введіть ім'я по батькові, будь ласка\")\n    .trim(\"Введіть ім'я по батькові, будь ласка\")\n    .matches(nameRegex, \"Введіть ім'я по батькові кирилицею, будь ласка\"),\n  email: Yup.string().email('Введіть свою електронну адресу, будь ласка'),\n  password: Yup.string()\n    .min(8, 'Пароль має бути не менший 8 символів')\n    .max(20, 'Пароль має бути не довший 20 символів')\n    .trim('Введіть пароль, будь ласка')\n    .required('Введіть пароль, будь ласка'),\n});\n","import { SideBarNav } from 'components/Shared/SideBarNav/SideBarNav';\nimport {\n  Wrapper,\n  Title,\n  StyledForm,\n  Label,\n  StyledField,\n  StyledErrorMessage,\n  DivErrorMessage,\n  FormikWrapper,\n  PhoneFieldGlobalStyles,\n  Box,\n  BtnWrapper,\n  EditButton,\n  SubmitUserDataBtn,\n  CancelBtn,\n} from './UserProfile.styled';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { useAuth } from 'utils/hooks';\nimport { useMediaQuery } from 'react-responsive';\n\nimport { LiaPenAltSolid } from 'react-icons/lia';\nimport { Formik } from 'formik';\n\nimport { PhoneInput } from 'react-international-phone';\nimport 'react-international-phone/style.css';\nimport { useState } from 'react';\nimport { isPhoneValid } from 'common/schemas/phoneSchema';\n// import { theme, themeMUI } from '../../styles/GlobalStyled';\nimport { userDataSchema } from 'common/schemas/userDataSchema';\nimport { theme } from 'styles/GlobalStyled';\n\nexport const UserProfile = () => {\n  const [showForm, setShowForm] = useState(false);\n\n  const handleShowForm = () => setShowForm(!showForm);\n  const isBigScreen = useMediaQuery({ query: '(min-width:1280px)' });\n  const {\n    userData: { firstName, lastName, patronymic, tel, email },\n  } = useAuth();\n\n  const [formikTel, setTel] = useState(tel);\n  const isValidPhone = isPhoneValid(formikTel);\n\n  function createData(userData, value) {\n    return { userData, value };\n  }\n\n  const rows = [\n    createData('Ім’я', firstName),\n    createData('Прізвище', lastName),\n    createData('По батькові', patronymic),\n    createData('Мобільний номер', tel),\n    createData('Email', email),\n    createData('Пароль', '*********'),\n  ];\n\n  return (\n    <Wrapper>\n      {isBigScreen && <SideBarNav />}\n      <div>\n        <Title>Користувач</Title>\n        {!showForm && (\n          <TableContainer\n            component={Paper}\n            sx={{\n              backgroundColor: themeMUI => themeMUI.palette.background.default,\n              boxShadow:\n                '1px 0px 0px 0px rgba(0, 0, 0, 0.14),0px 0px 1px 0px rgba(0, 0, 0, 0.14),0px 1px 0px 0px rgba(0, 0, 0, 0.14)',\n            }}\n          >\n            <Table sx={{ minWidth: 175 }} aria-label=\"user data table\">\n              <TableBody\n                sx={{\n                  'tr:nth-of-type(odd)': {\n                    backgroundColor: themeMUI =>\n                      themeMUI.palette.background.primary,\n                  },\n                }}\n              >\n                {rows.map(row => (\n                  <TableRow key={row.userData}>\n                    <TableCell\n                      style={{\n                        fontSize: isBigScreen ? '15px' : '10px',\n                        padding: isBigScreen ? '20px' : '10px',\n                      }}\n                      component=\"th\"\n                      scope=\"row\"\n                    >\n                      {row.userData}\n                    </TableCell>\n                    <TableCell\n                      style={{\n                        fontSize: isBigScreen ? '15px' : '10px',\n                        fontWeight: '600',\n                        textAlign: 'left',\n                        padding: isBigScreen ? '20px' : '10px',\n                      }}\n                      align=\"right\"\n                    >\n                      {row.value}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n        {showForm && (\n          <>\n            <FormikWrapper>\n              <Formik\n                initialValues={{\n                  firstName: firstName,\n                  lastName: lastName,\n                  patronymic: patronymic,\n                  email: email,\n                  password: '',\n                }}\n                validationSchema={userDataSchema}\n                onSubmit={(values, _) => {\n                  console.log('values', values);\n                }}\n              >\n                <StyledForm>\n                  <Label>\n                    Ім'я\n                    <Box>\n                      <StyledField name=\"firstName\" type=\"text\" />\n                      <StyledErrorMessage name=\"firstName\" component=\"div\" />\n                    </Box>\n                  </Label>\n\n                  <Label>\n                    Прізвище\n                    <Box>\n                      <StyledField name=\"lastName\" type=\"text\" />\n                      <StyledErrorMessage name=\"lastName\" component=\"div\" />\n                    </Box>\n                  </Label>\n\n                  <Label>\n                    По батькові\n                    <Box>\n                      <StyledField name=\"patronymic\" type=\"text\" />\n                      <StyledErrorMessage name=\"patronymic\" component=\"div\" />\n                    </Box>\n                  </Label>\n                  <Label>\n                    Мобільний номер\n                    <Box>\n                      <PhoneInput\n                        style={{\n                          '--react-international-phone-height': !isBigScreen\n                            ? '22px'\n                            : '34px',\n                          '--react-international-phone-background-color':\n                            'transparent',\n                          '--react-international-phone-border-color': `${theme.colors.greyOutput}`,\n                          '--react-international-phone-text-color': `${theme.colors.greyOutput}`,\n                          '--react-international-phone-font-size': !isBigScreen\n                            ? '10px'\n                            : '15px',\n                          '--react-international-phone-border-radius': '8px',\n                          '--react-international-phone-flag-width': !isBigScreen\n                            ? '16px'\n                            : '24px',\n                          '--react-international-phone-flag-height':\n                            !isBigScreen ? '16px' : '24px',\n                        }}\n                        defaultCountry=\"ua\"\n                        hideDropdown={true}\n                        value={formikTel}\n                        onChange={formikTel => setTel(formikTel)}\n                      />\n                      {!isValidPhone && (\n                        <DivErrorMessage>\n                          Введіть свій номер телефону, будь ласка\n                        </DivErrorMessage>\n                      )}\n                    </Box>\n                  </Label>\n\n                  <Label>\n                    Email\n                    <Box>\n                      <StyledField name=\"email\" type=\"text\" />\n                      <StyledErrorMessage name=\"email\" component=\"div\" />\n                    </Box>\n                  </Label>\n\n                  <Label>\n                    Пароль\n                    <Box>\n                      <StyledField name=\"password\" type=\"password\" />\n                      <StyledErrorMessage name=\"password\" component=\"div\" />\n                    </Box>\n                  </Label>\n                  <BtnWrapper>\n                    <SubmitUserDataBtn\n                      type=\"submit\"\n                      disabled={!isValidPhone || tel === '+380'}\n                    >\n                      Зберегти дані\n                    </SubmitUserDataBtn>\n                    <CancelBtn type=\"button\" onClick={handleShowForm}>\n                      Відмінити\n                    </CancelBtn>\n                  </BtnWrapper>\n                </StyledForm>\n              </Formik>\n            </FormikWrapper>\n            <PhoneFieldGlobalStyles />\n          </>\n        )}\n        {!showForm && (\n          <EditButton type=\"button\" onClick={handleShowForm}>\n            <LiaPenAltSolid />\n            Редагувати дані\n          </EditButton>\n        )}\n      </div>\n    </Wrapper>\n  );\n};\n","import { UserProfile } from 'components/UserProfilePage/UserProfile';\n\nconst UserProfilePage = () => {\n  return <UserProfile />;\n};\n\nexport default UserProfilePage;\n"],"names":["phoneUtil","PhoneNumberUtil","getInstance","isPhoneValid","phone","isValidNumber","parseAndKeepRawInput","error","StyledList","styled","ul","_templateObject","_taggedTemplateLiteral","StyledNavLink","NavLink","_templateObject2","props","theme","transition","main","colors","textPrimary","hoverColor","SideBarNav","dispatch","useDispatch","_jsx","children","_jsxs","to","AccountCircleOutlinedIcon","HistoryOutlinedIcon","FavoriteBorderOutlinedIcon","onClick","logout","logOut","LogoutOutlinedIcon","Wrapper","div","Title","h2","FormikWrapper","_templateObject3","StyledForm","Form","_templateObject4","Label","label","_templateObject5","Box","_templateObject6","StyledField","Field","_templateObject7","greyOutput","PhoneFieldGlobalStyles","createGlobalStyle","_templateObject8","StyledErrorMessage","ErrorMessage","_templateObject9","DivErrorMessage","_templateObject10","EditButton","button","_templateObject11","BtnWrapper","_templateObject12","SubmitUserDataBtn","_templateObject13","secondary","CancelBtn","_templateObject14","userDataSchema","Yup","shape","firstName","min","max","trim","matches","nameRegex","lastName","patronymic","email","password","required","UserProfile","showForm","setShowForm","useState","handleShowForm","isBigScreen","useMediaQuery","query","userData","tel","useAuth","formikTel","setTel","isValidPhone","createData","value","rows","TableContainer","component","Paper","sx","backgroundColor","themeMUI","palette","background","default","boxShadow","Table","minWidth","TableBody","primary","map","row","TableRow","TableCell","style","fontSize","padding","scope","fontWeight","textAlign","align","_Fragment","Formik","initialValues","validationSchema","onSubmit","values","_","console","log","name","type","PhoneInput","concat","defaultCountry","hideDropdown","onChange","disabled","LiaPenAltSolid","UserProfilePage"],"sourceRoot":""}