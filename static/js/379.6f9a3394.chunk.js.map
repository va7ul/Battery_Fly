{"version":3,"file":"static/js/379.6f9a3394.chunk.js","mappings":"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","sources":["components/Shared/CustomError/CustomError.tsx","components/Shared/ProductInformation/ProductInformation.styled.ts","components/Shared/ProductInformation/ProductInformation.tsx","components/Shared/ProductPhoto/ProductPhoto.styled.ts","components/Shared/ProductPhoto/ProductPhoto.tsx","components/CardPage/Card.styled.ts","components/CardPage/Description.tsx","components/CardPage/Capacity.tsx","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","components/CardPage/Checkbox.tsx","components/Modals/ModalQuickOrder/ModalQuickOrder.styled.ts","components/Modals/ModalQuickOrder/ModalQuickOrder.tsx","components/CardPage/Order.tsx","components/CardPage/Card.tsx","pages/CardPage.tsx","utils/helpers/getNewPrice.ts"],"sourcesContent":["import errorImage from '../../../assets/images/something-went-wrong.gif';\nexport const CustomError = () => {\n  return (\n    <div style={{ width: '100%', backgroundColor: '#fff' }}>\n      <img src={errorImage} alt=\"error_image\" style={{ margin: '0 auto' }} />\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const InfoBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n\n  @media screen and (min-width: 1280px) {\n    gap: 20px;\n  }\n`;\n\nexport const Subject = styled.h2`\n  height: 30px;\n  font-size: 15px;\n  font-weight: 400;\n  background: ${props => props.theme.colors.greyBackgroundPaper};\n  border-radius: 12px;\n  text-align: center;\n  padding: 6px;\n\n  @media screen and (min-width: 1280px) {\n    height: 42px;\n    font-size: 24px;\n    font-weight: 500;\n  }\n`;\n\nexport const Info = styled.div`\n  font-size: 10px;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\n","import { InfoBox, Subject, Info } from './ProductInformation.styled';\n\ntype ProductInformationProps = {\n  information: string;\n};\n\nexport const ProductInformation: React.FC<ProductInformationProps> = ({\n  information,\n}) => {\n  const newInfo = information.split(';');\n  return (\n    <InfoBox>\n      <Subject>Опис</Subject>\n      <Info>\n        {newInfo.map(item => (\n          <div key={item}>\n            <div>{item}</div><br />\n          </div>\n        ))}\n      </Info>\n    </InfoBox>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SliderDiv = styled.div`\n  width: 310px;\n  height: 200px;\n  margin: 0 auto;\n  margin-bottom: 30px;\n\n  .slick-dots {\n    bottom: -20px;\n  }\n\n  .slick-list {\n    cursor: grab;\n  }\n\n  .slick-prev:before,\n  .slick-next:before {\n    color: ${props => props.theme.colors.hoverColor};\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 518px;\n    height: 390px;\n\n    .slick-prev:before,\n    .slick-next:before {\n      font-size: 40px;\n    }\n\n    .slick-prev {\n      left: -45px;\n    }\n  }\n`;\n\nexport const Image = styled.img`\n  width: 320px;\n  height: 200px;\n  object-fit: cover;\n  border-radius: 12px;\n  box-shadow: 0px 2px 2px 0px rgba(0, 0, 0, 0.15);\n  margin-bottom: 5px;\n\n  @media screen and (min-width: 1280px) {\n    min-width: 518px;\n    height: 390px;\n    border-radius: 20px;\n    margin-bottom: 30px;\n  }\n`;\n\nexport const ImageBig = styled.img`\n  width: 310px;\n  height: 200px;\n  object-fit: cover;\n  border-radius: 12px;\n\n  @media screen and (min-width: 1280px) {\n    min-width: 518px;\n    height: 390px;\n    border-radius: 20px;\n  }\n`;\n","import { FC, SyntheticEvent } from 'react';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport noImage from '../../../assets/images/no-image-available.webp';\nimport { SliderDiv, ImageBig, Image } from './ProductPhoto.styled';\n\ntype ProductPhotoProps = {\n  name: string;\n  image: string[];\n};\n\nexport const ProductPhoto: FC<ProductPhotoProps>  = ({ name, image }) => {\n\n    const addDefaultImg = (e: SyntheticEvent<HTMLImageElement>) => {\n    e.currentTarget.src = noImage;\n  };\n  \n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  return image.length > 1 ? (\n    <SliderDiv className=\"slider-container\">\n      <Slider {...settings}>\n        {image.map(item => (\n          <div key={item}>\n            <ImageBig src={item} alt={name} />\n          </div>\n        ))}\n      </Slider>\n    </SliderDiv>\n  ) : (\n    <Image src={image[0] || noImage} alt={name} onError={addDefaultImg}/>\n  );\n};\n","import { FaRegHeart, FaHeartCircleCheck } from 'react-icons/fa6';\nimport { StylesConfig, GroupBase } from 'react-select';\nimport styled from 'styled-components';\n\ninterface Theme {\n  colors: {\n    greyBackgroundPaper: string;\n    secondary: string;\n    hoverColor: string;\n    textDisabled: string;\n    textPrimary: string;\n  };\n}\n\ninterface ButtonProps {\n  disabled: boolean;\n  theme: Theme;\n}\n\nconst backgroundButton = (props: ButtonProps) =>\n  props.disabled\n    ? props.theme.colors.greyBackgroundPaper\n    : props.theme.colors.secondary;\n\nconst backgroundHoverButton = (props: ButtonProps) =>\n  props.disabled\n    ? props.theme.colors.greyBackgroundPaper\n    : props.theme.colors.hoverColor;\n\nconst cursorButton = (props: ButtonProps) => (props.disabled ? 'default' : 'pointer');\nconst colorButton = (props: ButtonProps) =>\n  props.disabled\n    ? props.theme.colors.textDisabled\n    : props.theme.colors.textPrimary;\n\n// Card\n\nexport const Wrapper = styled.div`\n  padding: 20px;\n  max-width: 360px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 1280px) {\n    padding: 50px 110px 0 110px;\n    max-width: 1280px;\n  }\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Case = styled.div`\n  display: flex;\n  gap: 60px;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 15px;\n  color: ${props => props.theme.colors.hoverColor};\n\n  @media screen and (min-width: 1280px) {\n    font-size: 36px;\n    margin-bottom: 10px;\n  }\n`;\n\n// Description\n\nexport const DescBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 15px;\n\n  @media screen and (min-width: 1280px) {\n    gap: 20px;\n    margin-bottom: 30px;\n  }\n`;\n\nexport const TextBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Text = styled.p`\n  font-size: 12px;\n  color: ${props => props.theme.colors.textDisabled};\n\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n  }\n`;\n\nexport const PriceContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: column-reverse;\n    align-items: flex-start;\n    gap: 10px;\n  }\n`;\n\nexport const PriceBox = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 1280px) {\n    align-items: flex-start;\n  }\n`;\n\nexport const NewPrice = styled.p`\n  font-size: 15px;\n  font-weight: 600;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 32px;\n  }\n`;\n\nexport const Price = styled.p`\n  text-decoration-line: line-through;\n  font-size: 10px;\n  color: rgba(157, 157, 157, 1);\n\n  @media screen and (min-width: 1280px) {\n    font-size: 22px;\n  }\n`;\n\nexport const IconHeart = styled(FaRegHeart)`\n  @media screen and (min-width: 1280px) {\n    width: 38px;\n    height: 38px;\n  }\n`;\n\nexport const IconFullHeart = styled(FaHeartCircleCheck)`\n  @media screen and (min-width: 1280px) {\n    width: 38px;\n    height: 38px;\n  }\n`;\n\nexport const Wrap = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  @media screen and (min-width: 1280px) {\n    gap: 14px;\n  }\n`;\n\nexport const LikeBox = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: ${props => props.theme.colors.hoverColor};\n\n  &:hover,\n  :focus {\n    cursor: pointer;\n  }\n\n  @media screen and (min-width: 1280px) {\n    gap: 14px;\n  }\n`;\n\nexport const Like = styled.p`\n  font-size: 10px;\n  font-weight: 500;\n  color: ${props => props.theme.colors.hoverColor};\n\n  &:hover,\n  :focus {\n    cursor: pointer;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\n\nexport const IconSquare = styled.svg`\n  display: none;\n  /* width: 35px;\n  height: 35px;\n  position: absolute;\n  top: -387px;\n  left: 122px;\n  fill: ${props => props.theme.colors.secondary}; */\n\n  @media (min-width: 1280px) {\n    display: block;\n    position: absolute;\n    fill: ${props => props.theme.colors.hoverColor};\n    width: 62px;\n    height: 62px;\n    left: 438px;\n    top: -12px;\n    z-index: 2;\n  }\n`;\n\nexport const IconSpiral = styled.svg`\n  display: none;\n  /* width: 35px;\n  height: 43px;\n  position: absolute;\n  top: -381px;\n  left: 105px;\n  stroke: ${props => props.theme.colors.textPrimary};\n  fill: transparent; */\n\n  @media (min-width: 1280px) {\n    display: block;\n    position: absolute;\n    width: 62px;\n    height: 76px;\n    left: 407px;\n    top: -1px;\n    z-index: 2;\n    stroke: ${props => props.theme.colors.textPrimary};\n    fill: transparent;\n  }\n`;\n\nexport const Desc = styled.ul`\n  font-size: 10px;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Item = styled.li`\n  list-style: outside;\n  margin-left: 16px;\n`;\n\n// CheckBox\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 1280px) {\n    gap: 20px;\n    margin-bottom: 38px;\n  }\n`;\nexport const Group = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const ExtraPrice = styled.p`\n  font-size: 10px;\n  color: ${props => props.theme.colors.textDisabled};\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\n\n// Order\n\nexport const OrderBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 10px;\n\n  @media screen and (min-width: 1280px) {\n    gap: 15px;\n    margin-bottom: 0px;\n  }\n`;\n\nexport const CounterBox = styled.div`\n  display: flex;\n  gap: 4px;\n`;\n\nexport const Input = styled.input`\n  font-size: 15px;\n  width: 76px;\n  height: 35px;\n  padding: 8px 12px;\n  appearance: none;\n  border: none;\n  outline-style: none;\n  text-align: center;\n  border-radius: 190px;\n  background: ${props => props.theme.colors.greyBackgroundPaper};\n\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 18px;\n    width: 90px;\n    height: 50px;\n    padding: 14px 20px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 35px;\n  height: 35px;\n  border-radius: 50%;\n  background: ${backgroundButton};\n  cursor: ${cursorButton};\n  color: ${colorButton};\n\n  &:hover,\n  :focus {\n    background: ${backgroundHoverButton};\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 50px;\n    height: 50px;\n  }\n`;\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const BasketButton = styled.button`\n  width: 130px;\n  height: 40px;\n  font-size: 15px;\n  border-radius: 6px;\n  background: ${backgroundButton};\n  cursor: ${cursorButton};\n  color: ${colorButton};\n\n  &:hover,\n  :focus {\n    background: ${backgroundHoverButton};\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 146px;\n    height: 60px;\n    font-size: 24px;\n    border-radius: 20px;\n  }\n`;\n\nexport const OrderButton = styled.button`\n  width: 170px;\n  height: 40px;\n  font-size: 15px;\n  border-radius: 6px;\n  background: ${backgroundButton};\n  cursor: ${cursorButton};\n  color: ${colorButton};\n\n  &:hover,\n  :focus {\n    background: ${backgroundHoverButton};\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 270px;\n    height: 60px;\n    font-size: 24px;\n    border-radius: 20px;\n  }\n`;\n\n// Capacity\n\nexport const CapacityBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Subtitle = styled.p`\n  font-size: 10px;\n  font-weight: 500;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n    font-weight: 600;\n  }\n`;\n\nexport const selectStyles: StylesConfig<any, false, GroupBase<any>> = {\n  control: styles => ({\n    ...styles,\n    backgroundColor: 'rgba(225, 225, 225, 1)',\n    borderRadius: '6px',\n    borderStyle: 'none',\n    width: '140px',\n    maxHeight: '30px',\n    minHeight: '25px',\n    border: '1px solid rgb(31, 31, 31)',\n    ':hover': { borderColor: 'currentColor', boxShadow: 'none' },\n    '@media only screen and (min-width: 1280px)': {\n      width: '226px',\n      minHeight: '42px',\n      borderRadius: '12px',\n    },\n  }),\n  menu: styles => ({\n    ...styles,\n    backgroundColor: 'rgba(225, 225, 225, 1)',\n    fontSize: '10px',\n    width: '140px',\n    border: '1px solid rgb(31, 31, 31)',\n    '@media only screen and (min-width: 1280px)': {\n      fontSize: '20px',\n      width: '226px',\n      borderRadius: '12px',\n    },\n  }),\n  input: styles => ({ ...styles, display: 'none' }),\n  option: (styles, { isDisabled, isFocused, isSelected }) => {\n    return {\n      ...styles,\n      backgroundColor: isFocused ? 'rgb(255, 208, 100)' : undefined,\n      color: !isDisabled\n        ? isSelected\n          ? 'rgb(31, 31, 31);'\n          : 'rgb(31, 31, 31);'\n        : undefined,\n      cursor: isDisabled ? 'not-allowed' : 'default',\n      padding: '2px 8px',\n      ':active': {\n        ...styles[':active'],\n        backgroundColor: !isDisabled\n          ? isSelected\n            ? 'rgb(255, 208, 100)'\n            : 'rgb(255, 208, 100)'\n          : undefined,\n      },\n      '@media only screen and (min-width: 1280px)': {\n        borderRadius: '6px',\n      },\n    };\n  },\n  placeholder: styles => ({\n    ...styles,\n    fontSize: '10px',\n    padding: '0px 8px',\n    margin: 0,\n    '@media only screen and (min-width: 1280px)': {\n      fontSize: '20px',\n    },\n  }),\n  indicatorsContainer: styles => ({\n    ...styles,\n    height: '30px',\n    width: '38px',\n    '@media only screen and (min-width: 1280px)': {\n      height: '42px',\n      width: '40px',\n    },\n  }),\n  valueContainer: styles => ({ ...styles, padding: 0 }),\n  singleValue: styles => ({\n    ...styles,\n    fontSize: '10px',\n    margin: 0,\n    padding: '8px',\n    '@media only screen and (min-width: 1280px)': {\n      fontSize: '20px',\n    },\n  }),\n};\n","import { useTypedDispatch, useTypedSelector } from '../../redux/hooks';\nimport { getNewPrice } from '../../utils/helpers/getNewPrice';\nimport { useAuth } from '../../utils/hooks';\nimport { setAuthModalOpen } from '../../redux/user/userSlice';\nimport {\n  selectOneProduct,\n  selectPriceWithSale,\n} from '../../redux/products/productsSelectors';\nimport { selectFavorites } from '../../redux/user/userSelectors';\nimport {\n  addToFavorite,\n  deleteFromFavorite,\n} from '../../redux/user/userOperations';\nimport sprite from '../../assets/images/sprite.svg';\nimport {\n  DescBox,\n  TextBox,\n  Text,\n  PriceContainer,\n  PriceBox,\n  NewPrice,\n  Price,\n  Wrap,\n  LikeBox,\n  Like,\n  Desc,\n  Item,\n  IconHeart,\n  IconFullHeart,\n  IconSquare,\n  IconSpiral,\n  Subtitle,\n  CapacityBox,\n} from './Card.styled';\n\nexport const Description = () => {\n  const dispatch = useTypedDispatch();\n  const { isLoggedIn } = useAuth();\n  const { codeOfGood, description, price, sale, discount, quantity } =\n    useTypedSelector(selectOneProduct);\n  const priceWithSale = useTypedSelector(selectPriceWithSale);\n  const favoriteItems = useTypedSelector(selectFavorites);\n\n  const newDescription = description.split(';');\n\n  const newPrice = sale ? getNewPrice(discount, price) : price;\n\n  const isInFavorites = favoriteItems.some(\n    favoriteItem => favoriteItem === codeOfGood\n  );\n\n  const handleFavorite = () => {\n    isInFavorites\n      ? dispatch(deleteFromFavorite(codeOfGood))\n      : dispatch(addToFavorite(codeOfGood));\n  };\n\n  const handleOpenSignUpSignInModal = () => {\n    if (!isLoggedIn) {\n      dispatch(setAuthModalOpen(true));\n      document.body.style.overflow = 'hidden';\n    }\n  };\n\n  return (\n    <DescBox>\n      <TextBox>\n        {quantity > 0 ? (\n          <Text style={{ color: 'rgba(20, 211, 16, 1)' }}>В наявності</Text>\n        ) : (\n          <Text style={{ color: 'rgba(255, 0, 0, 1)' }}>Немає в наявності</Text>\n        )}\n        <Text>Код товару: {codeOfGood}</Text>\n      </TextBox>\n      <PriceContainer>\n        <PriceBox>\n          {sale ? (\n            <NewPrice>\n              {priceWithSale !== 0 ? priceWithSale : newPrice} грн\n            </NewPrice>\n          ) : (\n            <NewPrice>{newPrice} грн</NewPrice>\n          )}\n          {sale && <Price>{price} грн</Price>}\n        </PriceBox>\n        <Wrap>\n          {isInFavorites ? (\n            <LikeBox onClick={handleFavorite}>\n              <IconFullHeart />\n              <Like>Видалити зі списку бажань</Like>\n            </LikeBox>\n          ) : (\n            <>\n              {isLoggedIn ? (\n                <LikeBox onClick={handleFavorite}>\n                  <IconHeart />\n                  <Like>Додати до списку бажань</Like>\n                </LikeBox>\n              ) : (\n                <LikeBox onClick={handleOpenSignUpSignInModal}>\n                  <IconHeart />\n                  <Like>Додати до списку бажань</Like>\n                </LikeBox>\n              )}\n            </>\n          )}\n\n          <IconSquare>\n            <use href={`${sprite}#icon-square`}></use>\n          </IconSquare>\n          <IconSpiral>\n            <use href={`${sprite}#icon-Spiral_2`}></use>\n          </IconSpiral>\n        </Wrap>\n      </PriceContainer>\n      <CapacityBox>\n        <Subtitle>Технічні особливості:</Subtitle>\n        <Desc>\n          {newDescription.map(i => (\n            <Item key={i}>{i}</Item>\n          ))}\n        </Desc>\n      </CapacityBox>\n    </DescBox>\n  );\n};\n","import Select, { SingleValue } from 'react-select';\nimport { useState } from 'react';\nimport { useTypedDispatch, useTypedSelector } from '../../redux/hooks';\nimport { selectOneProduct } from '../../redux/products/productsSelectors';\nimport { setPrice, setCapacityKey, setPriceOneProduct, setSelectedHolder, setSelectedSealing, setQuantityOrders, setPriceWithSale } from '../../redux/products/oneProductSlice';\nimport { CapacityBox, Subtitle, Desc, selectStyles } from \"./Card.styled\";\n\ntype Option = {\n  value: string;\n  label: string;\n};\n\nexport const Capacity = () => {\n\n    const dispatch = useTypedDispatch();\n    const { capacity, discount } = useTypedSelector(selectOneProduct);\n\n    const capacityKeys = capacity ? Object.keys(capacity) : [];\n    const sortKeys = [...capacityKeys].sort((a, b) => Number(a) - Number(b));\n\n    const options: Option[] = sortKeys.map((item) => {\n        return {\n            value: item, label: item + \" Ah\",\n        }\n    })\n    \n    const [descr, setDescr] = useState('');\n\n    const handleSelect = (option: SingleValue<Option>) => {\n        if (!option || !capacity) return;\n        const value = option.value;\n        setDescr(capacity[value].description);\n        dispatch(setPrice(capacity[value].price));\n        dispatch(setPriceOneProduct(capacity[value].price));\n        dispatch(setSelectedHolder(false));\n        dispatch(setSelectedSealing(false));\n        dispatch(setCapacityKey(value));\n        dispatch(setQuantityOrders(1));\n        dispatch(setPriceWithSale(capacity[value]?.price * ((100-discount)/100) || 0))\n    };\n\n    const newDescr = descr.split(';');\n\n    return (\n        <CapacityBox>\n            <Subtitle>Ємність енергії:</Subtitle>\n            <Select options={options}\n                onChange={handleSelect}\n                placeholder={\"Виберіть ємність\"}\n                isSearchable={false}\n                styles={selectStyles}\n            />\n            <Desc>{newDescr.map(item => <li key={item}>{item}</li>)}</Desc>\n        </CapacityBox>\n    );\n};","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import { ChangeEvent } from 'react';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport { styled } from '@mui/material/styles';\nimport { useTypedDispatch, useTypedSelector } from '../../redux/hooks';\nimport {\n  selectOneProduct,\n  selectSelectedSealing,\n  selectSelectedHolder,\n  selectOneProductPrice,\n  selectSealingPrice,\n  selectHolderPrice,\n} from '../../redux/products/productsSelectors';\nimport {\n  setSelectedHolder,\n  setSelectedSealing,\n} from '../../redux/products/oneProductSlice';\nimport { themeMUI } from 'styles/themeMUI';\nimport { yellow } from '@mui/material/colors';\nimport { Subtitle, Container, Group, ExtraPrice } from './Card.styled';\n\nconst StyledFormGroup = styled(FormGroup)({\n  gap: '10px',\n  [themeMUI.breakpoints.only('desktop')]: {\n    gap: '20px',\n  },\n  '& .MuiButtonBase-root': {\n    padding: '0px 10px 0px 0px',\n  },\n  '& .MuiFormControlLabel-root': {\n    margin: 0,\n  },\n  '& .MuiTypography-root': {\n    fontSize: '10px',\n    [themeMUI.breakpoints.only('desktop')]: {\n      fontSize: '20px',\n    },\n  },\n});\n\nconst StyledCheckbox = styled(Checkbox)({\n  '& .MuiSvgIcon-root': {\n    width: '20px',\n    height: '20px',\n    [themeMUI.breakpoints.only('desktop')]: {\n      width: '30px',\n      height: '30px',\n    },\n  },\n});\n\nexport const CheckBox = () => {\n  const dispatch = useTypedDispatch();\n\n  const { holder } = useTypedSelector(selectOneProduct);\n  const selectedSealing = useTypedSelector(selectSelectedSealing);\n  const selectedHolder = useTypedSelector(selectSelectedHolder);\n  const oneProductPrice = useTypedSelector(selectOneProductPrice);\n  const sealingPrice = useTypedSelector(selectSealingPrice);\n  const holderPrice = useTypedSelector(selectHolderPrice);\n\n  const handleSealing = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatch(setSelectedSealing(e.target.checked));\n  };\n\n  const handleHolder = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatch(setSelectedHolder(e.target.checked));\n  };\n\n  return (\n    <Container>\n      <Subtitle>Додаткові послуги:</Subtitle>\n      <StyledFormGroup>\n        <Group>\n          <FormControlLabel\n            control={\n              <StyledCheckbox\n                value={selectedSealing}\n                checked={selectedSealing}\n                onChange={handleSealing}\n                disabled={typeof oneProductPrice === 'string'}\n                sx={{\n                  color: yellow[800],\n                  '&.Mui-checked': {\n                    color: yellow[800],\n                  },\n                }}\n              />\n            }\n            label=\"Герметизація\"\n          />\n          {selectedSealing && (\n            <ExtraPrice>{`+ ${sealingPrice} грн`}</ExtraPrice>\n          )}\n        </Group>\n        {holder && (\n          <Group>\n            <FormControlLabel\n              control={\n                <StyledCheckbox\n                  onChange={handleHolder}\n                  checked={selectedHolder}\n                  value={selectedHolder}\n                  disabled={typeof oneProductPrice === 'string'}\n                  sx={{\n                    color: yellow[800],\n                    '&.Mui-checked': {\n                      color: yellow[800],\n                    },\n                  }}\n                />\n              }\n              label=\"Використовувати холдери\"\n            />\n            {selectedHolder && (\n              <ExtraPrice>{`+ ${holderPrice} грн`}</ExtraPrice>\n            )}\n          </Group>\n        )}\n      </StyledFormGroup>\n    </Container>\n  );\n};\n","import styled, { createGlobalStyle } from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Wrapper = styled.div`\n  max-width: 357px;\n  padding: 36px 48px;\n\n  @media (min-width: 1280px) {\n    max-width: 630px;\n    padding: 40px 76px;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: 14px;\n  font-weight: 500;\n  margin-bottom: 8px;\n\n  @media (min-width: 1280px) {\n    font-size: 24px;\n    margin-bottom: 16px;\n  }\n`;\n\nexport const CodeOfGoodText = styled.p`\n  font-size: 10px;\n  color: rgba(87, 80, 80, 1);\n  margin-bottom: 16px;\n\n  @media (min-width: 1280px) {\n    font-size: 16px;\n    margin-bottom: 30px;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const StyledField = styled(Field)`\n  width: 261px;\n  height: 28px;\n  padding: 4px 8px;\n  color: ${props => props.theme.colors.textPrimary};\n  border: 1px solid ${props => props.theme.colors.textPrimary};\n  border-radius: 6px;\n  background: transparent;\n  font-size: 14px;\n\n  &:focus {\n    color: ${props => props.theme.colors.textPrimary};\n    outline: none;\n    border: 2px solid ${props => props.theme.colors.hoverColor};\n  }\n\n  @media (min-width: 1280px) {\n    width: 476px;\n    height: 51px;\n    border-radius: 8px;\n    font-size: 24px;\n  }\n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  color: ${props => props.theme.colors.error};\n  font-size: 8px;\n  padding-left: 8px;\n  margin-top: 4px;\n  align-self: start;\n\n  @media (min-width: 1280px) {\n    font-size: 12px;\n    padding-left: 10px;\n    margin-top: 8px;\n  }\n`;\n\nexport const PhoneFieldGlobalStyles = createGlobalStyle`\n.react-international-phone-input-container {\n    margin-top: 16px;   \n    width: 261px;\n    height: 28px;\n\n    @media (min-width: 1280px) {\n     margin-top: 30px;\n     width: 476px;\n    height: 51px;\n  }\n  }\n\n.react-international-phone-input-container .react-international-phone-input{\n  &:focus {\n    color: ${props => props.theme.colors.textPrimary};\n    outline: none;\n    border: 2px solid ${props => props.theme.colors.hoverColor};\n  }\n}\n\n  .react-international-phone-input {\n    width: 224px;\n\n    @media (min-width: 1280px) {\n    width: 431px;\n  }\n  }\n  \n   .react-international-phone-input-container .react-international-phone-country-selector-button{\n    width:37px;\n    height: 28px;\n    background-color: rgba(31, 31, 31, 0.3);\n\n    @media (min-width: 1280px) {\n    width: 45px;\n     height: 51px;\n  }\n} \n`;\n\nexport const DivErrorMessage = styled.div`\n  color: ${props => props.theme.colors.error};\n  font-size: 8px;\n  padding-left: 8px;\n  margin-top: 4px;\n  align-self: start;\n\n  @media (min-width: 1280px) {\n    font-size: 12px;\n    padding-left: 10px;\n    margin-top: 8px;\n  }\n`;\n\nexport const Btn = styled.button`\n  max-width: 190px;\n  margin-top: 16px;\n  padding: 12px 10px;\n  border-radius: 6px;\n  border: none;\n  font-size: 15px;\n\n  background: ${props => props.theme.colors.secondary};\n\n  &:hover,\n  &:focus {\n    background: ${props => props.theme.colors.hoverColor};\n  }\n\n  @media (min-width: 1280px) {\n    max-width: 312px;\n    margin-top: 30px;\n    padding: 16px 20px;\n    border-radius: 12px;\n    font-size: 24px;\n  }\n`;\n","import { FC, useEffect, useState } from 'react';\nimport { Formik } from 'formik';\nimport toast from 'react-hot-toast';\nimport { PhoneInput } from 'react-international-phone';\nimport 'react-international-phone/style.css';\nimport { useMediaQuery } from 'react-responsive';\nimport { nameSchema } from 'common/schemas/nameSchema';\nimport { isPhoneValid } from 'common/schemas/phoneSchema';\nimport { useAuth } from 'utils/hooks';\nimport { addQuickOrder } from 'api';\nimport { CustomLoader } from 'components/Shared/CustomLoader/CustomLoader';\nimport { CloseButton } from '../SharedComponent/CloseButton/CloseButton';\nimport { ModalYellowGradient } from '../SharedComponent/ModalYellowGradient/ModalYellowGradient';\nimport { ModalAgree } from '../SharedComponent/ModalAgree/ModalAgree';\nimport { TextAgree } from '../SharedComponent/Text/Text';\nimport { theme } from 'styles/theme';\nimport {\n  Btn,\n  CodeOfGoodText,\n  DivErrorMessage,\n  PhoneFieldGlobalStyles,\n  StyledErrorMessage,\n  StyledField,\n  StyledForm,\n  Title,\n  Wrapper,\n} from './ModalQuickOrder.styled';\n\ntype Props = {\n  product: { name: string; codeOfGood: string };\n  isModalQuickOrderOpen: boolean;\n  handleCloseQuickOrderModal: () => void;\n};\n\ntype FormValues = {\n  name: string;\n};\n\nexport const ModalQuickOrder: FC<Props> = ({\n  product: { name, codeOfGood },\n  isModalQuickOrderOpen,\n  handleCloseQuickOrderModal,\n}) => {\n  const isBigScreen = useMediaQuery({ query: '(min-width: 1280px)' });\n  const { isLoggedIn } = useAuth();\n  const {\n    userData: { firstName, tel: userTel },\n  } = useAuth();\n  const [isLoading, setIsLoading] = useState(false);\n  const [tel, setTel] = useState(isLoggedIn ? userTel : '+380');\n  const isValidPhone = isPhoneValid(tel);\n\n  const [isModalAgreeOpen, setIsModalAgreeOpen] = useState(false);\n\n  const initialValues: FormValues = {\n    name: isLoggedIn ? firstName : '',\n  };\n\n  const handleOpenAgreeModal = () => {\n    setIsModalAgreeOpen(true);\n    document.body.style.overflow = 'hidden';\n  };\n  const handleCloseAgreeModal = () => {\n    setIsModalAgreeOpen(false);\n    document.body.style.overflow = 'unset';\n  };\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      setTel(userTel);\n    }\n    if (!isLoggedIn) {\n      setTel('+380');\n    }\n  }, [isLoggedIn, userTel]);\n\n  return (\n    <>\n      {isLoading ? (\n        <CustomLoader />\n      ) : (\n        <ModalYellowGradient\n          isModalOpen={isModalQuickOrderOpen}\n          handleCloseModal={handleCloseQuickOrderModal}\n        >\n          <CloseButton handleCloseModal={handleCloseQuickOrderModal} />\n          <Wrapper>\n            <Title>{name}</Title>\n            <CodeOfGoodText>Код товару:{codeOfGood}</CodeOfGoodText>\n            <Formik\n              initialValues={initialValues}\n              validationSchema={nameSchema}\n              onSubmit={async (values, _) => {\n                const orderData = {\n                  name,\n                  codeOfGood,\n                  userName: values.name.trim(),\n                  tel: tel,\n                };\n\n                if (!isValidPhone || tel === '+380') {\n                  toast('Введіть номер телефону', {\n                    id: 'warning',\n                    icon: '👀',\n                    style: {\n                      background: `${theme.colors.secondary}`,\n                      color: `${theme.colors.textPrimary}`,\n                    },\n                  });\n                } else {\n                  setIsLoading(true);\n                  const response = await addQuickOrder(orderData);\n                  setIsLoading(false);\n                  if (response) {\n                    handleOpenAgreeModal();\n                  }\n                  handleCloseQuickOrderModal();\n                }\n              }}\n            >\n              <StyledForm>\n                <StyledField\n                  name=\"name\"\n                  type=\"text\"\n                  placeholder=\"Ваше ім’я\"\n                  aria-label=\"Ім'я\"\n                />\n                <StyledErrorMessage name=\"name\" component=\"div\" />\n                <PhoneInput\n                  style={\n                    {\n                      '--react-international-phone-height': !isBigScreen\n                        ? '28px'\n                        : '51px',\n                      '--react-international-phone-background-color':\n                        'transparent',\n                      '--react-international-phone-border-color': `${theme.colors.textPrimary}`,\n                      '--react-international-phone-text-color': `${theme.colors.textPrimary}`,\n                      '--react-international-phone-font-size': !isBigScreen\n                        ? '14px'\n                        : '24px',\n                      '--react-international-phone-border-radius': !isBigScreen\n                        ? '6px'\n                        : '8px',\n                      '--react-international-phone-flag-width': !isBigScreen\n                        ? '16px'\n                        : '24px',\n                      '--react-international-phone-flag-height': !isBigScreen\n                        ? '16px'\n                        : '24px',\n                    } as React.CSSProperties\n                  }\n                  defaultCountry=\"ua\"\n                  hideDropdown={true}\n                  value={tel}\n                  onChange={phone => setTel(phone)}\n                  aria-label=\"Телефон\"\n                />\n                {!isValidPhone && (\n                  <DivErrorMessage>\n                    Введіть свій номер телефону, будь ласка\n                  </DivErrorMessage>\n                )}\n                <Btn type=\"submit\">\n                  <div>Оформити замовлення</div>\n                </Btn>\n              </StyledForm>\n            </Formik>\n          </Wrapper>\n          <PhoneFieldGlobalStyles />\n        </ModalYellowGradient>\n      )}\n      <ModalAgree\n        isModalAgreeOpen={isModalAgreeOpen}\n        handleCloseAgreeModal={handleCloseAgreeModal}\n        buttonText=\"Гаразд\"\n      >\n        <TextAgree>Дякуємо за замовлення.</TextAgree>\n        <TextAgree>Очікуйте на дзвінок від менеджера.</TextAgree>\n      </ModalAgree>\n    </>\n  );\n};\n","import toast from 'react-hot-toast';\nimport { useEffect, useState, ChangeEvent } from 'react';\nimport { useTypedDispatch, useTypedSelector } from '../../redux/hooks';\nimport { FaMinus, FaPlus } from 'react-icons/fa6';\nimport { addItem } from '../../redux/basket/basketSlice';\nimport {\n  selectOneProduct,\n  selectOneProductPrice,\n  selectQuantityOrders,\n  selectSelectedHolder,\n  selectSelectedSealing,\n  selectSealingPrice,\n  selectHolderPrice,\n  selectPriceWithSale,\n} from '../../redux/products/productsSelectors';\nimport { selectItems } from '../../redux/basket/basketSelectors'\nimport {\n  setPrice,\n  setQuantityOrders,\n  setSealingPrice,\n  setHolderPrice,\n  setPriceWithSale,\n} from '../../redux/products/oneProductSlice';\nimport { ModalQuickOrder } from 'components/Modals/ModalQuickOrder/ModalQuickOrder';\nimport { theme } from '../../styles/theme';\nimport {\n  OrderBox,\n  Input,\n  Button,\n  CounterBox,\n  ButtonBox,\n  BasketButton,\n  OrderButton,\n} from './Card.styled';\n\nexport const Order = () => {\n    const [isModalQuickOrderOpen, setIsModalQuickOrderOpen] = useState(false);\n\n    const handleOpenQuickOrderModal = () => {\n        setIsModalQuickOrderOpen(true);\n        document.body.style.overflow = 'hidden';\n    };\n    const handleCloseQuickOrderModal = () => {\n        setIsModalQuickOrderOpen(false);\n        document.body.style.overflow = 'unset';\n    };\n\n    const dispatch = useTypedDispatch();\n\n    const product = useTypedSelector(selectOneProduct);\n    const { name, codeOfGood, price, quantity, capacity, capacityKey, discount, sale } = product;\n    const oneProductPrice = useTypedSelector(selectOneProductPrice);\n    const selectedSealing = useTypedSelector(selectSelectedSealing);\n    const selectedHolder = useTypedSelector(selectSelectedHolder);\n    const quantityOrders = useTypedSelector(selectQuantityOrders);\n    const sealingPrice = useTypedSelector(selectSealingPrice);\n    const holderPrice = useTypedSelector(selectHolderPrice);\n    const priceWithSale = useTypedSelector(selectPriceWithSale);\n    const quantityItemsInBasket = useTypedSelector(selectItems);\n\n    useEffect(() => {\n        dispatch(setSealingPrice(100 * quantityOrders));\n    }, [dispatch, quantityOrders]);\n\n    useEffect(() => {\n        let holderCost = 0;\n        let isHolder = capacity && capacity[capacityKey]?.holder\n        if (isHolder) {\n            holderCost = isHolder * 2 || 0;\n        }\n        dispatch(setHolderPrice(holderCost * quantityOrders));\n    }, [dispatch, quantityOrders, capacityKey, capacity]);\n\n    // useEffect(() => {\n\n    //     if (selectedSealing && selectedHolder) {\n    //         dispatch(setPrice(quantityOrders * oneProductPrice + sealingPrice + holderPrice));\n    //         dispatch(setPriceWithSale(quantityOrders * oneProductPrice * ((100 - discount) / 100) + sealingPrice + holderPrice));\n    //         return;\n    //     }\n\n    //     if (selectedSealing) {\n    //         dispatch(setPrice(quantityOrders * oneProductPrice + sealingPrice));\n    //         dispatch(setPriceWithSale(quantityOrders * oneProductPrice * ((100 - discount) / 100) + sealingPrice));\n    //         return;\n    //     }\n\n    //     if (selectedHolder) {\n    //         dispatch(setPrice(quantityOrders * oneProductPrice + holderPrice));\n    //         dispatch(setPriceWithSale(quantityOrders * oneProductPrice * ((100 - discount) / 100) + holderPrice));\n    //         return;\n    //     }\n\n    //     dispatch(setPrice(quantityOrders * oneProductPrice));\n    //     if (typeof oneProductPrice === 'string') {\n    //         return;\n    //     }\n    //     dispatch(setPriceWithSale(quantityOrders * oneProductPrice * ((100 - discount) / 100)));\n\n    // }, [dispatch, selectedSealing, holderPrice, oneProductPrice, selectedHolder, quantityOrders, sealingPrice, discount]);\n\n    useEffect(() => {\n        if (typeof oneProductPrice === 'string') {\n            return;\n        };\n\n        let totalPrice = quantityOrders * oneProductPrice;\n        let totalPriceWithSale = totalPrice * ((100 - discount) / 100);\n\n        if (selectedSealing) {\n            totalPrice += sealingPrice;\n            totalPriceWithSale += sealingPrice;\n        };\n\n        if (selectedHolder) {\n            totalPrice += holderPrice;\n            totalPriceWithSale += holderPrice;\n        };\n\n        dispatch(setPrice(totalPrice));\n        dispatch(setPriceWithSale(totalPriceWithSale));\n    }, [\n        dispatch,\n        selectedSealing,\n        selectedHolder,\n        quantityOrders,\n        oneProductPrice,\n        sealingPrice,\n        holderPrice,\n        discount,\n    ]);\n\n    const plusOne = () => {\n        if (quantityOrders < quantity) {\n            dispatch(setQuantityOrders(quantityOrders + 1));\n        } else {\n            toast(`Максимальна кількість в наявності: ${quantity} шт`, {\n                style: {\n                    border: `1px solid ${theme.colors.error}`,\n                },\n                id: 'clipboard',\n            });\n        };\n    };\n\n    const minusOne = () => {\n        if (quantityOrders > 1) {\n            dispatch(setQuantityOrders(quantityOrders - 1));\n        };\n    };\n\n    const setValue = (e: ChangeEvent<HTMLInputElement>) => {\n\n        const value = Number(e.target.value)\n        if (value > quantity) {\n            dispatch(setQuantityOrders(quantity));\n            toast(`Максимальна кількість в наявності: ${quantity} шт`, {\n                style: {\n                    border: `1px solid ${theme.colors.error}`,\n                },\n                id: 'clipboard',\n            });\n        };\n\n        if (value <= quantity) {\n            dispatch(setQuantityOrders(value || 0));\n        };\n    };\n\n    const minValue = () => {\n        if (quantityOrders === 0) {\n            dispatch(setQuantityOrders(1));\n        };\n    };\n\n    const addToBasket = () => {\n        const itemInBasket = quantityItemsInBasket.find(item => item.codeOfGood === codeOfGood);\n\n        if (itemInBasket && quantity < itemInBasket.quantityOrdered + quantityOrders) {\n            return toast(\n                `Цей товар вже є в кошику в кількості ${itemInBasket.quantityOrdered} шт. Максимальна кількість в наявності: ${quantity} шт.`,\n                {\n                    style: {\n                        border: `1px solid ${theme.colors.error}`,\n                    },\n                    id: 'clipboard',\n                    duration: 5000,\n                }\n            );\n        };\n\n        let itemPrice: number = 0;\n        \n        if (typeof price === 'number') {\n            itemPrice = sale ? priceWithSale / quantityOrders : price / quantityOrders;\n        }\n        \n        dispatch(\n            addItem({\n                ...product,\n                price: itemPrice,\n                capacityKey: capacityKey || '',\n                selectedSealing,\n                selectedHolder,\n                quantityOrdered: quantityOrders,\n                totalPrice: sale ? priceWithSale : price,\n            })\n        );\n        toast.success(`Товар доданий до кошика`, {\n            id: 'clipboard',\n        });\n    };\n\n    return (\n        <OrderBox>\n            <CounterBox>\n                <Button\n                    onClick={minusOne}\n                    disabled={typeof oneProductPrice === 'string' || quantity < 1}\n                >\n                    <FaMinus />\n                </Button>\n                <Input\n                    min=\"1\"\n                    max={quantity}\n                    onBlur={minValue}\n                    onChange={setValue}\n                    value={quantityOrders}\n                    disabled={typeof oneProductPrice === 'string' || quantity < 1}\n                ></Input>\n                <Button\n                    onClick={plusOne}\n                    disabled={typeof oneProductPrice === 'string' || quantity < 1}\n                >\n                    <FaPlus />\n                </Button>\n            </CounterBox>\n            <ButtonBox>\n                <BasketButton\n                    disabled={typeof oneProductPrice === 'string' || quantity < 1}\n                    onClick={addToBasket}\n                >В кошик\n                </BasketButton>\n                <OrderButton\n                    onClick={handleOpenQuickOrderModal}\n                    disabled={quantity < 1}\n                >Швидке замовлення\n                </OrderButton>\n            </ButtonBox>\n            <ModalQuickOrder\n                product={{ name, codeOfGood }}\n                isModalQuickOrderOpen={isModalQuickOrderOpen}\n                handleCloseQuickOrderModal={handleCloseQuickOrderModal}\n            />\n        </OrderBox>\n    );\n};\n","import { useMediaQuery } from 'react-responsive';\nimport { useEffect } from 'react';\nimport { useTypedDispatch, useTypedSelector } from '../../redux/hooks';\nimport { selectOneProduct } from '../../redux/products/productsSelectors';\nimport { ProductPhoto } from '../Shared/ProductPhoto/ProductPhoto';\nimport { Description } from './Description';\nimport { Capacity } from './Capacity';\nimport { CheckBox } from './Checkbox';\nimport { Order } from './Order';\nimport { ProductInformation } from '../Shared/ProductInformation/ProductInformation';\nimport {\n  setQuantityOrders,\n  setSelectedHolder,\n  setSelectedSealing,\n} from '../../redux/products/oneProductSlice';\nimport { Wrapper, Box, Title, Case } from './Card.styled';\n\nexport const Card = () => {\n  const mobileVersion = useMediaQuery({ query: '(max-width:1279px)' });\n  const dispatch = useTypedDispatch();\n  const { name, image, capacity, information } = useTypedSelector(selectOneProduct);\n\n  useEffect(() => {\n    dispatch(setQuantityOrders(1));\n    dispatch(setSelectedHolder(false));\n    dispatch(setSelectedSealing(false));\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      {mobileVersion ? (\n        <>\n          <Title>{name}</Title>\n          <ProductPhoto name={name} image={image} />\n          <Description />\n          {capacity && <Capacity />}\n          {capacity && <CheckBox />}\n          <Order />\n        </>\n      ) : (\n        <Case>\n          <div>\n            <ProductPhoto name={name} image={image} />\n            {capacity && <Capacity />}\n          </div>\n          <Box>\n            <Title>{name}</Title>\n            <Description />\n            {capacity && <CheckBox />}\n            <Order />\n          </Box>\n        </Case>\n      )}\n      {information && <ProductInformation information={information} />}\n    </Wrapper>\n  );\n};\n","import { useTypedDispatch, useTypedSelector } from '../redux/hooks';\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { getOneProduct } from '../redux/products/productsOperations';\nimport {\n  selectOneProductError,\n  selectOneProductIsLoading,\n} from '../redux/products/productsSelectors';\nimport { CustomLoader } from 'components/Shared/CustomLoader/CustomLoader';\nimport { CustomError } from 'components/Shared/CustomError/CustomError';\nimport { Card } from 'components/CardPage/Card';\n\nconst CardPage = () => {\n  const dispatch = useTypedDispatch();\n  const isLoading = useTypedSelector(selectOneProductIsLoading);\n  const error = useTypedSelector(selectOneProductError);\n  const { cardId } = useParams();\n\n  useEffect(() => {\n   cardId && dispatch(getOneProduct(cardId));\n  }, [dispatch, cardId]);\n\n  return (\n    <>\n      {isLoading && <CustomLoader />}\n      {!isLoading && error ? <CustomError /> : <Card />}\n    </>\n  );\n};\n\nexport default CardPage;\n","export const getNewPrice = (\n  discount: number,\n  price: string | number\n): string | number => {\n  if (typeof price === 'string') {\n    const [minPrice, maxPrice] = price.split('-').map(Number);\n    const minNewPrice = Math.round(minPrice - (minPrice * discount) / 100);\n    const maxNewPrice = Math.round(maxPrice - (maxPrice * discount) / 100);\n    return `${minNewPrice} - ${maxNewPrice}`;\n  } else {\n    return Math.round(price - (price * discount) / 100);\n  }\n};\n"],"names":["CustomError","_jsx","style","width","backgroundColor","children","src","errorImage","alt","margin","InfoBox","styled","div","Subject","h2","props","theme","colors","greyBackgroundPaper","Info","ProductInformation","_ref","information","newInfo","split","_jsxs","map","item","SliderDiv","hoverColor","Image","img","ImageBig","ProductPhoto","name","image","length","className","Slider","dots","infinite","speed","slidesToShow","slidesToScroll","noImage","onError","e","currentTarget","backgroundButton","disabled","secondary","backgroundHoverButton","cursorButton","colorButton","textDisabled","textPrimary","Wrapper","Box","Case","Title","h1","DescBox","TextBox","Text","p","PriceContainer","PriceBox","NewPrice","Price","IconHeart","FaRegHeart","IconFullHeart","FaHeartCircleCheck","Wrap","LikeBox","Like","IconSquare","svg","IconSpiral","Desc","ul","Item","li","Container","Group","ExtraPrice","OrderBox","CounterBox","Input","input","Button","button","ButtonBox","BasketButton","OrderButton","CapacityBox","Subtitle","selectStyles","control","styles","borderRadius","borderStyle","maxHeight","minHeight","border","borderColor","boxShadow","menu","fontSize","display","option","isDisabled","isFocused","isSelected","undefined","color","cursor","padding","placeholder","indicatorsContainer","height","valueContainer","singleValue","Description","dispatch","useTypedDispatch","isLoggedIn","useAuth","codeOfGood","description","price","sale","discount","quantity","useTypedSelector","selectOneProduct","priceWithSale","selectPriceWithSale","favoriteItems","selectFavorites","newDescription","newPrice","getNewPrice","isInFavorites","some","favoriteItem","handleFavorite","deleteFromFavorite","addToFavorite","onClick","_Fragment","handleOpenSignUpSignInModal","setAuthModalOpen","document","body","overflow","href","sprite","i","Capacity","capacity","options","Object","keys","sort","a","b","Number","value","label","descr","setDescr","useState","newDescr","Select","onChange","_capacity$value","setPrice","setPriceOneProduct","setSelectedHolder","setSelectedSealing","setCapacityKey","setQuantityOrders","setPriceWithSale","isSearchable","createSvgIcon","d","getCheckboxUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CheckboxRoot","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","ownerState","root","indeterminate","capitalize","size","_extends","vars","palette","text","disableRipple","action","activeChannel","mainChannel","hoverOpacity","alpha","active","main","checkboxClasses","checked","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","React","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useDefaultProps","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","type","clsx","StyledFormGroup","FormGroup","gap","themeMUI","breakpoints","only","StyledCheckbox","Checkbox","CheckBox","holder","selectedSealing","selectSelectedSealing","selectedHolder","selectSelectedHolder","oneProductPrice","selectOneProductPrice","sealingPrice","selectSealingPrice","holderPrice","selectHolderPrice","FormControlLabel","target","sx","yellow","CodeOfGoodText","StyledForm","Form","StyledField","Field","StyledErrorMessage","ErrorMessage","error","PhoneFieldGlobalStyles","createGlobalStyle","DivErrorMessage","Btn","ModalQuickOrder","product","isModalQuickOrderOpen","handleCloseQuickOrderModal","isBigScreen","useMediaQuery","query","userData","firstName","tel","userTel","isLoading","setIsLoading","setTel","isValidPhone","isPhoneValid","isModalAgreeOpen","setIsModalAgreeOpen","initialValues","useEffect","CustomLoader","ModalYellowGradient","isModalOpen","handleCloseModal","CloseButton","Formik","validationSchema","nameSchema","onSubmit","async","values","_","orderData","userName","trim","response","addQuickOrder","toast","id","background","component","PhoneInput","defaultCountry","hideDropdown","phone","ModalAgree","handleCloseAgreeModal","buttonText","TextAgree","Order","setIsModalQuickOrderOpen","capacityKey","quantityOrders","selectQuantityOrders","quantityItemsInBasket","selectItems","setSealingPrice","_capacity$capacityKey","holderCost","isHolder","setHolderPrice","totalPrice","totalPriceWithSale","minusOne","FaMinus","min","max","onBlur","minValue","plusOne","FaPlus","addToBasket","itemInBasket","find","quantityOrdered","duration","itemPrice","addItem","success","handleOpenQuickOrderModal","Card","mobileVersion","CardPage","selectOneProductIsLoading","selectOneProductError","cardId","useParams","getOneProduct","minPrice","maxPrice","Math","round"],"sourceRoot":""}