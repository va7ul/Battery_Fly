{"version":3,"file":"static/js/468.63b073b5.chunk.js","mappings":"kOACO,MAAMA,EAAcA,KAEvBC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,MAAO,OAAQC,gBAAiB,QAASC,UACrDJ,EAAAA,EAAAA,KAAA,OAAKK,IAAKC,EAAYC,IAAI,cAAcN,MAAO,CAAEO,OAAQ,a,qHCDxD,MAAMC,EAAaC,EAAAA,GAAOC,EAAE;;;;;;;;;;;;;;;;EAkBtBC,GAAgBF,EAAAA,EAAAA,IAAOG,EAAAA,GAAQ;;;;gBAI5BC,GAASA,EAAMC,MAAMC,WAAWC;;;;;;;;;;;;;;;;;;oBAkB5BH,GAASA,EAAMC,MAAMG,OAAOC;;;;;oBAK5BL,GAASA,EAAMC,MAAMC,WAAWC;;;;;;;;;;;aAWvCH,GAASA,EAAMC,MAAMG,OAAOE;;;;sBAInBN,GAASA,EAAMC,MAAMG,OAAOE;;;;;;aAMrCN,GAASA,EAAMC,MAAMG,OAAOE;;;;sBAInBN,GAASA,EAAMC,MAAMG,OAAOE;;;;eCjE3C,MAAMC,EAAaA,KACxB,MAAMC,GAAWC,EAAAA,EAAAA,KAKjB,OACEvB,EAAAA,EAAAA,KAAA,SAAAI,UACEoB,EAAAA,EAAAA,MAACf,EAAU,CAAAL,SAAA,EACTJ,EAAAA,EAAAA,KAAA,MAAAI,UACEoB,EAAAA,EAAAA,MAACZ,EAAa,CAACa,GAAG,aAAYrB,SAAA,EAC5BJ,EAAAA,EAAAA,KAAC0B,EAAAA,EAAyB,KAC1B1B,EAAAA,EAAAA,KAAA,QAAAI,SAAM,uEAGVJ,EAAAA,EAAAA,KAAA,MAAAI,UACEoB,EAAAA,EAAAA,MAACZ,EAAa,CAACa,GAAG,YAAWrB,SAAA,EAC3BJ,EAAAA,EAAAA,KAAC2B,EAAAA,EAAmB,KACpB3B,EAAAA,EAAAA,KAAA,QAAAI,SAAM,4GAGVJ,EAAAA,EAAAA,KAAA,MAAAI,UACEoB,EAAAA,EAAAA,MAACZ,EAAa,CAACa,GAAG,eAAcrB,SAAA,EAC9BJ,EAAAA,EAAAA,KAAC4B,EAAAA,EAA0B,KAC3B5B,EAAAA,EAAAA,KAAA,QAAAI,SAAM,+CAGVJ,EAAAA,EAAAA,KAAA,MAAAI,UACEoB,EAAAA,EAAAA,MAACZ,EAAa,CAACa,GAAG,MAAMI,QA1BjBC,KACbR,GAASS,EAAAA,EAAAA,MAAS,EAyB4B3B,SAAA,EACtCJ,EAAAA,EAAAA,KAACgC,EAAAA,EAAkB,KACnBhC,EAAAA,EAAAA,KAAA,QAAAI,SAAM,4CAIN,C,gMCvCL,MAAM6B,GAAavB,EAAAA,EAAAA,IAAOwB,EAAAA,GAAK;;;;;;;EASzBC,EAAczB,EAAAA,GAAO0B,GAAG;;;;;;;;EAUxBC,GAAa3B,EAAAA,EAAAA,IAAOwB,EAAAA,GAAK;;;;WAI3BpB,GAASA,EAAMC,MAAMG,OAAOE;;;;;EAO1BkB,EAAe5B,EAAAA,GAAO6B,GAAG;;;;;;;;;;;;EAczBC,EAAW9B,EAAAA,GAAO6B,GAAG;;;;;;;;;;;;;;;EAiBrBE,EAAiB/B,EAAAA,GAAO6B,GAAG;;;;;;;;;;aAU3BzB,GAASA,EAAMC,MAAMG,OAAOwB;;;;;;;;;eCzDlC,MAAMC,EAA4CC,IAAa,IAAZ,GAAEC,GAAID,EAC9D,MAAM,WACJE,EAAU,KACVC,EAAI,MACJC,EAAK,MACLC,EAAK,gBACLC,EAAe,WACfC,EAAU,YACVC,EAAW,gBACXC,EAAe,eACfC,GACET,EAQJ,OACErB,EAAAA,EAAAA,MAAA+B,EAAAA,SAAA,CAAAnD,SAAA,EACEJ,EAAAA,EAAAA,KAACiC,EAAU,CAACR,GAAI,iBAAiBqB,IAAa1C,UAC5CJ,EAAAA,EAAAA,KAACmC,EAAW,CACVqB,QAAQ,OACRnD,IAAK2C,EAAM,IAAMS,EACjBlD,IAAKwC,EACLW,QAZNC,IAEAA,EAAEC,cAAcvD,IAAM,GAAGoD,GAAS,OAahCzD,EAAAA,EAAAA,KAACqC,EAAU,CAACZ,GAAI,iBAAiBqB,IAAa1C,SAAE2C,KAChDvB,EAAAA,EAAAA,MAAA,KAAApB,SAAA,CAAI6C,EAAM,0BACVzB,EAAAA,EAAAA,MAAA,KAAApB,SAAA,CAAI8C,EAAgB,oBACpB1B,EAAAA,EAAAA,MAAA,KAAApB,SAAA,CAAI+C,EAAW,yBACdC,IACC5B,EAAAA,EAAAA,MAACc,EAAY,CAAAlC,SAAA,EACXoB,EAAAA,EAAAA,MAACgB,EAAQ,CAAApC,SAAA,EACPJ,EAAAA,EAAAA,KAAC6D,EAAAA,EAAe,KAChBrC,EAAAA,EAAAA,MAAA,KAAApB,SAAA,CAAIgD,EAAY,WAEjBC,IACC7B,EAAAA,EAAAA,MAACiB,EAAc,CAAArC,SAAA,EACbJ,EAAAA,EAAAA,KAAC8D,EAAAA,EAAsB,KACvB9D,EAAAA,EAAAA,KAAA,KAAAI,SAAG,gFAGNkD,IACC9B,EAAAA,EAAAA,MAACiB,EAAc,CAAArC,SAAA,EACbJ,EAAAA,EAAAA,KAAC8D,EAAAA,EAAsB,KACvB9D,EAAAA,EAAAA,KAAA,KAAAI,SAAG,kJAKV,EC/CM2D,EAAarD,EAAAA,GAAOsD,CAAwB;;WAf1BlD,IAC7B,OAAQA,EAAMmD,MACZ,IAAK,2BACH,OAAOnD,EAAMC,MAAMG,OAAOgD,QAC5B,IAAK,8CACH,OAAOpD,EAAMC,MAAMG,OAAOE,WAC5B,IAAK,yDACH,OAAON,EAAMC,MAAMG,OAAOiD,MAC5B,IAAK,+DACH,OAAOrD,EAAMC,MAAMG,OAAOwB,QAC5B,QACE,OACJ;EAQW0B,EAAsB1D,EAAAA,GAAO6B,GAAG;;EAIhC8B,EAAwB3D,EAAAA,GAAO6B,GAAG;;;;EAMlC+B,EAAmB5D,EAAAA,GAAOC,EAAE;6BACZG,GAASA,EAAMC,MAAMG,OAAOqD;;;;;;;;;;;;;;;;;;EAoB5CC,EAAiB9D,EAAAA,GAAO6B,GAAG;;;;;;;;;;;EAa3BkC,EAAgB/D,EAAAA,GAAO6B,GAAG;;EAI1BmC,EAAYhE,EAAAA,GAAOiE,IAAI;;;WAGzB7D,GAASA,EAAMC,MAAMG,OAAOqD;;;;;EAO1BK,EAAOlE,EAAAA,GAAOiE,IAAI;;;;;;;EASlBE,EAAMnE,EAAAA,GAAOsD,CAAC;;;;;;;;;;;EAadc,EAAWpE,EAAAA,GAAOsD,CAAmC;;;;;;;aAOrDlD,GACPA,EAAMiE,SAAWjE,EAAMC,MAAMG,OAAOwB,QAAU;;;;;;EAQvCsC,EAAQtE,EAAAA,GAAOsD,CAAC;;;;;;;;;;;;gBC9FtB,MAAMiB,EAA0DrC,IAEhE,IAFiE,GACtEC,GACDD,EACC,MAAM,cAAEsC,EAAa,OAAEC,EAAM,KAAEC,EAAI,SAAEC,GAAaxC,EAE5CyC,GAAmBC,EAAAA,EAAAA,GAAiBC,EAAAA,GACpCrB,GAAQoB,EAAAA,EAAAA,GAAiBE,EAAAA,IACzBC,ECrCgBC,IAID,GAHTA,EAAKC,MAAM,EAAG,OACZD,EAAKC,MAAM,EAAG,MACfD,EAAKC,MAAM,EAAG,KDkCLC,CAAQT,GACxBO,EEpCoBG,EAC1BR,EACAS,IAEOT,EAAiBU,MACtBpD,IAAA,IAAC,cAAEsC,GAAetC,EAAA,OAAKsC,IAAkBa,CAAW,IF+BzCD,CAAaR,EAAkBJ,GACtCe,GAAkBZ,IAAYa,EAAAA,EAAAA,GAAeb,GAC7Cc,GAAeR,IAAQO,EAAAA,EAAAA,GAAeP,EAAKS,OAC3CC,GAAkBV,IAAQO,EAAAA,EAAAA,GAAeP,EAAKW,eAE9ChF,GAAWC,EAAAA,EAAAA,MACVgF,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,GAE/BC,EAAaC,UACZJ,IACCjB,EAAiBsB,OAAS,IAAMjB,IAClCrE,GAASuF,EAAAA,EAAAA,IAAgB3B,IAG7BsB,GAAWD,EAAO,EAGpB,OACE/E,EAAAA,EAAAA,MAAA+B,EAAAA,SAAA,CAAAnD,SAAA,EACEoB,EAAAA,EAAAA,MAAA,KAAApB,SAAA,CAAG,SAAE8E,MACLlF,EAAAA,EAAAA,KAAC+D,EAAU,CAACE,KAAMkB,EAAO/E,SAAE+E,KAC3BnF,EAAAA,EAAAA,KAAA,KAAAI,SAAIsF,KACJlE,EAAAA,EAAAA,MAAA,KAAApB,SAAA,CAAI6F,EAAe,yBAClBM,GACCvG,EAAAA,EAAAA,KAAC8G,EAAAA,IAAgB,CAACjF,QAAS6E,KAE3B1G,EAAAA,EAAAA,KAAC+G,EAAAA,IAAkB,CAAClF,QAAS6E,IAE9BH,IACEpC,GACCnE,EAAAA,EAAAA,KAACoE,EAAmB,CAAAhE,UAClBJ,EAAAA,EAAAA,KAACD,EAAAA,EAAW,OAGdyB,EAAAA,EAAAA,MAAC6C,EAAqB,CAAAjE,SAAA,EACpBJ,EAAAA,EAAAA,KAACsE,EAAgB,CAAAlE,SACV,OAAJuF,QAAI,IAAJA,OAAI,EAAJA,EAAMqB,UAAUC,KAAIpE,IACnB7C,EAAAA,EAAAA,KAAA,MAAAI,UACEJ,EAAAA,EAAAA,KAAC2C,EAAY,CAACE,GAAIA,KADXA,EAAGqE,UAKhB1F,EAAAA,EAAAA,MAACgD,EAAc,CAAApE,SAAA,EACboB,EAAAA,EAAAA,MAACiD,EAAa,CAAArE,SAAA,EACZJ,EAAAA,EAAAA,KAAC0E,EAAS,CAAAtE,SAAC,wDACXJ,EAAAA,EAAAA,KAAC4E,EAAI,CAAAxE,SAAM,OAAJuF,QAAI,IAAJA,OAAI,EAAJA,EAAMwB,mBAEf3F,EAAAA,EAAAA,MAACiD,EAAa,CAAArE,SAAA,EACZJ,EAAAA,EAAAA,KAAC0E,EAAS,CAAAtE,SAAC,4CACXoB,EAAAA,EAAAA,MAACoD,EAAI,CAAAxE,SAAA,CACE,OAAJuF,QAAI,IAAJA,OAAI,EAAJA,EAAMyB,KAAK,KAAO,OAAJzB,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,iBAGzB7F,EAAAA,EAAAA,MAACiD,EAAa,CAAArE,SAAA,EACZJ,EAAAA,EAAAA,KAAC0E,EAAS,CAAAtE,SAAC,iFACXJ,EAAAA,EAAAA,KAAC4E,EAAI,CAAAxE,SAAM,OAAJuF,QAAI,IAAJA,OAAI,EAAJA,EAAM2B,cAEf9F,EAAAA,EAAAA,MAACqD,EAAG,CAAAzE,SAAA,CAAC,8EAEHoB,EAAAA,EAAAA,MAAA,QAAApB,SAAA,CAAM,IAAE+F,EAAY,6BAEtB3E,EAAAA,EAAAA,MAACsD,EAAQ,CAACC,SAAc,OAAJY,QAAI,IAAJA,OAAI,EAAJA,EAAM4B,kBAAkBnH,SAAA,CAAC,mHAE3CoB,EAAAA,EAAAA,MAAA,QAAApB,SAAA,CAAM,MAAIiG,EAAe,6BAE3B7E,EAAAA,EAAAA,MAACwD,EAAK,CAAA5E,SAAA,CAAC,mCAELoB,EAAAA,EAAAA,MAAA,QAAApB,SAAA,CAAO6F,EAAe,qCAK/B,E,cG3GA,MAAMuB,EAAU9G,EAAAA,GAAO6B,GAAG;;;;;;;;;;;YAWrBzB,GAASA,EAAMC,MAAMG,OAAOuG;;;;;;;;;EAW3BC,EAAQhH,EAAAA,GAAOsD,CAAC;;;;;;;;;;;EAahB2D,GAAmBjH,EAAAA,EAAAA,IAAOwB,EAAAA,GAAK;;;;;;;;;;;gBAW5BpB,GAASA,EAAMC,MAAMG,OAAO0G;;;;;;;;;;;kBAW1B9G,GAASA,EAAMC,MAAMG,OAAOE;;ECzDjCyG,EAAWA,KAEpBrG,EAAAA,EAAAA,MAACgG,EAAO,CAAApH,SAAA,EACNJ,EAAAA,EAAAA,KAAC0H,EAAK,CAAAtH,SAAC,kJACPJ,EAAAA,EAAAA,KAAA,KAAAI,SAAG,ohBAIHJ,EAAAA,EAAAA,KAAC2H,EAAgB,CAAClG,GAAG,cAAarB,SAAC,qFACnCJ,EAAAA,EAAAA,KAAC8H,EAAAA,EAA0B,OCVpBN,EAAU9G,EAAAA,GAAO6B,GAAG;;;;;;;;;;;EAapBmF,EAAQhH,EAAAA,GAAOqH,EAAE;;;;;;;;;EAWjBC,EAAiBtH,EAAAA,GAAOC,EAAE;;;;;;;EAS1BsH,EAAwBvH,EAAAA,GAAOwH,EAAE;;;;;;;;;;;;;;;;;;;;kBAoB5BpH,GAASA,EAAMC,MAAMC,WAAWC;;;;;;cAMpCH,GAASA,EAAMC,MAAMG,OAAOE;;;;;;;;;;;;;;;EC5C7B+G,EAAgBA,KAC3B,MAAMC,GAAgB7C,EAAAA,EAAAA,GAAiB8C,EAAAA,IACjClE,GAAQoB,EAAAA,EAAAA,GAAiB+C,EAAAA,IACzBC,GAAiBC,EAAAA,EAAAA,eAAc,CAAEC,MAAO,uBAE9C,OACEjH,EAAAA,EAAAA,MAACgG,EAAO,CAAApH,SAAA,CACLmI,IAAkBvI,EAAAA,EAAAA,KAACqB,EAAAA,EAAU,IAC7B8C,GACCnE,EAAAA,EAAAA,KAACD,EAAAA,EAAW,IACVqI,EAAcxB,QAChBpF,EAAAA,EAAAA,MAAA,OAAApB,SAAA,EACEJ,EAAAA,EAAAA,KAAC0H,EAAK,CAAAtH,SAAC,kEACPoB,EAAAA,EAAAA,MAACwG,EAAc,CAAA5H,SAAA,EACboB,EAAAA,EAAAA,MAACyG,EAAqB,CAAA7H,SAAA,EACpBJ,EAAAA,EAAAA,KAAA,KAAAI,SAAG,kEACHJ,EAAAA,EAAAA,KAAA,KAAAI,SAAG,0CACHJ,EAAAA,EAAAA,KAAA,KAAAI,SAAG,8BACHJ,EAAAA,EAAAA,KAAA,KAAAI,SAAG,gCAEJgI,EAAcnB,KAAIpE,IACjB7C,EAAAA,EAAAA,KAACiI,EAAqB,CAAA7H,UACpBJ,EAAAA,EAAAA,KAACiF,EAAmB,CAACpC,GAAIA,KADCA,EAAGqC,wBAOrClF,EAAAA,EAAAA,KAAC6H,EAAQ,MAEH,ECpBd,EAjB0Ba,KACxB,MAAMpH,GAAWC,EAAAA,EAAAA,KACXoH,GAAYpD,EAAAA,EAAAA,GAAiBqD,EAAAA,IAC7BC,GAAiBtD,EAAAA,EAAAA,GAAiBuD,EAAAA,IAMxC,OAJAC,EAAAA,EAAAA,YAAU,KACRzH,GAAS0H,EAAAA,EAAAA,MAAmB,GAC3B,CAAC1H,KAGFE,EAAAA,EAAAA,MAAA+B,EAAAA,SAAA,CAAAnD,SAAA,EACIuI,GAAaE,KAAmB7I,EAAAA,EAAAA,KAACiJ,EAAAA,EAAY,KAC7CN,IAAa3I,EAAAA,EAAAA,KAACmI,EAAa,MAC5B,C","sources":["components/Shared/CustomError/CustomError.tsx","components/Shared/SideBarNav/SideBarNav.styled.ts","components/Shared/SideBarNav/SideBarNav.tsx","components/OrdersHistoryPage/OrdersHistoryListEl/OrderDetails/OrderDetails.styled.ts","components/OrdersHistoryPage/OrdersHistoryListEl/OrderDetails/OrderDetails.tsx","components/OrdersHistoryPage/OrdersHistoryListEl/OrdersHistoryListEl.styled.ts","components/OrdersHistoryPage/OrdersHistoryListEl/OrdersHistoryListEl.tsx","utils/helpers/getDate.ts","utils/helpers/getOrderInfo.ts","components/OrdersHistoryPage/NoOrders/NoOrders.styled.ts","components/OrdersHistoryPage/NoOrders/NoOrders.tsx","components/OrdersHistoryPage/OrdersHistory.styled.ts","components/OrdersHistoryPage/OrdersHistory.tsx","pages/OrdersHistoryPage.tsx"],"sourcesContent":["import errorImage from '../../../assets/images/something-went-wrong.gif';\nexport const CustomError = () => {\n  return (\n    <div style={{ width: '100%', backgroundColor: '#fff' }}>\n      <img src={errorImage} alt=\"error_image\" style={{ margin: '0 auto' }} />\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledList = styled.ul`\n  display: grid;\n  width: fit-content;\n  gap: 8px;\n\n  @media screen and (min-width: 1280px) {\n    gap: 16px;\n  }\n\n  li:last-child {\n    a > span {\n      &::after {\n        display: none;\n      }\n    }\n  }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  display: flex;\n  gap: 5px;\n  align-items: center;\n  transition: ${props => props.theme.transition.main};\n\n  svg {\n    width: 20px;\n    height: 20px;\n\n    @media screen and (min-width: 1280px) {\n      width: 24px;\n      height: 24px;\n    }\n  }\n\n  span {\n    position: relative;\n\n    &::after {\n      content: '';\n      position: absolute;\n      background: ${props => props.theme.colors.textPrimary};\n      width: 68px;\n      height: 1px;\n      left: 0px;\n      bottom: -6px;\n      transition: ${props => props.theme.transition.main};\n\n      @media screen and (min-width: 1280px) {\n        width: 96px;\n        bottom: -9px;\n      }\n    }\n  }\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.hoverColor};\n\n    span {\n      &::after {\n        background: ${props => props.theme.colors.hoverColor};\n      }\n    }\n  }\n\n  &.active {\n    color: ${props => props.theme.colors.hoverColor};\n\n    span {\n      &::after {\n        background: ${props => props.theme.colors.hoverColor};\n      }\n    }\n  }\n`;\n","import AccountCircleOutlinedIcon from '@mui/icons-material/AccountCircleOutlined';\nimport HistoryOutlinedIcon from '@mui/icons-material/HistoryOutlined';\nimport FavoriteBorderOutlinedIcon from '@mui/icons-material/FavoriteBorderOutlined';\nimport LogoutOutlinedIcon from '@mui/icons-material/LogoutOutlined';\nimport { useTypedDispatch } from '../../../redux/hooks';\nimport { logOut } from '../../../redux/user/userOperations';\nimport { StyledList, StyledNavLink } from './SideBarNav.styled';\n\nexport const SideBarNav = () => {\n  const dispatch = useTypedDispatch();\n  const logout = () => {\n    dispatch(logOut());\n  };\n\n  return (\n    <aside>\n      <StyledList>\n        <li>\n          <StyledNavLink to=\"../profile\">\n            <AccountCircleOutlinedIcon />\n            <span>Користувач</span>\n          </StyledNavLink>\n        </li>\n        <li>\n          <StyledNavLink to=\"../orders\">\n            <HistoryOutlinedIcon />\n            <span>Історія замовлень</span>\n          </StyledNavLink>\n        </li>\n        <li>\n          <StyledNavLink to=\"../favorites\">\n            <FavoriteBorderOutlinedIcon />\n            <span>Обране</span>\n          </StyledNavLink>\n        </li>\n        <li>\n          <StyledNavLink to=\"../\" onClick={logout}>\n            <LogoutOutlinedIcon />\n            <span>Вийти</span>\n          </StyledNavLink>\n        </li>\n      </StyledList>\n    </aside>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  grid-row: 1/4;\n  margin-right: 6px;\n\n  @media screen and (min-width: 1280px) {\n    margin-right: 10px;\n  }\n`;\n\nexport const StyledImage = styled.img`\n  width: 54px;\n  height: 54px;\n\n  @media screen and (min-width: 1280px) {\n    width: 90px;\n    height: 90px;\n  }\n`;\n\nexport const StyledName = styled(Link)`\n  grid-row: 1/3;\n  height: 36px;\n  overflow: hidden;\n  color: ${props => props.theme.colors.hoverColor};\n\n  @media screen and (min-width: 1280px) {\n    height: 54px;\n  }\n`;\n\nexport const CapacityWrap = styled.div`\n  grid-column: 2/6;\n  display: flex;\n  align-items: center;\n  margin-right: auto;\n  gap: 5px;\n  font-size: 8px;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 11px;\n    gap: 10px;\n  }\n`;\n\nexport const Capacity = styled.div`\n  display: flex;\n  align-items: center;\n  font-weight: 600;\n  color: rgb(99, 99, 99);\n\n  svg {\n    width: 12px;\n    height: 12px;\n\n    @media screen and (min-width: 1280px) {\n      width: 19px;\n      height: 19px;\n    }\n  }\n`;\n\nexport const SealingHolders = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 2px;\n\n  @media screen and (min-width: 1280px) {\n    gap: 5px;\n  }\n\n  svg {\n    color: ${props => props.theme.colors.success};\n    width: 12px;\n    height: 12px;\n\n    @media screen and (min-width: 1280px) {\n      width: 16px;\n      height: 16px;\n    }\n  }\n`;\n","import noImage from '../../../../assets/images/no-image-available.webp';\nimport Battery0BarIcon from '@mui/icons-material/Battery0Bar';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport { CartItem } from '../../../../@types/order.types';\nimport {\n  StyledLink,\n  StyledImage,\n  StyledName,\n  CapacityWrap,\n  Capacity,\n  SealingHolders,\n} from './OrderDetails.styled';\n\ntype PropsOrderDetails = {\n  el: CartItem;\n};\n\nexport const OrderDetails: React.FC<PropsOrderDetails> = ({ el }) => {\n  const {\n    codeOfGood,\n    name,\n    image,\n    price,\n    quantityOrdered,\n    totalPrice,\n    capacityKey,\n    selectedSealing,\n    selectedHolder,\n  } = el;\n\n  const addDefaultImg = (\n    e: React.SyntheticEvent<HTMLImageElement, Event>\n  ): void => {\n    e.currentTarget.src = `${noImage}`;\n  };\n\n  return (\n    <>\n      <StyledLink to={`../assortment/${codeOfGood}`}>\n        <StyledImage\n          loading=\"lazy\"\n          src={image[0] || noImage}\n          alt={name}\n          onError={addDefaultImg}\n        />\n      </StyledLink>\n      <StyledName to={`../assortment/${codeOfGood}`}>{name}</StyledName>\n      <p>{price} грн</p>\n      <p>{quantityOrdered} шт</p>\n      <p>{totalPrice} грн</p>\n      {capacityKey && (\n        <CapacityWrap>\n          <Capacity>\n            <Battery0BarIcon />\n            <p>{capacityKey}Ah</p>\n          </Capacity>\n          {selectedSealing && (\n            <SealingHolders>\n              <CheckCircleOutlineIcon />\n              <p>Герметизація</p>\n            </SealingHolders>\n          )}\n          {selectedHolder && (\n            <SealingHolders>\n              <CheckCircleOutlineIcon />\n              <p>Використовувати холдери</p>\n            </SealingHolders>\n          )}\n        </CapacityWrap>\n      )}\n    </>\n  );\n};\n","import styled, { DefaultTheme } from 'styled-components';\nimport { OrderStatus } from '../../../@types/user.types';\n\ntype Props = {\n  type: OrderStatus;\n  theme: DefaultTheme;\n};\n\nexport const getStatusColor = (props: Props) => {\n  switch (props.type) {\n    case 'Нове':\n      return props.theme.colors.warning;\n    case 'В роботі':\n      return props.theme.colors.hoverColor;\n    case 'Скасовано':\n      return props.theme.colors.error;\n    case 'Доставлено':\n      return props.theme.colors.success;\n    default:\n      return;\n  }\n};\n\nexport const StyledText = styled.p<{ type: OrderStatus }>`\n  font-weight: 700;\n  color: ${getStatusColor};\n`;\n\nexport const OrderErrorContainer = styled.div`\n  grid-column: 1/6;\n`;\n\nexport const OrderDetailsContainer = styled.div`\n  grid-column: 1/6;\n  background: rgba(225, 225, 225, 0.7);\n  padding: 5px 10px;\n`;\n\nexport const OrderDetailsList = styled.ul`\n  border-bottom: 1px solid ${props => props.theme.colors.textDisabled};\n\n  li {\n    display: grid;\n    grid-template-columns: 60px 100px repeat(3, 1fr);\n    padding-top: 5px;\n    padding-bottom: 5px;\n\n    @media screen and (min-width: 1280px) {\n      grid-template-columns: 100px 250px repeat(3, 1fr);\n      padding-top: 15px;\n      padding-bottom: 15px;\n    }\n\n    :not(:last-child) {\n      border-bottom: 1px solid rgba(157, 157, 157, 0.3);\n    }\n  }\n`;\n\nexport const PriceContainer = styled.div`\n  width: 100%;\n  display: grid;\n  gap: 4px;\n  padding: 5px 8px;\n  border-radius: 8px;\n\n  @media screen and (min-width: 1280px) {\n    gap: 8px;\n    padding: 10px;\n  }\n`;\n\nexport const TextContainer = styled.div`\n  text-align: unset;\n`;\n\nexport const TextTitle = styled.span`\n  font-size: 12px;\n  font-weight: 600;\n  color: ${props => props.theme.colors.textDisabled};\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Text = styled.span`\n  font-weight: 600;\n  font-size: 12px;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Sum = styled.p`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 12px;\n  margin-top: 10px;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n    margin-top: 20px;\n  }\n`;\n\nexport const Discount = styled.p<{ discount: number | undefined }>`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 12px;\n\n  span {\n    color: ${props =>\n      props.discount ? props.theme.colors.success : 'inherit'};\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Total = styled.p`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 16px;\n  font-weight: 600;\n\n  @media screen and (min-width: 1280px) {\n    text-align: end;\n    border: none;\n    font-size: 24px;\n  }\n`;\n","import { useState, MouseEvent } from 'react';\nimport { TfiArrowCircleDown, TfiArrowCircleUp } from 'react-icons/tfi';\nimport { OrderData } from '../../../@types/user.types';\nimport { getDate, getOrderInfo, getPrettyValue } from 'utils/helpers';\nimport { useTypedDispatch, useTypedSelector } from '../../../redux/hooks';\nimport { getOrderDetails } from '../../../redux/user/userOperations';\nimport {\n  selectOrderDetails,\n  selectErrorOrder,\n} from '../../../redux/user/userSelectors';\nimport { OrderDetails } from './OrderDetails/OrderDetails';\nimport {\n  StyledText,\n  OrderErrorContainer,\n  OrderDetailsContainer,\n  OrderDetailsList,\n  PriceContainer,\n  TextContainer,\n  TextTitle,\n  Text,\n  Sum,\n  Discount,\n  Total,\n} from './OrdersHistoryListEl.styled';\nimport { CustomError } from 'components/Shared/CustomError/CustomError';\n\ntype PropsOrdersHistoryListEl = {\n  el: OrderData;\n};\n\nexport const OrdersHistoryListEl: React.FC<PropsOrdersHistoryListEl> = ({\n  el,\n}) => {\n  const { numberOfOrder, status, date, together } = el;\n\n  const allOrdersDetails = useTypedSelector(selectOrderDetails);\n  const error = useTypedSelector(selectErrorOrder);\n  const dateCorrected = getDate(date);\n  const data = getOrderInfo(allOrdersDetails, numberOfOrder);\n  const prettyTogether = !together || getPrettyValue(together);\n  const prettyTotal = !data || getPrettyValue(data.total);\n  const prettyDiscount = !data || getPrettyValue(data.discountValue);\n\n  const dispatch = useTypedDispatch();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleOpen = async (e: MouseEvent<SVGElement>) => {\n    if (!isOpen) {\n      if (allOrdersDetails.length < 1 || !data) {\n        dispatch(getOrderDetails(numberOfOrder));\n      }\n    }\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <>\n      <p>№{numberOfOrder}</p>\n      <StyledText type={status}>{status}</StyledText>\n      <p>{dateCorrected}</p>\n      <p>{prettyTogether} грн</p>\n      {isOpen ? (\n        <TfiArrowCircleUp onClick={handleOpen} />\n      ) : (\n        <TfiArrowCircleDown onClick={handleOpen} />\n      )}\n      {isOpen &&\n        (error ? (\n          <OrderErrorContainer>\n            <CustomError />\n          </OrderErrorContainer>\n        ) : (\n          <OrderDetailsContainer>\n            <OrderDetailsList>\n              {data?.cartItems.map(el => (\n                <li key={el._id}>\n                  <OrderDetails el={el} />\n                </li>\n              ))}\n            </OrderDetailsList>\n            <PriceContainer>\n              <TextContainer>\n                <TextTitle>Доставка: </TextTitle>\n                <Text>{data?.deliveryType}</Text>\n              </TextContainer>\n              <TextContainer>\n                <TextTitle>Адреса: </TextTitle>\n                <Text>\n                  {data?.city}, {data?.warehouse}\n                </Text>\n              </TextContainer>\n              <TextContainer>\n                <TextTitle>Спосіб оплати: </TextTitle>\n                <Text>{data?.payment}</Text>\n              </TextContainer>\n              <Sum>\n                Загальна сума:\n                <span> {prettyTotal} грн</span>\n              </Sum>\n              <Discount discount={data?.promoCodeDiscount}>\n                Знижка за промокодом:\n                <span> - {prettyDiscount} грн</span>\n              </Discount>\n              <Total>\n                Разом:\n                <span>{prettyTogether} грн</span>\n              </Total>\n            </PriceContainer>\n          </OrderDetailsContainer>\n        ))}\n    </>\n  );\n};\n","export const getDate = (data: string): string => {\n  const day = data.slice(8, 10);\n  const month = data.slice(5, 7);\n  const year = data.slice(0, 4);\n  const newBirthDate = `${day}.${month}.${year}`;\n  return newBirthDate;\n};\n","import { Order } from '../../@types/order.types';\n\nexport const getOrderInfo = (\n  allOrdersDetails: Order[],\n  orderNumber: string\n): Order | undefined => {\n  return allOrdersDetails.find(\n    ({ numberOfOrder }) => numberOfOrder === orderNumber\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  height: 70vh;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n\n  svg {\n    position: absolute;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    fill: ${props => props.theme.colors.greyBackgroundPaper};\n    opacity: 0.5;\n  }\n\n  p {\n    position: relative;\n    z-index: 1;\n    text-align: center;\n  }\n`;\n\nexport const Title = styled.p`\n  padding-top: 30vh;\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 10px;\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 28vh;\n    font-size: 36px;\n    margin-bottom: 15px;\n  }\n`;\n\nexport const LinkToAssortment = styled(Link)`\n  position: relative;\n  z-index: 1;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  font-size: 12px;\n  font-weight: 600;\n  border-radius: 8px;\n  padding: 8px 6px;\n  margin-top: 15px;\n  background: ${props => props.theme.colors.secondary};\n\n  @media screen and (min-width: 1280px) {\n    font-size: 18px;\n    padding: 14px 10px;\n    border-radius: 12px;\n    margin-top: 25px;\n  }\n\n  :hover,\n  :focus {\n    background: ${props => props.theme.colors.hoverColor};\n  }\n`;\n","import PendingActionsOutlinedIcon from '@mui/icons-material/PendingActionsOutlined';\nimport { Wrapper, Title, LinkToAssortment } from './NoOrders.styled';\n\nexport const NoOrders = () => {\n  return (\n    <Wrapper>\n      <Title>Список замовлень порожній</Title>\n      <p>\n        Щоб переглянути список ваших замовлень та детальну інформацію про них,\n        здійсніть свою першу покупку .\n      </p>\n      <LinkToAssortment to=\"/assortment\">До асортименту</LinkToAssortment>\n      <PendingActionsOutlinedIcon />\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 20px;\n  display: grid;\n  row-gap: 20px;\n  font-size: 10px;\n\n  @media screen and (min-width: 1280px) {\n    padding: 50px 110px;\n    grid-template-columns: 1fr 790px;\n    font-size: 15px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 10px;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 40px;\n    margin-bottom: 30px;\n  }\n`;\n\nexport const ContentWrapper = styled.ul`\n  font-size: 10px;\n  font-weight: 400;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 15px;\n  }\n`;\n\nexport const StyledOrdersHistoryEl = styled.li`\n  font-size: 10px;\n  font-weight: 400;\n  padding: 10px 0px;\n  border-bottom: 1px solid rgba(217, 217, 217, 1);\n  display: grid;\n  grid-template-columns: repeat(4, 1fr) 15px;\n  row-gap: 10px;\n\n  :first-child {\n    font-weight: 600;\n  }\n\n  p:not(:first-child) {\n    text-align: center;\n  }\n\n  p + svg {\n    width: 15px;\n    height: 15px;\n    transition: ${props => props.theme.transition.main};\n\n    &:hover,\n    :focus {\n      cursor: pointer;\n      transform: scale(1.1);\n      fill: ${props => props.theme.colors.hoverColor};\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 15px;\n    padding: 20px 0px;\n    grid-template-columns: repeat(4, 1fr) 20px;\n    row-gap: 20px;\n\n    svg {\n      width: 18px;\n      height: 18px;\n    }\n  }\n`;\n","import { useMediaQuery } from 'react-responsive';\nimport { SideBarNav } from 'components/Shared/SideBarNav/SideBarNav';\nimport { useTypedSelector } from '../../redux/hooks';\nimport {\n  selectOrdersHistory,\n  selectErrorStatus,\n} from '../../redux/user/userSelectors';\nimport { OrdersHistoryListEl } from './OrdersHistoryListEl/OrdersHistoryListEl';\nimport { NoOrders } from './NoOrders/NoOrders';\nimport { CustomError } from 'components/Shared/CustomError/CustomError';\nimport {\n  Wrapper,\n  Title,\n  ContentWrapper,\n  StyledOrdersHistoryEl,\n} from './OrdersHistory.styled';\n\nexport const OrdersHistory = () => {\n  const ordersHistory = useTypedSelector(selectOrdersHistory);\n  const error = useTypedSelector(selectErrorStatus);\n  const desktopVersion = useMediaQuery({ query: '(min-width:1280px)' });\n\n  return (\n    <Wrapper>\n      {desktopVersion && <SideBarNav />}\n      {error ? (\n        <CustomError />\n      ) : ordersHistory.length ? (\n        <div>\n          <Title>Замовлення</Title>\n          <ContentWrapper>\n            <StyledOrdersHistoryEl>\n              <p>Замовлення</p>\n              <p>Статус</p>\n              <p>Дата</p>\n              <p>Сума</p>\n            </StyledOrdersHistoryEl>\n            {ordersHistory.map(el => (\n              <StyledOrdersHistoryEl key={el.numberOfOrder}>\n                <OrdersHistoryListEl el={el} />\n              </StyledOrdersHistoryEl>\n            ))}\n          </ContentWrapper>\n        </div>\n      ) : (\n        <NoOrders />\n      )}\n    </Wrapper>\n  );\n};\n","import { useEffect } from 'react';\nimport { CustomLoader } from 'components/Shared/CustomLoader/CustomLoader';\nimport { useTypedDispatch, useTypedSelector } from '../redux/hooks';\nimport {\n  selectIsLoading,\n  selectIsLoadingOrder,\n} from '../redux/user/userSelectors';\nimport { getOrdersHistory } from '../redux/user/userOperations';\nimport { OrdersHistory } from 'components/OrdersHistoryPage/OrdersHistory';\n\nconst OrdersHistoryPage = () => {\n  const dispatch = useTypedDispatch();\n  const isLoading = useTypedSelector(selectIsLoading);\n  const isLoadingOrder = useTypedSelector(selectIsLoadingOrder);\n\n  useEffect(() => {\n    dispatch(getOrdersHistory());\n  }, [dispatch]);\n\n  return (\n    <>\n      {(isLoading || isLoadingOrder) && <CustomLoader />}\n      {!isLoading && <OrdersHistory />}\n    </>\n  );\n};\n\nexport default OrdersHistoryPage;\n"],"names":["CustomError","_jsx","style","width","backgroundColor","children","src","errorImage","alt","margin","StyledList","styled","ul","StyledNavLink","NavLink","props","theme","transition","main","colors","textPrimary","hoverColor","SideBarNav","dispatch","useTypedDispatch","_jsxs","to","AccountCircleOutlinedIcon","HistoryOutlinedIcon","FavoriteBorderOutlinedIcon","onClick","logout","logOut","LogoutOutlinedIcon","StyledLink","Link","StyledImage","img","StyledName","CapacityWrap","div","Capacity","SealingHolders","success","OrderDetails","_ref","el","codeOfGood","name","image","price","quantityOrdered","totalPrice","capacityKey","selectedSealing","selectedHolder","_Fragment","loading","noImage","onError","e","currentTarget","Battery0BarIcon","CheckCircleOutlineIcon","StyledText","p","type","warning","error","OrderErrorContainer","OrderDetailsContainer","OrderDetailsList","textDisabled","PriceContainer","TextContainer","TextTitle","span","Text","Sum","Discount","discount","Total","OrdersHistoryListEl","numberOfOrder","status","date","together","allOrdersDetails","useTypedSelector","selectOrderDetails","selectErrorOrder","dateCorrected","data","slice","getDate","getOrderInfo","orderNumber","find","prettyTogether","getPrettyValue","prettyTotal","total","prettyDiscount","discountValue","isOpen","setIsOpen","useState","handleOpen","async","length","getOrderDetails","TfiArrowCircleUp","TfiArrowCircleDown","cartItems","map","_id","deliveryType","city","warehouse","payment","promoCodeDiscount","Wrapper","greyBackgroundPaper","Title","LinkToAssortment","secondary","NoOrders","PendingActionsOutlinedIcon","h2","ContentWrapper","StyledOrdersHistoryEl","li","OrdersHistory","ordersHistory","selectOrdersHistory","selectErrorStatus","desktopVersion","useMediaQuery","query","OrdersHistoryPage","isLoading","selectIsLoading","isLoadingOrder","selectIsLoadingOrder","useEffect","getOrdersHistory","CustomLoader"],"sourceRoot":""}