{"version":3,"file":"static/js/621.29872552.chunk.js","mappings":"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","sources":["components/Shared/CustomError/CustomError.tsx","components/Shared/ProductInformation/ProductInformation.styled.ts","components/Shared/ProductInformation/ProductInformation.tsx","components/Shared/ProductPhoto/ProductPhoto.styled.ts","components/Shared/ProductPhoto/ProductPhoto.tsx","redux/print3D/print3DSelectors.ts","components/Modals/Modal3DPrint/Modal3DPrint.styled.ts","components/Modals/Modal3DPrint/Modal3DPrint.tsx","components/Print3DPage/Print3D.styled.ts","components/Print3DPage/Description/Description.styled.ts","components/Print3DPage/Description/Description.tsx","components/Print3DPage/Options/CustomSelect/CustomSelect.styled.ts","components/Print3DPage/Options/CustomSelect/CustomSelect.tsx","components/Print3DPage/Options/Options.styled.ts","components/Print3DPage/Options/Options.tsx","components/Print3DPage/PriceList/PriceList.styled.ts","components/Print3DPage/PriceList/PriceList.tsx","components/Print3DPage/Print3D.tsx","pages/Print3DPage.tsx"],"sourcesContent":["import errorImage from '../../../assets/images/something-went-wrong.gif';\nexport const CustomError = () => {\n  return (\n    <div style={{ width: '100%', backgroundColor: '#fff' }}>\n      <img src={errorImage} alt=\"error_image\" style={{ margin: '0 auto' }} />\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const InfoBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n\n  @media screen and (min-width: 1280px) {\n    gap: 20px;\n  }\n`;\n\nexport const Subject = styled.h2`\n  height: 30px;\n  font-size: 15px;\n  font-weight: 400;\n  background: ${props => props.theme.colors.greyBackgroundPaper};\n  border-radius: 12px;\n  text-align: center;\n  padding: 6px;\n\n  @media screen and (min-width: 1280px) {\n    height: 42px;\n    font-size: 24px;\n    font-weight: 500;\n  }\n`;\n\nexport const Info = styled.div`\n  font-size: 10px;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\n","import { InfoBox, Subject, Info } from './ProductInformation.styled';\n\ntype ProductInformationProps = {\n  information: string;\n};\n\nexport const ProductInformation: React.FC<ProductInformationProps> = ({\n  information,\n}) => {\n  const newInfo = information.split(';');\n  return (\n    <InfoBox>\n      <Subject>Опис</Subject>\n      <Info>\n        {newInfo.map(item => (\n          <div key={item}>\n            <div>{item}</div><br />\n          </div>\n        ))}\n      </Info>\n    </InfoBox>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SliderDiv = styled.div`\n  width: 310px;\n  height: 200px;\n  margin: 0 auto;\n  margin-bottom: 30px;\n\n  .slick-dots {\n    bottom: -20px;\n  }\n\n  .slick-list {\n    cursor: grab;\n  }\n\n  .slick-prev:before,\n  .slick-next:before {\n    color: ${props => props.theme.colors.hoverColor};\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 518px;\n    height: 390px;\n\n    .slick-prev:before,\n    .slick-next:before {\n      font-size: 40px;\n    }\n\n    .slick-prev {\n      left: -45px;\n    }\n  }\n`;\n\nexport const Image = styled.img`\n  width: 320px;\n  height: 200px;\n  object-fit: cover;\n  border-radius: 12px;\n  box-shadow: 0px 2px 2px 0px rgba(0, 0, 0, 0.15);\n  margin-bottom: 5px;\n\n  @media screen and (min-width: 1280px) {\n    min-width: 518px;\n    height: 390px;\n    border-radius: 20px;\n    margin-bottom: 30px;\n  }\n`;\n\nexport const ImageBig = styled.img`\n  width: 310px;\n  height: 200px;\n  object-fit: cover;\n  border-radius: 12px;\n\n  @media screen and (min-width: 1280px) {\n    min-width: 518px;\n    height: 390px;\n    border-radius: 20px;\n  }\n`;\n","import { FC, SyntheticEvent } from 'react';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport noImage from '../../../assets/images/no-image-available.webp';\nimport { SliderDiv, ImageBig, Image } from './ProductPhoto.styled';\n\ntype ProductPhotoProps = {\n  name: string;\n  image: string[];\n};\n\nexport const ProductPhoto: FC<ProductPhotoProps>  = ({ name, image }) => {\n\n    const addDefaultImg = (e: SyntheticEvent<HTMLImageElement>) => {\n    e.currentTarget.src = noImage;\n  };\n  \n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  return image.length > 1 ? (\n    <SliderDiv className=\"slider-container\">\n      <Slider {...settings}>\n        {image.map(item => (\n          <div key={item}>\n            <ImageBig src={item} alt={name} />\n          </div>\n        ))}\n      </Slider>\n    </SliderDiv>\n  ) : (\n    <Image src={image[0] || noImage} alt={name} onError={addDefaultImg}/>\n  );\n};\n","import { RootState } from 'redux/store';\n\nexport const selectPrint3DIsLoading = (state: RootState) =>\n  state.print3D.isLoading;\nexport const selectPrint3DError = (state: RootState) => state.print3D.error;\nexport const selectPrint3D = (state: RootState) => state.print3D.result;\nexport const selectedAccuracy = (state: RootState) =>\n  state.print3D.selectedAccuracy;\nexport const selectedPlactic = (state: RootState) =>\n  state.print3D.selectedPlactic;\nexport const selectedColor = (state: RootState) => state.print3D.selectedColor;\n","import styled, { createGlobalStyle } from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Wrapper = styled.div`\n  max-width: 357px;\n  padding: 36px 48px;\n\n  @media (min-width: 1280px) {\n    max-width: 630px;\n    padding: 40px 76px;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 20px;\n\n  @media (min-width: 1280px) {\n    font-size: 36px;\n    margin-bottom: 40px;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const StyledField = styled(Field)`\n  width: 261px;\n  height: 28px;\n  padding: 4px 8px;\n  color: ${props => props.theme.colors.textPrimary};\n  border: 1px solid ${props => props.theme.colors.textPrimary};\n  border-radius: 6px;\n  background: transparent;\n  font-size: 14px;\n\n  &:focus {\n    color: ${props => props.theme.colors.textPrimary};\n    outline: none;\n    border: 2px solid ${props => props.theme.colors.hoverColor};\n  }\n\n  @media (min-width: 1280px) {\n    width: 476px;\n    height: 51px;\n    border-radius: 8px;\n    font-size: 24px;\n  }\n`;\n\nexport const StyledTextField = styled(Field)`\n  width: 261px;\n  height: 46px;\n  margin-top: 10px;\n  padding: 4px 8px;\n  color: ${props => props.theme.colors.textPrimary};\n  border: 1px solid ${props => props.theme.colors.textPrimary};\n  border-radius: 6px;\n  background: transparent;\n  overflow-x: auto;\n  font-size: 12px;\n\n  &::placeholder {\n    font-size: 10px;\n  }\n  &:focus {\n    color: ${props => props.theme.colors.textPrimary};\n    outline: none;\n    border: 2px solid ${props => props.theme.colors.hoverColor};\n  }\n\n  @media (min-width: 1280px) {\n    width: 476px;\n    height: 117px;\n    margin-top: 20px;\n    border-radius: 8px;\n    font-size: 20px;\n\n    &::placeholder {\n      font-size: 16px;\n    }\n  }\n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  color: ${props => props.theme.colors.error};\n  font-size: 8px;\n  padding-left: 8px;\n  margin-top: 4px;\n  align-self: start;\n\n  @media (min-width: 1280px) {\n    font-size: 12px;\n    padding-left: 10px;\n    margin-top: 8px;\n  }\n`;\n\nexport const PhoneFieldGlobalStyles = createGlobalStyle`\n.react-international-phone-input-container {\n    margin-top: 10px;\n    width: 261px;\n    height: 28px;\n\n    @media (min-width: 1280px) {\n    margin-top: 20px;\n    width: 476px;\n    height: 51px;\n  }\n  }\n\n.react-international-phone-input-container .react-international-phone-input{\n  &:focus {\n    color: ${props => props.theme.colors.textPrimary};\n    outline: none;\n    border: 2px solid ${props => props.theme.colors.hoverColor};\n  }\n}\n\n  .react-international-phone-input {\n    width: 224px;\n\n    @media (min-width: 1280px) {\n    width: 431px;\n  }\n  }\n  \n   .react-international-phone-input-container .react-international-phone-country-selector-button{\n    width:37px;\n    height: 28px;\n    background-color: rgba(31, 31, 31, 0.3);\n\n    @media (min-width: 1280px) {\n    width: 45px;\n    height: 51px;\n  }\n} \n`;\n\nexport const DivErrorMessage = styled.div`\n  color: ${props => props.theme.colors.error};\n  font-size: 8px;\n  padding-left: 8px;\n  margin-top: 4px;\n  align-self: start;\n\n  @media (min-width: 1280px) {\n    font-size: 12px;\n    padding-left: 10px;\n    margin-top: 8px;\n  }\n`;\n\nexport const Btn = styled.button`\n  max-width: 190px;\n  margin-top: 16px;\n  padding: 12px 10px;\n  border-radius: 6px;\n  border: none;\n  font-size: 15px;\n\n  background: ${props => props.theme.colors.secondary};\n\n  &:hover,\n  &:focus {\n    background: ${props => props.theme.colors.hoverColor};\n  }\n\n  @media (min-width: 1280px) {\n    max-width: 312px;\n    margin-top: 30px;\n    padding: 16px 20px;\n    border-radius: 12px;\n    font-size: 24px;\n  }\n`;\n","import { FC, useEffect, useState } from 'react';\nimport { useTypedDispatch, useTypedSelector } from '../../../redux/hooks/hooks';\nimport { Formik } from 'formik';\nimport { PhoneInput } from 'react-international-phone';\nimport 'react-international-phone/style.css';\nimport { useMediaQuery } from 'react-responsive';\nimport toast from 'react-hot-toast';\nimport { nameSchema } from 'common/schemas/nameSchema';\nimport { isPhoneValid } from 'common/schemas/phoneSchema';\nimport {\n  selectedAccuracy,\n  selectedColor,\n  selectedPlactic,\n} from '../../../redux/print3D/print3DSelectors';\nimport { add3DPrintOrder } from '../../../redux/print3D/print3DOperations';\nimport { useAuth } from 'utils/hooks';\nimport { CustomLoader } from 'components/Shared/CustomLoader/CustomLoader';\nimport { CloseButton } from '../SharedComponent/CloseButton/CloseButton';\nimport { ModalYellowGradient } from '../SharedComponent/ModalYellowGradient/ModalYellowGradient';\nimport { ModalAgree } from '../SharedComponent/ModalAgree/ModalAgree';\nimport { TextAgree } from '../SharedComponent/Text/Text';\nimport { theme } from 'styles/theme';\nimport {\n  Btn,\n  DivErrorMessage,\n  PhoneFieldGlobalStyles,\n  StyledErrorMessage,\n  StyledField,\n  StyledForm,\n  StyledTextField,\n  Title,\n  Wrapper,\n} from './Modal3DPrint.styled';\n\ntype Props = {\n  isModal3DPrintOpen: boolean;\n  handleClose3DPrintModal: () => void;\n  file: File[];\n};\n\ntype UserData = {\n  isLoggedIn: boolean;\n  userData: {\n    firstName: string;\n    tel: string;\n  };\n};\n\ntype FormValues = {\n  name: string;\n  text: string;\n};\n\nexport const Modal3DPrint: FC<Props> = ({\n  isModal3DPrintOpen,\n  handleClose3DPrintModal,\n  file,\n}) => {\n  const isBigScreen = useMediaQuery({ query: '(min-width: 1280px)' });\n  const {\n    isLoggedIn,\n    userData: { firstName, tel: userTel },\n  }: UserData = useAuth();\n  const initialValues: FormValues = {\n    name: isLoggedIn ? firstName : '',\n    text: '',\n  };\n  const dispatch = useTypedDispatch();\n  const [isLoading, setIsLoading] = useState(false);\n  const [tel, setTel] = useState(isLoggedIn ? userTel : '+380');\n\n  const accuracy = useTypedSelector(selectedAccuracy);\n  const plactic = useTypedSelector(selectedPlactic);\n  const color = useTypedSelector(selectedColor);\n\n  const isValidPhone = isPhoneValid(tel);\n\n  const [isModalAgreeOpen, setIsModalAgreeOpen] = useState(false);\n\n  const handleOpenAgreeModal = () => {\n    setIsModalAgreeOpen(true);\n    document.body.style.overflow = 'hidden';\n  };\n  const handleCloseAgreeModal = () => {\n    setIsModalAgreeOpen(false);\n    document.body.style.overflow = 'unset';\n  };\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      setTel(userTel);\n    }\n    if (!isLoggedIn) {\n      setTel('+380');\n    }\n  }, [isLoggedIn, userTel]);\n\n  return (\n    <>\n      {isLoading ? (\n        <CustomLoader />\n      ) : (\n        <ModalYellowGradient\n          isModalOpen={isModal3DPrintOpen}\n          handleCloseModal={handleClose3DPrintModal}\n        >\n          <CloseButton handleCloseModal={handleClose3DPrintModal} />\n          <Wrapper>\n            <Title>3D Друк</Title>\n            <Formik\n              initialValues={initialValues}\n              validationSchema={nameSchema}\n              onSubmit={(values, _) => {\n                const formData = new FormData();\n                formData.append('userName', values.name.trim());\n                formData.append('tel', tel);\n                formData.append('text', values.text);\n                formData.append('accuracy', accuracy ?? '');\n                formData.append('plactic', plactic ?? '');\n                formData.append('color', color ?? '');\n                formData.append('file', file[0]);\n\n                if (!isValidPhone || tel === '+380') {\n                  toast('Введіть номер телефону', {\n                    id: 'warning',\n                    icon: '👀',\n                    style: {\n                      background: `${theme.colors.secondary}`,\n                      color: `${theme.colors.textPrimary}`,\n                    },\n                  });\n                } else {\n                  setIsLoading(true);\n                  dispatch(add3DPrintOrder(formData)).then(result => {\n                    setIsLoading(false);\n                    if (result.meta.requestStatus === 'fulfilled') {\n                      handleOpenAgreeModal();\n                    }\n                  });\n                  handleClose3DPrintModal();\n                }\n              }}\n            >\n              <StyledForm>\n                <StyledField\n                  name=\"name\"\n                  type=\"text\"\n                  placeholder=\"Ваше ім’я\"\n                  aria-label=\"Ім'я\"\n                />\n                <StyledErrorMessage name=\"name\" component=\"div\" />\n                <PhoneInput\n                  style={\n                    {\n                      '--react-international-phone-height': !isBigScreen\n                        ? '28px'\n                        : '51px',\n                      '--react-international-phone-background-color':\n                        'transparent',\n                      '--react-international-phone-border-color': `${theme.colors.textPrimary}`,\n                      '--react-international-phone-text-color': `${theme.colors.textPrimary}`,\n                      '--react-international-phone-font-size': !isBigScreen\n                        ? '14px'\n                        : '24px',\n                      '--react-international-phone-border-radius': !isBigScreen\n                        ? '6px'\n                        : '8px',\n                      '--react-international-phone-flag-width': !isBigScreen\n                        ? '16px'\n                        : '24px',\n                      '--react-international-phone-flag-height': !isBigScreen\n                        ? '16px'\n                        : '24px',\n                    } as React.CSSProperties\n                  }\n                  defaultCountry=\"ua\"\n                  hideDropdown={true}\n                  value={tel}\n                  onChange={phone => setTel(phone)}\n                  aria-label=\"Телефон\"\n                />\n                {!isValidPhone && (\n                  <DivErrorMessage>\n                    Введіть свій номер телефону, будь ласка\n                  </DivErrorMessage>\n                )}\n                <StyledTextField\n                  component=\"textarea\"\n                  name=\"text\"\n                  type=\"text\"\n                  placeholder=\"Ваш коментар (за необхідності)\"\n                />\n                <StyledErrorMessage name=\"text\" component=\"div\" />\n                <Btn type=\"submit\">\n                  <div>Оформити замовлення</div>\n                </Btn>\n              </StyledForm>\n            </Formik>\n          </Wrapper>\n          <PhoneFieldGlobalStyles />\n        </ModalYellowGradient>\n      )}\n      <ModalAgree\n        isModalAgreeOpen={isModalAgreeOpen}\n        handleCloseAgreeModal={handleCloseAgreeModal}\n        buttonText=\"Гаразд\"\n      >\n        <TextAgree>Дякуємо за замовлення.</TextAgree>\n        <TextAgree>Очікуйте на дзвінок від менеджера.</TextAgree>\n      </ModalAgree>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 20px;\n  max-width: 360px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 1280px) {\n    padding: 50px 110px;\n    max-width: 1280px;\n  }\n`;\n\nexport const MobCase = styled.div`\n  display: grid;\n  gap: 15px;\n  margin-bottom: 20px;\n`;\n\nexport const Box = styled.div`\n  display: grid;\n  gap: 20px;\n`;\n\nexport const Case = styled.div`\n  display: flex;\n  gap: 60px;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 16px;\n  font-weight: 600;\n  color: ${props => props.theme.colors.hoverColor};\n\n  @media screen and (min-width: 1280px) {\n    font-size: 36px;\n  }\n`;\n\nexport const OrderButton = styled.button`\n  width: 170px;\n  height: 40px;\n  font-size: 15px;\n  border-radius: 6px;\n  background: ${props => props.theme.colors.secondary};\n\n  &:hover,\n  :focus {\n    background: ${props => props.theme.colors.hoverColor};\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 270px;\n    height: 60px;\n    font-size: 24px;\n    border-radius: 20px;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  height: 30px;\n  font-size: 10px;\n\n  @media screen and (min-width: 1280px) {\n    height: 42px;\n    font-size: inherit;\n  }\n\n  ::-webkit-file-upload-button {\n    background: ${props => props.theme.colors.greyBackgroundPaper};\n    height: 30px;\n    padding: 8px 14px;\n    margin-right: 12px;\n    border-radius: 5px;\n    border: 1px solid;\n\n    @media screen and (min-width: 1280px) {\n      height: 42px;\n    }\n\n    :is(:hover, :focus) {\n      cursor: pointer;\n    }\n  }\n`;\n\nexport const Text = styled.p`\n  margin-top: 5px;\n  font-size: 10px;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  gap: 10px;\n`;\n\nexport const Desc = styled.ul`\n  font-size: 10px;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Item = styled.li`\n  list-style: outside;\n  margin-left: 16px;\n`;\n\nexport const Subtitle = styled.p`\n  font-size: 10px;\n  font-weight: 500;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n    font-weight: 600;\n  }\n`;\n","import { useTypedSelector } from '../../../redux/hooks';\nimport { selectPrint3D } from '../../../redux/print3D/print3DSelectors';\nimport { Container, Desc, Item, Subtitle } from './Description.styled';\n\nexport const Description = () => {\n  const { description } = useTypedSelector(selectPrint3D);\n\n  const newDescription = description.split(';');\n\n  return (\n    <Container>\n      <Subtitle>Технічні особливості:</Subtitle>\n      <Desc>\n        {newDescription.map(i => (\n          <Item key={i}>{i}</Item>\n        ))}\n      </Desc>\n    </Container>\n  );\n};\n","import { StylesConfig, GroupBase } from 'react-select';\nimport { Option } from '../../../../@types/customSelect.types';\n\nexport const selectStyles: StylesConfig<Option, false, GroupBase<Option>> = {\n  control: styles => ({\n    ...styles,\n    backgroundColor: 'rgba(225, 225, 225, 1)',\n    borderRadius: '6px',\n    borderStyle: 'none',\n    width: '132px',\n    maxHeight: '30px',\n    minHeight: '25px',\n    border: '1px solid rgb(31, 31, 31)',\n    ':hover': { borderColor: 'currentColor', boxShadow: 'none' },\n    '@media only screen and (min-width: 1280px)': {\n      width: '220px',\n      minHeight: '42px',\n      borderRadius: '12px',\n    },\n  }),\n  menu: styles => ({\n    ...styles,\n    backgroundColor: 'rgba(225, 225, 225, 1)',\n    fontSize: '10px',\n    width: '132px',\n    border: '1px solid rgb(31, 31, 31)',\n    '@media only screen and (min-width: 1280px)': {\n      fontSize: '20px',\n      width: '220px',\n      borderRadius: '12px',\n    },\n  }),\n  option: (styles, { isDisabled, isFocused, isSelected }) => {\n    return {\n      ...styles,\n      backgroundColor: isFocused ? 'rgb(255, 208, 100)' : undefined,\n      color: !isDisabled\n        ? isSelected\n          ? 'rgb(31, 31, 31);'\n          : 'rgb(31, 31, 31);'\n        : undefined,\n      cursor: isDisabled ? 'not-allowed' : 'default',\n      padding: '2px 8px',\n      ':active': {\n        ...styles[':active'],\n        backgroundColor: !isDisabled\n          ? isSelected\n            ? 'rgb(255, 208, 100)'\n            : 'rgb(255, 208, 100)'\n          : undefined,\n      },\n      '@media only screen and (min-width: 1280px)': {\n        borderRadius: '6px',\n      },\n    };\n  },\n  placeholder: styles => ({\n    ...styles,\n    fontSize: '10px',\n    padding: '0px 8px',\n    margin: 0,\n    '@media only screen and (min-width: 1280px)': {\n      fontSize: '20px',\n    },\n  }),\n  indicatorsContainer: styles => ({\n    ...styles,\n    height: '30px',\n    width: '38px',\n    '@media only screen and (min-width: 1280px)': {\n      height: '42px',\n      width: '40px',\n    },\n  }),\n  valueContainer: styles => ({ ...styles, padding: 0 }),\n  singleValue: styles => ({\n    ...styles,\n    fontSize: '10px',\n    margin: 0,\n    padding: '8px',\n    '@media only screen and (min-width: 1280px)': {\n      fontSize: '20px',\n    },\n  }),\n};\n","import Select, { SingleValue } from 'react-select';\nimport { Option } from '../../../../@types/customSelect.types';\nimport { ActionCreatorWithPayload } from '@reduxjs/toolkit';\nimport { useTypedDispatch } from '../../../../redux/hooks';\nimport { selectStyles } from './CustomSelect.styled';\n\ntype CustomSelectProps = {\n  data: string[];\n  placeholder: string;\n  action: ActionCreatorWithPayload<string>;\n};\n\nexport const CustomSelect: React.FC<CustomSelectProps> = ({\n  data,\n  placeholder,\n  action,\n}) => {\n  const dispatch = useTypedDispatch();\n\n  const options: Option[] = data.map(item => {\n    return {\n      value: item,\n      label: item,\n    };\n  });\n\n  const handleSelect = (option: SingleValue<Option>) => {\n    if (option) {\n      const value = option.value;\n      dispatch(action(value));\n    }\n  };\n\n  return (\n    <Select<Option, false>\n      options={options}\n      onChange={handleSelect}\n      placeholder={placeholder}\n      isSearchable={false}\n      styles={selectStyles}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const OptionsContainer = styled.div`\n  display: grid;\n  gap: 10px;\n\n  @media screen and (min-width: 1280px) {\n    gap: 15px;\n  }\n`;\n\nexport const Subtitle = styled.p`\n  font-size: 10px;\n  font-weight: 500;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n    font-weight: 600;\n  }\n`;\n","import { CustomSelect } from './CustomSelect/CustomSelect';\nimport { useTypedSelector } from '../../../redux/hooks';\nimport { selectPrint3D } from '../../../redux/print3D/print3DSelectors';\nimport { OptionsContainer, Subtitle } from './Options.styled';\nimport {\n  setAccuracy,\n  setPlactic,\n  setColor,\n} from '../../../redux/print3D/print3DSlice';\n\nexport const Options = () => {\n  const { accuracy, plactic, color } = useTypedSelector(selectPrint3D);\n\n  return (\n    <OptionsContainer>\n      <Subtitle>Параметри друку:</Subtitle>\n      <CustomSelect\n        data={accuracy}\n        placeholder={'Точність'}\n        action={setAccuracy}\n      />\n      <CustomSelect\n        data={plactic}\n        placeholder={'Тип пластику'}\n        action={setPlactic}\n      />\n      <CustomSelect data={color} placeholder={'Колір'} action={setColor} />\n    </OptionsContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.p`\n  font-size: 15px;\n  font-weight: 500;\n  text-align: center;\n  margin-top: 15px;\n  margin-bottom: 10px;\n\n  @media screen and (min-width: 1280px) {\n    font-size: 24px;\n    margin-top: 20px;\n    margin-bottom: 15px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: grid;\n  gap: 25px;\n\n  @media screen and (min-width: 1280px) {\n    gap: 45px;\n  }\n`;\n\nexport const Table = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  font-size: 10px;\n\n  caption {\n    font-size: 12px;\n    text-align: left;\n    margin-bottom: 5px;\n  }\n\n  th {\n    font-weight: 600;\n  }\n\n  th,\n  td {\n    border: 1px solid black;\n    padding: 7px 0px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 20px;\n\n    caption {\n      font-size: 20px;\n      margin-bottom: 10px;\n    }\n  }\n`;\n","import { useTypedSelector } from '../../../redux/hooks';\nimport { selectPrint3D } from '../../../redux/print3D/print3DSelectors';\nimport { Wrapper, Title, Table } from './PriceList.styled';\n\nexport const PriceList = () => {\n  const { table1, table2 } = useTypedSelector(selectPrint3D);\n\n  const tables = [table1, table2];\n\n  return (\n    <>\n      <Title>Ціни на друк</Title>\n      <Wrapper>\n        {tables.map(\n          table =>\n            table && (\n              <Table key={table.nameTable}>\n                <caption>{table.nameTable}</caption>\n                <thead>\n                  <tr>\n                    <th rowSpan={2}>Точність</th>\n                    <th rowSpan={2}>Ціна за грам</th>\n                    <th colSpan={3}>Ціна за грам, при замовленні від</th>\n                  </tr>\n                  <tr>\n                    <th>50 грам</th>\n                    <th>100 грам</th>\n                    <th>250 грам</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  <tr>\n                    <td>100 мікрон</td>\n                    <td>{table[100][1]} грн</td>\n                    <td>{table[100][50]} грн</td>\n                    <td>{table[100][100]} грн</td>\n                    <td>{table[100][250]} грн</td>\n                  </tr>\n                  <tr>\n                    <td>200 мікрон</td>\n                    <td>{table[200][1]} грн</td>\n                    <td>{table[200][50]} грн</td>\n                    <td>{table[200][100]} грн</td>\n                    <td>{table[200][250]} грн</td>\n                  </tr>\n                  <tr>\n                    <td>300 мікрон</td>\n                    <td>{table[300][1]} грн</td>\n                    <td>{table[300][50]} грн</td>\n                    <td>{table[300][100]} грн</td>\n                    <td>{table[300][250]} грн</td>\n                  </tr>\n                </tbody>\n              </Table>\n            )\n        )}\n      </Wrapper>\n    </>\n  );\n};\n","import { ChangeEvent, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { useMediaQuery } from 'react-responsive';\nimport { useTypedSelector } from '../../redux/hooks/hooks';\nimport {\n  selectPrint3D,\n  selectedAccuracy,\n  selectedPlactic,\n  selectedColor,\n} from '../../redux/print3D/print3DSelectors';\nimport { ProductPhoto } from 'components/Shared/ProductPhoto/ProductPhoto';\nimport { Modal3DPrint } from 'components/Modals/Modal3DPrint/Modal3DPrint';\nimport {\n  Wrapper,\n  MobCase,\n  Box,\n  Case,\n  Title,\n  OrderButton,\n  StyledInput,\n  Text,\n} from './Print3D.styled';\nimport { ProductInformation } from 'components/Shared/ProductInformation/ProductInformation';\nimport { Description } from './Description/Description';\nimport { Options } from './Options/Options';\nimport { PriceList } from './PriceList/PriceList';\n\nexport const Print3D = () => {\n  const desktopVersion = useMediaQuery({ query: '(min-width:1280px)' });\n  const [isModal3DPrintOpen, setIsModal3DPrintOpen] = useState(false);\n  const [files, setFiles] = useState<File[]>([]);\n\n  const handleOpen3DPrintModal = () => {\n    if (!accuracy || !plactic || !color) {\n      toast.remove();\n      return toast.error('Оберіть параметри друку!');\n    }\n\n    if (files.length === 0) {\n      toast.remove();\n      return toast.error('Прикріпіть файл правильного формату!');\n    }\n\n    setIsModal3DPrintOpen(true);\n    document.body.style.overflow = 'hidden';\n  };\n  const handleClose3DPrintModal = () => {\n    setIsModal3DPrintOpen(false);\n    document.body.style.overflow = 'unset';\n  };\n\n  const { name, image, information } = useTypedSelector(selectPrint3D);\n  const accuracy = useTypedSelector(selectedAccuracy);\n  const plactic = useTypedSelector(selectedPlactic);\n  const color = useTypedSelector(selectedColor);\n\n  const attachFiles = (e: ChangeEvent<HTMLInputElement>) => {\n    const selectedFiles = Array.from(e.target.files || []);\n    const allowedExtensions = [\n      'stl',\n      '3mf',\n      'step',\n      'svg',\n      'obj',\n      'amf',\n      'usd',\n      'abc',\n      'ply',\n      'zip',\n      '7z',\n      'rar',\n    ];\n\n    const validFiles = selectedFiles.filter(file => {\n      const fileExtension = file.name.split('.').pop()?.toLowerCase();\n      return fileExtension && allowedExtensions.includes(fileExtension);\n    });\n\n    if (validFiles.length !== selectedFiles.length) {\n      toast.error('Будь ласка, оберіть файли з доступними розширеннями!');\n    } else {\n      setFiles(validFiles);\n    }\n  };\n\n  return (\n    <Wrapper>\n      {!desktopVersion ? (\n        <MobCase>\n          <Title>{name}</Title>\n          <ProductPhoto name={name} image={image} />\n          <Description />\n          <Options />\n          <form>\n            <StyledInput\n              id=\"file\"\n              name=\"file\"\n              type=\"file\"\n              accept=\".stl, .3mf, .step, .svg, .obj, .amf, .usd*, .abc, .ply, .rar, .7z, .zip\"\n              onChange={attachFiles}\n            />\n          </form>\n          <OrderButton onClick={handleOpen3DPrintModal}>\n            Замовити друк\n          </OrderButton>\n        </MobCase>\n      ) : (\n        <Case>\n          <ProductPhoto name={name} image={image} />\n          <Box>\n            <Title>{name}</Title>\n            <Description />\n            <Options />\n            <form>\n              <StyledInput\n                id=\"file\"\n                name=\"file\"\n                type=\"file\"\n                accept=\".stl, .3mf, .step, .svg, .obj, .amf, .usd*, .abc, .ply, .rar, .7z, .zip\"\n                multiple\n                onChange={attachFiles}\n              />\n              <Text>\n                *Доступні розширення для файлів: .stl, .3mf, .step, .svg, .obj,\n                .amf, .usd*, .abc, .ply, .rar, .7z, .zip\n              </Text>\n            </form>\n            <OrderButton onClick={handleOpen3DPrintModal}>\n              Замовити друк\n            </OrderButton>\n          </Box>\n        </Case>\n      )}\n      {information && <ProductInformation information={information} />}\n      <PriceList />\n      <Modal3DPrint\n        isModal3DPrintOpen={isModal3DPrintOpen}\n        handleClose3DPrintModal={handleClose3DPrintModal}\n        file={files}\n      />\n    </Wrapper>\n  );\n};\n","import { useEffect } from 'react';\nimport { useTypedDispatch, useTypedSelector } from '../redux/hooks';\nimport { getPrint3D } from '../redux/print3D/print3DOperations';\nimport {\n  selectPrint3DIsLoading,\n  selectPrint3DError,\n} from '../redux/print3D/print3DSelectors';\nimport { CustomLoader } from 'components/Shared/CustomLoader/CustomLoader';\nimport { CustomError } from 'components/Shared/CustomError/CustomError';\nimport { Print3D } from 'components/Print3DPage/Print3D';\n\nconst Print3DPage = () => {\n  const dispatch = useTypedDispatch();\n  const isLoading = useTypedSelector(selectPrint3DIsLoading);\n  const error = useTypedSelector(selectPrint3DError);\n\n  useEffect(() => {\n    dispatch(getPrint3D());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <CustomLoader />}\n      {!isLoading && error ? <CustomError /> : <Print3D />}\n    </>\n  );\n};\n\nexport default Print3DPage;\n"],"names":["CustomError","_jsx","style","width","backgroundColor","children","src","errorImage","alt","margin","InfoBox","styled","div","_templateObject","_taggedTemplateLiteral","Subject","h2","_templateObject2","props","theme","colors","greyBackgroundPaper","Info","_templateObject3","ProductInformation","_ref","information","newInfo","split","_jsxs","map","item","SliderDiv","hoverColor","Image","img","ImageBig","ProductPhoto","name","image","length","className","Slider","dots","infinite","speed","slidesToShow","slidesToScroll","noImage","onError","e","currentTarget","selectPrint3DIsLoading","state","print3D","isLoading","selectPrint3DError","error","selectPrint3D","result","selectedAccuracy","selectedPlactic","selectedColor","Wrapper","Title","h1","StyledForm","Form","StyledField","Field","_templateObject4","textPrimary","StyledTextField","_templateObject5","StyledErrorMessage","ErrorMessage","_templateObject6","PhoneFieldGlobalStyles","createGlobalStyle","_templateObject7","DivErrorMessage","_templateObject8","Btn","button","_templateObject9","secondary","Modal3DPrint","isModal3DPrintOpen","handleClose3DPrintModal","file","isBigScreen","useMediaQuery","query","isLoggedIn","userData","firstName","tel","userTel","useAuth","initialValues","text","dispatch","useTypedDispatch","setIsLoading","useState","setTel","accuracy","useTypedSelector","plactic","color","isValidPhone","isPhoneValid","isModalAgreeOpen","setIsModalAgreeOpen","useEffect","_Fragment","CustomLoader","ModalYellowGradient","isModalOpen","handleCloseModal","CloseButton","Formik","validationSchema","nameSchema","onSubmit","values","_","formData","FormData","append","trim","add3DPrintOrder","then","meta","requestStatus","document","body","overflow","toast","id","icon","background","concat","type","placeholder","component","PhoneInput","defaultCountry","hideDropdown","value","onChange","phone","ModalAgree","handleCloseAgreeModal","buttonText","TextAgree","MobCase","Box","Case","OrderButton","StyledInput","input","Text","p","Container","Desc","ul","Item","li","Subtitle","Description","description","newDescription","i","selectStyles","control","styles","borderRadius","borderStyle","maxHeight","minHeight","border","borderColor","boxShadow","menu","fontSize","option","isDisabled","isFocused","isSelected","undefined","cursor","padding","indicatorsContainer","height","valueContainer","singleValue","CustomSelect","data","action","options","label","Select","isSearchable","OptionsContainer","Options","setAccuracy","setPlactic","setColor","Table","table","PriceList","table1","table2","tables","nameTable","rowSpan","colSpan","Print3D","desktopVersion","setIsModal3DPrintOpen","files","setFiles","handleOpen3DPrintModal","remove","attachFiles","selectedFiles","Array","from","target","allowedExtensions","validFiles","filter","_file$name$split$pop","fileExtension","pop","toLowerCase","includes","accept","multiple","onClick","Print3DPage","getPrint3D"],"sourceRoot":""}