{"version":3,"file":"static/js/9610.cd540afa.chunk.js","mappings":"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","sources":["components/CardPage/Capacity.jsx","components/CardPage/Card.jsx","components/CardPage/Checkbox.jsx","components/CardPage/Description.jsx","components/CardPage/Information.jsx","components/CardPage/ProductPhoto.jsx","pages/CardPage.jsx","utils/helpers/getNewPrice.js"],"sourcesContent":["import Select from 'react-select';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectOneProduct } from '../../redux/products/productsSelectors';\nimport { setPrice, setCapacityKey, setPriceOneProduct, setSelectedHolder, setSelectedSealing, setQuantityOrders, setPriceWithSale } from '../../redux/products/oneProductSlice';\nimport { CapacityBox, Subtitle, Desc, selectStyles } from \"./Card.styled\";\n\nexport const Capacity = () => {\n\n    const dispatch = useDispatch();\n    const { capacity, discount } = useSelector(selectOneProduct);\n\n    const capacityKeys = Object.keys(capacity);\n    const sortKeys = [...capacityKeys].sort((a, b) => a - b);\n\n    const options = sortKeys.map((item) => {\n        return {\n            value: item, label: item + \" Ah\",\n        }\n    })\n    \n    const [descr, setDescr] = useState('');\n\n    const handleSelect = (option) => {\n        const value = option.value;\n        setDescr(capacity[value].description);\n        dispatch(setPrice(capacity[value].price));\n        dispatch(setPriceOneProduct(capacity[value].price));\n        dispatch(setSelectedHolder(false));\n        dispatch(setSelectedSealing(false));\n        dispatch(setCapacityKey(value));\n        dispatch(setQuantityOrders(1));\n        dispatch(setPriceWithSale(capacity[value]?.price * ((100-discount)/100) || 0))\n    };\n\n    const newDescr = descr.split(';');\n\n    return (\n        <CapacityBox>\n            <Subtitle>Ємність енергії:</Subtitle>\n            <Select options={options}\n                onChange={handleSelect}\n                placeholder={\"Виберіть опцію\"}\n                styles={selectStyles}\n            />\n            <Desc>{newDescr.map(item => <li key={item}>{item}</li>)}</Desc>\n        </CapacityBox>\n    );\n};","import { useMediaQuery } from 'react-responsive';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectOneProduct } from '../../redux/products/productsSelectors';\nimport { ProductPhoto } from './ProductPhoto';\nimport { Description } from './Description';\nimport { Capacity } from './Capacity';\nimport { CheckBox } from './Checkbox';\nimport { Order } from './Order';\nimport { Information } from './Information';\nimport { setQuantityOrders } from '../../redux/products/oneProductSlice';\nimport {\n  Wrapper,\n  Box,\n  Title,\n  Case\n} from './Card.styled';\n\nexport const Card = () => {\n    const mobileVersion = useMediaQuery({ query: '(max-width:1279px)' });\n    const dispatch = useDispatch();\n    const { name, capacity, information } = useSelector(selectOneProduct);\n\n    useEffect(() => {\n        dispatch(setQuantityOrders(1))\n    }, [dispatch]);\n\n\n    return (\n        mobileVersion ? (<Wrapper>\n\n            <Title>{name}</Title>\n            <ProductPhoto />\n            <Description />\n            {capacity && <Capacity />}\n            {capacity && <CheckBox />}\n            <Order />\n            {information && <Information information={information} />}\n   \n        </Wrapper>\n            \n        ) : (\n                \n            <Wrapper>\n                <Case>\n                    <div>\n                        <ProductPhoto />\n                        {capacity && <Capacity />}\n                    </div>\n                    <Box>\n                        <Title>{name}</Title>\n                        <Description />\n                        {capacity && <CheckBox />}\n                        <Order />\n                    </Box>\n                </Case>\n                    \n                {information && <Information information={information} />}\n                \n            </Wrapper>\n        )\n    );\n};","import FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport { styled } from '@mui/material/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectOneProduct, selectSelectedSealing, selectSelectedHolder, selectOneProductPrice, selectSealingPrice, selectHolderPrice } from '../../redux/products/productsSelectors';\nimport { setSelectedHolder, setSelectedSealing } from '../../redux/products/oneProductSlice';\nimport { themeMUI } from '../../styles/GlobalStyled';\nimport { yellow } from '@mui/material/colors';\nimport { Subtitle, Container, Group, ExtraPrice } from './Card.styled';\n\nconst StyledFormGroup = styled(FormGroup)({\n    gap: '10px',\n     [themeMUI.breakpoints.only('desktop')]: {\n            gap: '20px',\n        },\n    '& .MuiButtonBase-root': {\n        padding: '0px 10px 0px 0px'\n    },\n    '& .MuiFormControlLabel-root': {\n        margin: 0,\n    },\n    '& .MuiTypography-root': {\n        fontSize: '10px',\n        [themeMUI.breakpoints.only('desktop')]: {\n            fontSize: '20px',\n        },\n    }\n});\n\nconst StyledCheckbox = styled(Checkbox)({\n    '& .MuiSvgIcon-root': {\n        width: '20px',\n        height: '20px',\n        [themeMUI.breakpoints.only('desktop')]: {\n            width: '30px',\n            height: '30px',\n        },\n    },\n});\n\nexport const CheckBox = () => {\n    const dispatch = useDispatch();\n\n    const { holder } = useSelector(selectOneProduct);\n    const selectedSealing = useSelector(selectSelectedSealing);\n    const selectedHolder = useSelector(selectSelectedHolder);\n    const oneProductPrice = useSelector(selectOneProductPrice);\n    const sealingPrice = useSelector(selectSealingPrice);\n    const holderPrice = useSelector(selectHolderPrice);\n\n    const handleSealing = (e) => {\n        dispatch(setSelectedSealing(e.target.checked));\n    };\n\n\n    const handleHolder = (e) => {\n        dispatch(setSelectedHolder(e.target.checked));\n    };\n\n\n    return (\n        <Container>\n            <Subtitle>Додаткові послуги:</Subtitle>\n            <StyledFormGroup>\n                <Group>\n                    <FormControlLabel control={<StyledCheckbox\n                        value={selectedSealing}\n                        checked={selectedSealing}\n                        onChange={handleSealing}\n                        disabled={typeof oneProductPrice === \"string\"}\n                        sx={{\n                            color: yellow[800],\n                            '&.Mui-checked': {\n                                color: yellow[800],\n                            },\n                        }} />} label=\"Герметизація\" />\n                    {selectedSealing && <ExtraPrice>{`+ ${sealingPrice} грн`}</ExtraPrice>}\n                </Group>\n                {holder &&\n                    <Group>\n                        <FormControlLabel control={<StyledCheckbox\n                            onChange={handleHolder}\n                            checked={selectedHolder}\n                            value={selectedHolder}\n                            disabled={typeof oneProductPrice === \"string\"}\n                            sx={{\n                                color: yellow[800],\n                                '&.Mui-checked': {\n                                    color: yellow[800],\n                                },\n                            }} />} label=\"Використовувати холдери\" />\n                        {selectedHolder && <ExtraPrice>{`+ ${holderPrice} грн`}</ExtraPrice>}\n                    </Group>}\n            </StyledFormGroup>\n        </Container>\n    );\n};","import { useSelector } from 'react-redux';\nimport { getNewPrice } from '../../utils/helpers/getNewPrice';\nimport { selectOneProduct, selectPriceWithSale } from '../../redux/products/productsSelectors';\nimport sprite from '../../assets/images/sprite.svg';\nimport {\n  DescBox,\n  TextBox,\n  Text,\n  PriceContainer,\n  PriceBox,\n  NewPrice,\n  Price,\n  LikeBox,\n  Like,\n  Desc,\n  Item,\n  IconHeart,\n  IconSquare,\n  IconSpiral\n  } from \"./Card.styled\";\n\nexport const Description = () => {\n    const { codeOfGood, description, price, sale, discount, quantity } = useSelector(selectOneProduct);\n    const priceWithSale = useSelector(selectPriceWithSale);\n\n    const newDescription = description.split(';');\n\n    const newPrice = sale ? getNewPrice(discount, price) : price;\n    \n    return (\n        <DescBox>\n            <TextBox>\n                {quantity > 0 ? (\n                    <Text style={{ color: 'rgba(20, 211, 16, 1)' }}>В наявності</Text>\n                ) : (\n                    <Text style={{ color: 'rgba(255, 0, 0, 1)' }}>Немає в наявності</Text>\n                )}\n                <Text>Код товару: {codeOfGood}</Text>\n            </TextBox>\n            <PriceContainer>\n                <PriceBox>\n                    {sale ? <NewPrice>{priceWithSale !== 0 ? priceWithSale : newPrice} грн</NewPrice> : <NewPrice>{newPrice} грн</NewPrice>}\n                    {sale && <Price>{price} грн</Price>}\n                </PriceBox>\n                <LikeBox>\n                    <IconHeart />\n                    <Like>Додати до списку бажань</Like>\n                    <IconSquare>\n                        <use href={`${sprite}#icon-square`}></use>\n                    </IconSquare>\n                    <IconSpiral>\n                        <use href={`${sprite}#icon-Spiral_2`}></use>\n                    </IconSpiral>\n                </LikeBox>\n            </PriceContainer>\n            <Desc>{newDescription.map(i => <Item key={i}>{i}</Item>)}</Desc>\n        </DescBox>\n    );\n};","import { InfoBox, Subject, Info } from \"./Card.styled\";\n\nexport const Information = ({ information }) => {\n    const newInfo = information.split(\";\")\n    return (\n        <InfoBox>\n            <Subject>Опис</Subject>\n            <Info>{newInfo.map(item => <div key={item}><div>{item}</div><br /></div>)}</Info>\n        </InfoBox>\n    );\n};","import Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { useSelector } from 'react-redux';\nimport { selectOneProduct } from '../../redux/products/productsSelectors';\nimport { SliderDiv, ImageSmall, ImageBig, Image } from \"./Card.styled\";\n\nexport const ProductPhoto = () => {\n\n    const { name, image } = useSelector(selectOneProduct);\n\n    const settings = {\n        customPaging: function (i) {\n            return (\n                <a href={image[i]}>\n                    <ImageSmall src={image[i]} alt={name} />\n                </a>\n            );\n        },\n        dots: true,\n        dotsClass: \"slick-dots slick-thumb\",\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        focusOnSelect: true,\n        adaptiveHeight: true,\n    };\n\n    return (\n        image.length > 1 ? ( <SliderDiv className=\"slider-container\">\n            <Slider {...settings}>\n                {image.map((item) => <div key={item}>\n                    <ImageBig src={item} alt={name} />\n                </div>\n                )}\n            </Slider>\n        </SliderDiv>) : (<Image src={image[0]} alt={name} /> )\n      \n    );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { getOneProduct } from '../redux/products/productsOperations';\nimport {\n  selectOneProductError,\n  selectOneProductIsLoading,\n} from '../redux/products/productsSelectors';\nimport { CustomLoader } from 'components/Shared/CustomLoader/CustomLoader';\nimport { Card } from 'components/CardPage/Card';\n\nconst CardPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectOneProductIsLoading);\n  const error = useSelector(selectOneProductError);\n  const { cardId } = useParams();\n\n  useEffect(() => {\n    dispatch(getOneProduct(cardId));\n  }, [dispatch, cardId]);\n\n  return (\n    <>\n      {isLoading && <CustomLoader />}\n      {!isLoading && !error && <Card />}\n    </>\n  );\n};\n\nexport default CardPage;\n","export const getNewPrice = (discount, price) => {\n  if (typeof price === 'string') {\n    const [minPrice, maxPrice] = price.split('-').map(Number);\n    const minNewPrice = Math.ceil(minPrice - (minPrice * discount) / 100);\n    const maxNewPrice = Math.ceil(maxPrice - (maxPrice * discount) / 100);\n    return `${minNewPrice} - ${maxNewPrice}`;\n  } else {\n    return Math.ceil(price - (price * discount) / 100);\n  }\n};\n"],"names":["Capacity","dispatch","useDispatch","capacity","discount","useSelector","selectOneProduct","options","Object","keys","sort","a","b","map","item","value","label","descr","setDescr","useState","newDescr","split","_jsxs","CapacityBox","children","_jsx","Subtitle","Select","onChange","option","_capacity$value","description","setPrice","price","setPriceOneProduct","setSelectedHolder","setSelectedSealing","setCapacityKey","setQuantityOrders","setPriceWithSale","placeholder","styles","selectStyles","Desc","Card","mobileVersion","useMediaQuery","query","name","information","useEffect","Wrapper","Title","ProductPhoto","Description","CheckBox","Order","Information","Case","Box","StyledFormGroup","styled","FormGroup","gap","themeMUI","breakpoints","only","padding","margin","fontSize","StyledCheckbox","Checkbox","width","height","holder","selectedSealing","selectSelectedSealing","selectedHolder","selectSelectedHolder","oneProductPrice","selectOneProductPrice","sealingPrice","selectSealingPrice","holderPrice","selectHolderPrice","Container","Group","FormControlLabel","control","checked","e","target","disabled","sx","color","yellow","ExtraPrice","concat","codeOfGood","sale","quantity","priceWithSale","selectPriceWithSale","newDescription","newPrice","getNewPrice","DescBox","TextBox","Text","style","PriceContainer","PriceBox","NewPrice","Price","LikeBox","IconHeart","Like","IconSquare","href","sprite","IconSpiral","i","Item","_ref","newInfo","InfoBox","Subject","Info","image","settings","customPaging","ImageSmall","src","alt","dots","dotsClass","infinite","speed","slidesToShow","slidesToScroll","focusOnSelect","adaptiveHeight","length","SliderDiv","className","Slider","ImageBig","Image","CardPage","isLoading","selectOneProductIsLoading","error","selectOneProductError","cardId","useParams","getOneProduct","_Fragment","CustomLoader","minPrice","maxPrice","Number","minNewPrice","Math","ceil","maxNewPrice"],"sourceRoot":""}